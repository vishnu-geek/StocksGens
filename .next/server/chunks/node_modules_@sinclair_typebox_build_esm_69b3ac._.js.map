{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/guard/value.mjs"],"sourcesContent":["/** Returns true if this value is an async iterator */\nexport function IsAsyncIterator(value) {\n    return IsObject(value) && !IsArray(value) && !IsUint8Array(value) && Symbol.asyncIterator in value;\n}\n/** Returns true if this value is an array */\nexport function IsArray(value) {\n    return Array.isArray(value);\n}\n/** Returns true if this value is bigint */\nexport function IsBigInt(value) {\n    return typeof value === 'bigint';\n}\n/** Returns true if this value is a boolean */\nexport function IsBoolean(value) {\n    return typeof value === 'boolean';\n}\n/** Returns true if this value is a Date object */\nexport function IsDate(value) {\n    return value instanceof globalThis.Date;\n}\n/** Returns true if this value is a function */\nexport function IsFunction(value) {\n    return typeof value === 'function';\n}\n/** Returns true if this value is an iterator */\nexport function IsIterator(value) {\n    return IsObject(value) && !IsArray(value) && !IsUint8Array(value) && Symbol.iterator in value;\n}\n/** Returns true if this value is null */\nexport function IsNull(value) {\n    return value === null;\n}\n/** Returns true if this value is number */\nexport function IsNumber(value) {\n    return typeof value === 'number';\n}\n/** Returns true if this value is an object */\nexport function IsObject(value) {\n    return typeof value === 'object' && value !== null;\n}\n/** Returns true if this value is RegExp */\nexport function IsRegExp(value) {\n    return value instanceof globalThis.RegExp;\n}\n/** Returns true if this value is string */\nexport function IsString(value) {\n    return typeof value === 'string';\n}\n/** Returns true if this value is symbol */\nexport function IsSymbol(value) {\n    return typeof value === 'symbol';\n}\n/** Returns true if this value is a Uint8Array */\nexport function IsUint8Array(value) {\n    return value instanceof globalThis.Uint8Array;\n}\n/** Returns true if this value is undefined */\nexport function IsUndefined(value) {\n    return value === undefined;\n}\n"],"names":[],"mappings":"AAAA,oDAAoD;;;;;;;;;;;;;;;;;AAC7C,SAAS,gBAAgB,KAAK;IACjC,OAAO,SAAS,UAAU,CAAC,QAAQ,UAAU,CAAC,aAAa,UAAU,OAAO,aAAa,IAAI;AACjG;AAEO,SAAS,QAAQ,KAAK;IACzB,OAAO,MAAM,OAAO,CAAC;AACzB;AAEO,SAAS,SAAS,KAAK;IAC1B,OAAO,OAAO,UAAU;AAC5B;AAEO,SAAS,UAAU,KAAK;IAC3B,OAAO,OAAO,UAAU;AAC5B;AAEO,SAAS,OAAO,KAAK;IACxB,OAAO,iBAAiB,WAAW,IAAI;AAC3C;AAEO,SAAS,WAAW,KAAK;IAC5B,OAAO,OAAO,UAAU;AAC5B;AAEO,SAAS,WAAW,KAAK;IAC5B,OAAO,SAAS,UAAU,CAAC,QAAQ,UAAU,CAAC,aAAa,UAAU,OAAO,QAAQ,IAAI;AAC5F;AAEO,SAAS,OAAO,KAAK;IACxB,OAAO,UAAU;AACrB;AAEO,SAAS,SAAS,KAAK;IAC1B,OAAO,OAAO,UAAU;AAC5B;AAEO,SAAS,SAAS,KAAK;IAC1B,OAAO,OAAO,UAAU,YAAY,UAAU;AAClD;AAEO,SAAS,SAAS,KAAK;IAC1B,OAAO,iBAAiB,WAAW,MAAM;AAC7C;AAEO,SAAS,SAAS,KAAK;IAC1B,OAAO,OAAO,UAAU;AAC5B;AAEO,SAAS,SAAS,KAAK;IAC1B,OAAO,OAAO,UAAU;AAC5B;AAEO,SAAS,aAAa,KAAK;IAC9B,OAAO,iBAAiB,WAAW,UAAU;AACjD;AAEO,SAAS,YAAY,KAAK;IAC7B,OAAO,UAAU;AACrB","ignoreList":[0]}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/clone/value.mjs"],"sourcesContent":["import * as ValueGuard from '../guard/value.mjs';\nfunction ArrayType(value) {\n    return value.map((value) => Visit(value));\n}\nfunction DateType(value) {\n    return new Date(value.getTime());\n}\nfunction Uint8ArrayType(value) {\n    return new Uint8Array(value);\n}\nfunction RegExpType(value) {\n    return new RegExp(value.source, value.flags);\n}\nfunction ObjectType(value) {\n    const result = {};\n    for (const key of Object.getOwnPropertyNames(value)) {\n        result[key] = Visit(value[key]);\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n        result[key] = Visit(value[key]);\n    }\n    return result;\n}\n// prettier-ignore\nfunction Visit(value) {\n    return (ValueGuard.IsArray(value) ? ArrayType(value) :\n        ValueGuard.IsDate(value) ? DateType(value) :\n            ValueGuard.IsUint8Array(value) ? Uint8ArrayType(value) :\n                ValueGuard.IsRegExp(value) ? RegExpType(value) :\n                    ValueGuard.IsObject(value) ? ObjectType(value) :\n                        value);\n}\n/** Clones a value */\nexport function Clone(value) {\n    return Visit(value);\n}\n"],"names":[],"mappings":";;;AAAA;;AACA,SAAS,UAAU,KAAK;IACpB,OAAO,MAAM,GAAG,CAAC,CAAC,QAAU,MAAM;AACtC;AACA,SAAS,SAAS,KAAK;IACnB,OAAO,IAAI,KAAK,MAAM,OAAO;AACjC;AACA,SAAS,eAAe,KAAK;IACzB,OAAO,IAAI,WAAW;AAC1B;AACA,SAAS,WAAW,KAAK;IACrB,OAAO,IAAI,OAAO,MAAM,MAAM,EAAE,MAAM,KAAK;AAC/C;AACA,SAAS,WAAW,KAAK;IACrB,MAAM,SAAS,CAAC;IAChB,KAAK,MAAM,OAAO,OAAO,mBAAmB,CAAC,OAAQ;QACjD,MAAM,CAAC,IAAI,GAAG,MAAM,KAAK,CAAC,IAAI;IAClC;IACA,KAAK,MAAM,OAAO,OAAO,qBAAqB,CAAC,OAAQ;QACnD,MAAM,CAAC,IAAI,GAAG,MAAM,KAAK,CAAC,IAAI;IAClC;IACA,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,MAAM,KAAK;IAChB,OAAQ,mLAAW,OAAO,CAAC,SAAS,UAAU,SAC1C,mLAAW,MAAM,CAAC,SAAS,SAAS,SAChC,mLAAW,YAAY,CAAC,SAAS,eAAe,SAC5C,mLAAW,QAAQ,CAAC,SAAS,WAAW,SACpC,mLAAW,QAAQ,CAAC,SAAS,WAAW,SACpC;AACxB;AAEO,SAAS,MAAM,KAAK;IACvB,OAAO,MAAM;AACjB","ignoreList":[0]}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/clone/type.mjs"],"sourcesContent":["import { Clone } from './value.mjs';\n/** Clones a Rest */\nexport function CloneRest(schemas) {\n    return schemas.map((schema) => CloneType(schema));\n}\n/** Clones a Type */\nexport function CloneType(schema, options = {}) {\n    return { ...Clone(schema), ...options };\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,SAAS,UAAU,OAAO;IAC7B,OAAO,QAAQ,GAAG,CAAC,CAAC,SAAW,UAAU;AAC7C;AAEO,SAAS,UAAU,MAAM,EAAE,UAAU,CAAC,CAAC;IAC1C,OAAO;QAAE,GAAG,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE,OAAO;QAAE,GAAG,OAAO;IAAC;AAC1C","ignoreList":[0]}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/error/error.mjs"],"sourcesContent":["/** The base Error type thrown for all TypeBox exceptions  */\nexport class TypeBoxError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n"],"names":[],"mappings":"AAAA,2DAA2D;;;AACpD,MAAM,qBAAqB;IAC9B,YAAY,OAAO,CAAE;QACjB,KAAK,CAAC;IACV;AACJ","ignoreList":[0]}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/symbols/symbols.mjs"],"sourcesContent":["/** Symbol key applied to transform types */\nexport const TransformKind = Symbol.for('TypeBox.Transform');\n/** Symbol key applied to readonly types */\nexport const ReadonlyKind = Symbol.for('TypeBox.Readonly');\n/** Symbol key applied to optional types */\nexport const OptionalKind = Symbol.for('TypeBox.Optional');\n/** Symbol key applied to types */\nexport const Hint = Symbol.for('TypeBox.Hint');\n/** Symbol key applied to types */\nexport const Kind = Symbol.for('TypeBox.Kind');\n"],"names":[],"mappings":"AAAA,0CAA0C;;;;;;;AACnC,MAAM,gBAAgB,OAAO,GAAG,CAAC;AAEjC,MAAM,eAAe,OAAO,GAAG,CAAC;AAEhC,MAAM,eAAe,OAAO,GAAG,CAAC;AAEhC,MAAM,OAAO,OAAO,GAAG,CAAC;AAExB,MAAM,OAAO,OAAO,GAAG,CAAC","ignoreList":[0]}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/guard/kind.mjs"],"sourcesContent":["import * as ValueGuard from './value.mjs';\nimport { Kind, Hint, TransformKind, ReadonlyKind, OptionalKind } from '../symbols/index.mjs';\n/** `[Kind-Only]` Returns true if this value has a Readonly symbol */\nexport function IsReadonly(value) {\n    return ValueGuard.IsObject(value) && value[ReadonlyKind] === 'Readonly';\n}\n/** `[Kind-Only]` Returns true if this value has a Optional symbol */\nexport function IsOptional(value) {\n    return ValueGuard.IsObject(value) && value[OptionalKind] === 'Optional';\n}\n/** `[Kind-Only]` Returns true if the given value is TAny */\nexport function IsAny(value) {\n    return IsKindOf(value, 'Any');\n}\n/** `[Kind-Only]` Returns true if the given value is TArray */\nexport function IsArray(value) {\n    return IsKindOf(value, 'Array');\n}\n/** `[Kind-Only]` Returns true if the given value is TAsyncIterator */\nexport function IsAsyncIterator(value) {\n    return IsKindOf(value, 'AsyncIterator');\n}\n/** `[Kind-Only]` Returns true if the given value is TBigInt */\nexport function IsBigInt(value) {\n    return IsKindOf(value, 'BigInt');\n}\n/** `[Kind-Only]` Returns true if the given value is TBoolean */\nexport function IsBoolean(value) {\n    return IsKindOf(value, 'Boolean');\n}\n/** `[Kind-Only]` Returns true if the given value is TConstructor */\nexport function IsConstructor(value) {\n    return IsKindOf(value, 'Constructor');\n}\n/** `[Kind-Only]` Returns true if the given value is TDate */\nexport function IsDate(value) {\n    return IsKindOf(value, 'Date');\n}\n/** `[Kind-Only]` Returns true if the given value is TFunction */\nexport function IsFunction(value) {\n    return IsKindOf(value, 'Function');\n}\n/** `[Kind-Only]` Returns true if the given value is TInteger */\nexport function IsInteger(value) {\n    return IsKindOf(value, 'Integer');\n}\n/** `[Kind-Only]` Returns true if the given schema is TProperties */\nexport function IsProperties(value) {\n    return ValueGuard.IsObject(value);\n}\n/** `[Kind-Only]` Returns true if the given value is TIntersect */\nexport function IsIntersect(value) {\n    return IsKindOf(value, 'Intersect');\n}\n/** `[Kind-Only]` Returns true if the given value is TIterator */\nexport function IsIterator(value) {\n    return IsKindOf(value, 'Iterator');\n}\n/** `[Kind-Only]` Returns true if the given value is a TKind with the given name. */\nexport function IsKindOf(value, kind) {\n    return ValueGuard.IsObject(value) && Kind in value && value[Kind] === kind;\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral<string> */\nexport function IsLiteralString(value) {\n    return IsLiteral(value) && ValueGuard.IsString(value.const);\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral<number> */\nexport function IsLiteralNumber(value) {\n    return IsLiteral(value) && ValueGuard.IsNumber(value.const);\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral<boolean> */\nexport function IsLiteralBoolean(value) {\n    return IsLiteral(value) && ValueGuard.IsBoolean(value.const);\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral */\nexport function IsLiteral(value) {\n    return IsKindOf(value, 'Literal');\n}\n/** `[Kind-Only]` Returns true if the given value is a TMappedKey */\nexport function IsMappedKey(value) {\n    return IsKindOf(value, 'MappedKey');\n}\n/** `[Kind-Only]` Returns true if the given value is TMappedResult */\nexport function IsMappedResult(value) {\n    return IsKindOf(value, 'MappedResult');\n}\n/** `[Kind-Only]` Returns true if the given value is TNever */\nexport function IsNever(value) {\n    return IsKindOf(value, 'Never');\n}\n/** `[Kind-Only]` Returns true if the given value is TNot */\nexport function IsNot(value) {\n    return IsKindOf(value, 'Not');\n}\n/** `[Kind-Only]` Returns true if the given value is TNull */\nexport function IsNull(value) {\n    return IsKindOf(value, 'Null');\n}\n/** `[Kind-Only]` Returns true if the given value is TNumber */\nexport function IsNumber(value) {\n    return IsKindOf(value, 'Number');\n}\n/** `[Kind-Only]` Returns true if the given value is TObject */\nexport function IsObject(value) {\n    return IsKindOf(value, 'Object');\n}\n/** `[Kind-Only]` Returns true if the given value is TPromise */\nexport function IsPromise(value) {\n    return IsKindOf(value, 'Promise');\n}\n/** `[Kind-Only]` Returns true if the given value is TRecord */\nexport function IsRecord(value) {\n    return IsKindOf(value, 'Record');\n}\n/** `[Kind-Only]` Returns true if this value is TRecursive */\nexport function IsRecursive(value) {\n    return ValueGuard.IsObject(value) && Hint in value && value[Hint] === 'Recursive';\n}\n/** `[Kind-Only]` Returns true if the given value is TRef */\nexport function IsRef(value) {\n    return IsKindOf(value, 'Ref');\n}\n/** `[Kind-Only]` Returns true if the given value is TRegExp */\nexport function IsRegExp(value) {\n    return IsKindOf(value, 'RegExp');\n}\n/** `[Kind-Only]` Returns true if the given value is TString */\nexport function IsString(value) {\n    return IsKindOf(value, 'String');\n}\n/** `[Kind-Only]` Returns true if the given value is TSymbol */\nexport function IsSymbol(value) {\n    return IsKindOf(value, 'Symbol');\n}\n/** `[Kind-Only]` Returns true if the given value is TTemplateLiteral */\nexport function IsTemplateLiteral(value) {\n    return IsKindOf(value, 'TemplateLiteral');\n}\n/** `[Kind-Only]` Returns true if the given value is TThis */\nexport function IsThis(value) {\n    return IsKindOf(value, 'This');\n}\n/** `[Kind-Only]` Returns true of this value is TTransform */\nexport function IsTransform(value) {\n    return ValueGuard.IsObject(value) && TransformKind in value;\n}\n/** `[Kind-Only]` Returns true if the given value is TTuple */\nexport function IsTuple(value) {\n    return IsKindOf(value, 'Tuple');\n}\n/** `[Kind-Only]` Returns true if the given value is TUndefined */\nexport function IsUndefined(value) {\n    return IsKindOf(value, 'Undefined');\n}\n/** `[Kind-Only]` Returns true if the given value is TUnion */\nexport function IsUnion(value) {\n    return IsKindOf(value, 'Union');\n}\n/** `[Kind-Only]` Returns true if the given value is TUint8Array */\nexport function IsUint8Array(value) {\n    return IsKindOf(value, 'Uint8Array');\n}\n/** `[Kind-Only]` Returns true if the given value is TUnknown */\nexport function IsUnknown(value) {\n    return IsKindOf(value, 'Unknown');\n}\n/** `[Kind-Only]` Returns true if the given value is a raw TUnsafe */\nexport function IsUnsafe(value) {\n    return IsKindOf(value, 'Unsafe');\n}\n/** `[Kind-Only]` Returns true if the given value is TVoid */\nexport function IsVoid(value) {\n    return IsKindOf(value, 'Void');\n}\n/** `[Kind-Only]` Returns true if the given value is TKind */\nexport function IsKind(value) {\n    return ValueGuard.IsObject(value) && Kind in value && ValueGuard.IsString(value[Kind]);\n}\n/** `[Kind-Only]` Returns true if the given value is TSchema */\nexport function IsSchema(value) {\n    // prettier-ignore\n    return (IsAny(value) ||\n        IsArray(value) ||\n        IsBoolean(value) ||\n        IsBigInt(value) ||\n        IsAsyncIterator(value) ||\n        IsConstructor(value) ||\n        IsDate(value) ||\n        IsFunction(value) ||\n        IsInteger(value) ||\n        IsIntersect(value) ||\n        IsIterator(value) ||\n        IsLiteral(value) ||\n        IsMappedKey(value) ||\n        IsMappedResult(value) ||\n        IsNever(value) ||\n        IsNot(value) ||\n        IsNull(value) ||\n        IsNumber(value) ||\n        IsObject(value) ||\n        IsPromise(value) ||\n        IsRecord(value) ||\n        IsRef(value) ||\n        IsRegExp(value) ||\n        IsString(value) ||\n        IsSymbol(value) ||\n        IsTemplateLiteral(value) ||\n        IsThis(value) ||\n        IsTuple(value) ||\n        IsUndefined(value) ||\n        IsUnion(value) ||\n        IsUint8Array(value) ||\n        IsUnknown(value) ||\n        IsUnsafe(value) ||\n        IsVoid(value) ||\n        IsKind(value));\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/guard/type.mjs"],"sourcesContent":["import * as ValueGuard from './value.mjs';\nimport { Kind, Hint, TransformKind, ReadonlyKind, OptionalKind } from '../symbols/index.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\nexport class TypeGuardUnknownTypeError extends TypeBoxError {\n}\nconst KnownTypes = [\n    'Any',\n    'Array',\n    'AsyncIterator',\n    'BigInt',\n    'Boolean',\n    'Constructor',\n    'Date',\n    'Enum',\n    'Function',\n    'Integer',\n    'Intersect',\n    'Iterator',\n    'Literal',\n    'MappedKey',\n    'MappedResult',\n    'Not',\n    'Null',\n    'Number',\n    'Object',\n    'Promise',\n    'Record',\n    'Ref',\n    'RegExp',\n    'String',\n    'Symbol',\n    'TemplateLiteral',\n    'This',\n    'Tuple',\n    'Undefined',\n    'Union',\n    'Uint8Array',\n    'Unknown',\n    'Void',\n];\nfunction IsPattern(value) {\n    try {\n        new RegExp(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction IsControlCharacterFree(value) {\n    if (!ValueGuard.IsString(value))\n        return false;\n    for (let i = 0; i < value.length; i++) {\n        const code = value.charCodeAt(i);\n        if ((code >= 7 && code <= 13) || code === 27 || code === 127) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction IsAdditionalProperties(value) {\n    return IsOptionalBoolean(value) || IsSchema(value);\n}\nfunction IsOptionalBigInt(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsBigInt(value);\n}\nfunction IsOptionalNumber(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsNumber(value);\n}\nfunction IsOptionalBoolean(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsBoolean(value);\n}\nfunction IsOptionalString(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsString(value);\n}\nfunction IsOptionalPattern(value) {\n    return ValueGuard.IsUndefined(value) || (ValueGuard.IsString(value) && IsControlCharacterFree(value) && IsPattern(value));\n}\nfunction IsOptionalFormat(value) {\n    return ValueGuard.IsUndefined(value) || (ValueGuard.IsString(value) && IsControlCharacterFree(value));\n}\nfunction IsOptionalSchema(value) {\n    return ValueGuard.IsUndefined(value) || IsSchema(value);\n}\n// ------------------------------------------------------------------\n// Modifiers\n// ------------------------------------------------------------------\n/** Returns true if this value has a Readonly symbol */\nexport function IsReadonly(value) {\n    return ValueGuard.IsObject(value) && value[ReadonlyKind] === 'Readonly';\n}\n/** Returns true if this value has a Optional symbol */\nexport function IsOptional(value) {\n    return ValueGuard.IsObject(value) && value[OptionalKind] === 'Optional';\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\n/** Returns true if the given value is TAny */\nexport function IsAny(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Any') &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TArray */\nexport function IsArray(value) {\n    return (IsKindOf(value, 'Array') &&\n        value.type === 'array' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.items) &&\n        IsOptionalNumber(value.minItems) &&\n        IsOptionalNumber(value.maxItems) &&\n        IsOptionalBoolean(value.uniqueItems) &&\n        IsOptionalSchema(value.contains) &&\n        IsOptionalNumber(value.minContains) &&\n        IsOptionalNumber(value.maxContains));\n}\n/** Returns true if the given value is TAsyncIterator */\nexport function IsAsyncIterator(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'AsyncIterator') &&\n        value.type === 'AsyncIterator' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.items));\n}\n/** Returns true if the given value is TBigInt */\nexport function IsBigInt(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'BigInt') &&\n        value.type === 'bigint' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalBigInt(value.exclusiveMaximum) &&\n        IsOptionalBigInt(value.exclusiveMinimum) &&\n        IsOptionalBigInt(value.maximum) &&\n        IsOptionalBigInt(value.minimum) &&\n        IsOptionalBigInt(value.multipleOf));\n}\n/** Returns true if the given value is TBoolean */\nexport function IsBoolean(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Boolean') &&\n        value.type === 'boolean' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TConstructor */\nexport function IsConstructor(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Constructor') &&\n        value.type === 'Constructor' &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsArray(value.parameters) &&\n        value.parameters.every(schema => IsSchema(schema)) &&\n        IsSchema(value.returns));\n}\n/** Returns true if the given value is TDate */\nexport function IsDate(value) {\n    return (IsKindOf(value, 'Date') &&\n        value.type === 'Date' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.exclusiveMaximumTimestamp) &&\n        IsOptionalNumber(value.exclusiveMinimumTimestamp) &&\n        IsOptionalNumber(value.maximumTimestamp) &&\n        IsOptionalNumber(value.minimumTimestamp) &&\n        IsOptionalNumber(value.multipleOfTimestamp));\n}\n/** Returns true if the given value is TFunction */\nexport function IsFunction(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Function') &&\n        value.type === 'Function' &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsArray(value.parameters) &&\n        value.parameters.every(schema => IsSchema(schema)) &&\n        IsSchema(value.returns));\n}\n/** Returns true if the given value is TInteger */\nexport function IsInteger(value) {\n    return (IsKindOf(value, 'Integer') &&\n        value.type === 'integer' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.exclusiveMaximum) &&\n        IsOptionalNumber(value.exclusiveMinimum) &&\n        IsOptionalNumber(value.maximum) &&\n        IsOptionalNumber(value.minimum) &&\n        IsOptionalNumber(value.multipleOf));\n}\n/** Returns true if the given schema is TProperties */\nexport function IsProperties(value) {\n    // prettier-ignore\n    return (ValueGuard.IsObject(value) &&\n        Object.entries(value).every(([key, schema]) => IsControlCharacterFree(key) && IsSchema(schema)));\n}\n/** Returns true if the given value is TIntersect */\nexport function IsIntersect(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Intersect') &&\n        (ValueGuard.IsString(value.type) && value.type !== 'object' ? false : true) &&\n        ValueGuard.IsArray(value.allOf) &&\n        value.allOf.every(schema => IsSchema(schema) && !IsTransform(schema)) &&\n        IsOptionalString(value.type) &&\n        (IsOptionalBoolean(value.unevaluatedProperties) || IsOptionalSchema(value.unevaluatedProperties)) &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TIterator */\nexport function IsIterator(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Iterator') &&\n        value.type === 'Iterator' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.items));\n}\n/** Returns true if the given value is a TKind with the given name. */\nexport function IsKindOf(value, kind) {\n    return ValueGuard.IsObject(value) && Kind in value && value[Kind] === kind;\n}\n/** Returns true if the given value is TLiteral<string> */\nexport function IsLiteralString(value) {\n    return IsLiteral(value) && ValueGuard.IsString(value.const);\n}\n/** Returns true if the given value is TLiteral<number> */\nexport function IsLiteralNumber(value) {\n    return IsLiteral(value) && ValueGuard.IsNumber(value.const);\n}\n/** Returns true if the given value is TLiteral<boolean> */\nexport function IsLiteralBoolean(value) {\n    return IsLiteral(value) && ValueGuard.IsBoolean(value.const);\n}\n/** Returns true if the given value is TLiteral */\nexport function IsLiteral(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Literal') &&\n        IsOptionalString(value.$id) && IsLiteralValue(value.const));\n}\n/** Returns true if the given value is a TLiteralValue */\nexport function IsLiteralValue(value) {\n    return ValueGuard.IsBoolean(value) || ValueGuard.IsNumber(value) || ValueGuard.IsString(value);\n}\n/** Returns true if the given value is a TMappedKey */\nexport function IsMappedKey(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'MappedKey') &&\n        ValueGuard.IsArray(value.keys) &&\n        value.keys.every(key => ValueGuard.IsNumber(key) || ValueGuard.IsString(key)));\n}\n/** Returns true if the given value is TMappedResult */\nexport function IsMappedResult(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'MappedResult') &&\n        IsProperties(value.properties));\n}\n/** Returns true if the given value is TNever */\nexport function IsNever(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Never') &&\n        ValueGuard.IsObject(value.not) &&\n        Object.getOwnPropertyNames(value.not).length === 0);\n}\n/** Returns true if the given value is TNot */\nexport function IsNot(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Not') &&\n        IsSchema(value.not));\n}\n/** Returns true if the given value is TNull */\nexport function IsNull(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Null') &&\n        value.type === 'null' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TNumber */\nexport function IsNumber(value) {\n    return (IsKindOf(value, 'Number') &&\n        value.type === 'number' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.exclusiveMaximum) &&\n        IsOptionalNumber(value.exclusiveMinimum) &&\n        IsOptionalNumber(value.maximum) &&\n        IsOptionalNumber(value.minimum) &&\n        IsOptionalNumber(value.multipleOf));\n}\n/** Returns true if the given value is TObject */\nexport function IsObject(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Object') &&\n        value.type === 'object' &&\n        IsOptionalString(value.$id) &&\n        IsProperties(value.properties) &&\n        IsAdditionalProperties(value.additionalProperties) &&\n        IsOptionalNumber(value.minProperties) &&\n        IsOptionalNumber(value.maxProperties));\n}\n/** Returns true if the given value is TPromise */\nexport function IsPromise(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Promise') &&\n        value.type === 'Promise' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.item));\n}\n/** Returns true if the given value is TRecord */\nexport function IsRecord(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Record') &&\n        value.type === 'object' &&\n        IsOptionalString(value.$id) &&\n        IsAdditionalProperties(value.additionalProperties) &&\n        ValueGuard.IsObject(value.patternProperties) &&\n        ((schema) => {\n            const keys = Object.getOwnPropertyNames(schema.patternProperties);\n            return (keys.length === 1 &&\n                IsPattern(keys[0]) &&\n                ValueGuard.IsObject(schema.patternProperties) &&\n                IsSchema(schema.patternProperties[keys[0]]));\n        })(value));\n}\n/** Returns true if this value is TRecursive */\nexport function IsRecursive(value) {\n    return ValueGuard.IsObject(value) && Hint in value && value[Hint] === 'Recursive';\n}\n/** Returns true if the given value is TRef */\nexport function IsRef(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Ref') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsString(value.$ref));\n}\n/** Returns true if the given value is TRegExp */\nexport function IsRegExp(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'RegExp') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsString(value.source) &&\n        ValueGuard.IsString(value.flags) &&\n        IsOptionalNumber(value.maxLength) &&\n        IsOptionalNumber(value.minLength));\n}\n/** Returns true if the given value is TString */\nexport function IsString(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'String') &&\n        value.type === 'string' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.minLength) &&\n        IsOptionalNumber(value.maxLength) &&\n        IsOptionalPattern(value.pattern) &&\n        IsOptionalFormat(value.format));\n}\n/** Returns true if the given value is TSymbol */\nexport function IsSymbol(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Symbol') &&\n        value.type === 'symbol' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TTemplateLiteral */\nexport function IsTemplateLiteral(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'TemplateLiteral') &&\n        value.type === 'string' &&\n        ValueGuard.IsString(value.pattern) &&\n        value.pattern[0] === '^' &&\n        value.pattern[value.pattern.length - 1] === '$');\n}\n/** Returns true if the given value is TThis */\nexport function IsThis(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'This') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsString(value.$ref));\n}\n/** Returns true of this value is TTransform */\nexport function IsTransform(value) {\n    return ValueGuard.IsObject(value) && TransformKind in value;\n}\n/** Returns true if the given value is TTuple */\nexport function IsTuple(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Tuple') &&\n        value.type === 'array' &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsNumber(value.minItems) &&\n        ValueGuard.IsNumber(value.maxItems) &&\n        value.minItems === value.maxItems &&\n        (( // empty\n        ValueGuard.IsUndefined(value.items) &&\n            ValueGuard.IsUndefined(value.additionalItems) &&\n            value.minItems === 0) || (ValueGuard.IsArray(value.items) &&\n            value.items.every(schema => IsSchema(schema)))));\n}\n/** Returns true if the given value is TUndefined */\nexport function IsUndefined(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Undefined') &&\n        value.type === 'undefined' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TUnion<Literal<string | number>[]> */\nexport function IsUnionLiteral(value) {\n    return IsUnion(value) && value.anyOf.every((schema) => IsLiteralString(schema) || IsLiteralNumber(schema));\n}\n/** Returns true if the given value is TUnion */\nexport function IsUnion(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Union') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsObject(value) &&\n        ValueGuard.IsArray(value.anyOf) &&\n        value.anyOf.every(schema => IsSchema(schema)));\n}\n/** Returns true if the given value is TUint8Array */\nexport function IsUint8Array(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Uint8Array') &&\n        value.type === 'Uint8Array' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.minByteLength) &&\n        IsOptionalNumber(value.maxByteLength));\n}\n/** Returns true if the given value is TUnknown */\nexport function IsUnknown(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Unknown') &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is a raw TUnsafe */\nexport function IsUnsafe(value) {\n    return IsKindOf(value, 'Unsafe');\n}\n/** Returns true if the given value is TVoid */\nexport function IsVoid(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Void') &&\n        value.type === 'void' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TKind */\nexport function IsKind(value) {\n    return ValueGuard.IsObject(value) && Kind in value && ValueGuard.IsString(value[Kind]) && !KnownTypes.includes(value[Kind]);\n}\n/** Returns true if the given value is TSchema */\nexport function IsSchema(value) {\n    // prettier-ignore\n    return (ValueGuard.IsObject(value)) && (IsAny(value) ||\n        IsArray(value) ||\n        IsBoolean(value) ||\n        IsBigInt(value) ||\n        IsAsyncIterator(value) ||\n        IsConstructor(value) ||\n        IsDate(value) ||\n        IsFunction(value) ||\n        IsInteger(value) ||\n        IsIntersect(value) ||\n        IsIterator(value) ||\n        IsLiteral(value) ||\n        IsMappedKey(value) ||\n        IsMappedResult(value) ||\n        IsNever(value) ||\n        IsNot(value) ||\n        IsNull(value) ||\n        IsNumber(value) ||\n        IsObject(value) ||\n        IsPromise(value) ||\n        IsRecord(value) ||\n        IsRef(value) ||\n        IsRegExp(value) ||\n        IsString(value) ||\n        IsSymbol(value) ||\n        IsTemplateLiteral(value) ||\n        IsThis(value) ||\n        IsTuple(value) ||\n        IsUndefined(value) ||\n        IsUnion(value) ||\n        IsUint8Array(value) ||\n        IsUnknown(value) ||\n        IsUnsafe(value) ||\n        IsVoid(value) ||\n        IsKind(value));\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 727, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 733, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 737, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 754, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/helpers/helpers.mjs"],"sourcesContent":["/** Increments the given string value + 1 */\nexport function Increment(T) {\n    return (parseInt(T) + 1).toString();\n}\n"],"names":[],"mappings":"AAAA,0CAA0C;;;AACnC,SAAS,UAAU,CAAC;IACvB,OAAO,CAAC,SAAS,KAAK,CAAC,EAAE,QAAQ;AACrC","ignoreList":[0]}},
    {"offset": {"line": 760, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 766, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 768, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 783, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/patterns/patterns.mjs"],"sourcesContent":["export const PatternBoolean = '(true|false)';\nexport const PatternNumber = '(0|[1-9][0-9]*)';\nexport const PatternString = '(.*)';\nexport const PatternNever = '(?!.*)';\nexport const PatternBooleanExact = `^${PatternBoolean}$`;\nexport const PatternNumberExact = `^${PatternNumber}$`;\nexport const PatternStringExact = `^${PatternString}$`;\nexport const PatternNeverExact = `^${PatternNever}$`;\n"],"names":[],"mappings":";;;;;;;;;;AAAO,MAAM,iBAAiB;AACvB,MAAM,gBAAgB;AACtB,MAAM,gBAAgB;AACtB,MAAM,eAAe;AACrB,MAAM,sBAAsB,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;AACjD,MAAM,qBAAqB,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;AAC/C,MAAM,qBAAqB,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;AAC/C,MAAM,oBAAoB,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 801, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 807, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 809, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 824, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/registry/format.mjs"],"sourcesContent":["/** A registry for user defined string formats */\nconst map = new Map();\n/** Returns the entries in this registry */\nexport function Entries() {\n    return new Map(map);\n}\n/** Clears all user defined string formats */\nexport function Clear() {\n    return map.clear();\n}\n/** Deletes a registered format */\nexport function Delete(format) {\n    return map.delete(format);\n}\n/** Returns true if the user defined string format exists */\nexport function Has(format) {\n    return map.has(format);\n}\n/** Sets a validation function for a user defined string format */\nexport function Set(format, func) {\n    map.set(format, func);\n}\n/** Gets a validation function for a user defined string format */\nexport function Get(format) {\n    return map.get(format);\n}\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;;;;;AAC/C,MAAM,MAAM,IAAI;AAET,SAAS;IACZ,OAAO,IAAI,IAAI;AACnB;AAEO,SAAS;IACZ,OAAO,IAAI,KAAK;AACpB;AAEO,SAAS,OAAO,MAAM;IACzB,OAAO,IAAI,MAAM,CAAC;AACtB;AAEO,SAAS,IAAI,MAAM;IACtB,OAAO,IAAI,GAAG,CAAC;AACnB;AAEO,SAAS,IAAI,MAAM,EAAE,IAAI;IAC5B,IAAI,GAAG,CAAC,QAAQ;AACpB;AAEO,SAAS,IAAI,MAAM;IACtB,OAAO,IAAI,GAAG,CAAC;AACnB","ignoreList":[0]}},
    {"offset": {"line": 851, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 857, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/registry/type.mjs"],"sourcesContent":["/** A registry for user defined types */\nconst map = new Map();\n/** Returns the entries in this registry */\nexport function Entries() {\n    return new Map(map);\n}\n/** Clears all user defined types */\nexport function Clear() {\n    return map.clear();\n}\n/** Deletes a registered type */\nexport function Delete(kind) {\n    return map.delete(kind);\n}\n/** Returns true if this registry contains this kind */\nexport function Has(kind) {\n    return map.has(kind);\n}\n/** Sets a validation function for a user defined type */\nexport function Set(kind, func) {\n    map.set(kind, func);\n}\n/** Gets a custom validation function for a user defined type */\nexport function Get(kind) {\n    return map.get(kind);\n}\n"],"names":[],"mappings":"AAAA,sCAAsC;;;;;;;;AACtC,MAAM,MAAM,IAAI;AAET,SAAS;IACZ,OAAO,IAAI,IAAI;AACnB;AAEO,SAAS;IACZ,OAAO,IAAI,KAAK;AACpB;AAEO,SAAS,OAAO,IAAI;IACvB,OAAO,IAAI,MAAM,CAAC;AACtB;AAEO,SAAS,IAAI,IAAI;IACpB,OAAO,IAAI,GAAG,CAAC;AACnB;AAEO,SAAS,IAAI,IAAI,EAAE,IAAI;IAC1B,IAAI,GAAG,CAAC,MAAM;AAClB;AAEO,SAAS,IAAI,IAAI;IACpB,OAAO,IAAI,GAAG,CAAC;AACnB","ignoreList":[0]}},
    {"offset": {"line": 884, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 893, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 909, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/sets/set.mjs"],"sourcesContent":["/** Returns true if element right is in the set of left */\n// prettier-ignore\nexport function SetIncludes(T, S) {\n    return T.includes(S);\n}\n/** Returns true if left is a subset of right */\nexport function SetIsSubset(T, S) {\n    return T.every((L) => SetIncludes(S, L));\n}\n/** Returns a distinct set of elements */\nexport function SetDistinct(T) {\n    return [...new Set(T)];\n}\n/** Returns the Intersect of the given sets */\nexport function SetIntersect(T, S) {\n    return T.filter((L) => S.includes(L));\n}\n/** Returns the Union of the given sets */\nexport function SetUnion(T, S) {\n    return [...T, ...S];\n}\n/** Returns the Complement by omitting elements in T that are in S */\n// prettier-ignore\nexport function SetComplement(T, S) {\n    return T.filter(L => !S.includes(L));\n}\n// prettier-ignore\nfunction SetIntersectManyResolve(T, Init) {\n    return T.reduce((Acc, L) => {\n        return SetIntersect(Acc, L);\n    }, Init);\n}\n// prettier-ignore\nexport function SetIntersectMany(T) {\n    return (T.length === 1\n        ? T[0]\n        // Use left to initialize the accumulator for resolve\n        : T.length > 1\n            ? SetIntersectManyResolve(T.slice(1), T[0])\n            : []);\n}\n/** Returns the Union of multiple sets */\nexport function SetUnionMany(T) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(...L);\n    return Acc;\n}\n"],"names":[],"mappings":"AAAA,wDAAwD,GACxD,kBAAkB;;;;;;;;;;;AACX,SAAS,YAAY,CAAC,EAAE,CAAC;IAC5B,OAAO,EAAE,QAAQ,CAAC;AACtB;AAEO,SAAS,YAAY,CAAC,EAAE,CAAC;IAC5B,OAAO,EAAE,KAAK,CAAC,CAAC,IAAM,YAAY,GAAG;AACzC;AAEO,SAAS,YAAY,CAAC;IACzB,OAAO;WAAI,IAAI,IAAI;KAAG;AAC1B;AAEO,SAAS,aAAa,CAAC,EAAE,CAAC;IAC7B,OAAO,EAAE,MAAM,CAAC,CAAC,IAAM,EAAE,QAAQ,CAAC;AACtC;AAEO,SAAS,SAAS,CAAC,EAAE,CAAC;IACzB,OAAO;WAAI;WAAM;KAAE;AACvB;AAGO,SAAS,cAAc,CAAC,EAAE,CAAC;IAC9B,OAAO,EAAE,MAAM,CAAC,CAAA,IAAK,CAAC,EAAE,QAAQ,CAAC;AACrC;AACA,kBAAkB;AAClB,SAAS,wBAAwB,CAAC,EAAE,IAAI;IACpC,OAAO,EAAE,MAAM,CAAC,CAAC,KAAK;QAClB,OAAO,aAAa,KAAK;IAC7B,GAAG;AACP;AAEO,SAAS,iBAAiB,CAAC;IAC9B,OAAQ,EAAE,MAAM,KAAK,IACf,CAAC,CAAC,EAAE,GAEJ,EAAE,MAAM,GAAG,IACP,wBAAwB,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IACxC,EAAE;AAChB;AAEO,SAAS,aAAa,CAAC;IAC1B,MAAM,MAAM,EAAE;IACd,KAAK,MAAM,KAAK,EACZ,IAAI,IAAI,IAAI;IAChB,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 957, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 963, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 965, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 980, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/any/any.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Any type */\nexport function Any(options = {}) {\n    return { ...options, [Kind]: 'Any' };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,IAAI,UAAU,CAAC,CAAC;IAC5B,OAAO;QAAE,GAAG,OAAO;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;IAAM;AACvC","ignoreList":[0]}},
    {"offset": {"line": 992, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 998, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1000, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1015, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/array/array.mjs"],"sourcesContent":["import { CloneType } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Array type */\nexport function Array(schema, options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Array',\n        type: 'array',\n        items: CloneType(schema),\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEO,SAAS,MAAM,MAAM,EAAE,UAAU,CAAC,CAAC;IACtC,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM;QACN,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;IACrB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1031, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1037, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1039, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1054, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/async-iterator/async-iterator.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\n/** `[JavaScript]` Creates a AsyncIterator type */\nexport function AsyncIterator(items, options = {}) {\n    return {\n        ...options,\n        [Kind]: 'AsyncIterator',\n        type: 'AsyncIterator',\n        items: CloneType(items),\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAGO,SAAS,cAAc,KAAK,EAAE,UAAU,CAAC,CAAC;IAC7C,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM;QACN,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;IACrB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1070, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1076, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1078, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1093, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/discard/discard.mjs"],"sourcesContent":["function DiscardKey(value, key) {\n    const { [key]: _, ...rest } = value;\n    return rest;\n}\nexport function Discard(value, keys) {\n    return keys.reduce((acc, key) => DiscardKey(acc, key), value);\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,WAAW,KAAK,EAAE,GAAG;IAC1B,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,MAAM,GAAG;IAC9B,OAAO;AACX;AACO,SAAS,QAAQ,KAAK,EAAE,IAAI;IAC/B,OAAO,KAAK,MAAM,CAAC,CAAC,KAAK,MAAQ,WAAW,KAAK,MAAM;AAC3D","ignoreList":[0]}},
    {"offset": {"line": 1103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1126, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/never/never.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Never type */\nexport function Never(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Never',\n        not: {},\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,MAAM,UAAU,CAAC,CAAC;IAC9B,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,KAAK,CAAC;IACV;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1162, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/mapped/mapped-key.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n// prettier-ignore\nexport function MappedKey(T) {\n    return {\n        [Kind]: 'MappedKey',\n        keys: T\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,UAAU,CAAC;IACvB,OAAO;QACH,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM;IACV;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1180, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/mapped/mapped-result.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n// prettier-ignore\nexport function MappedResult(properties) {\n    return {\n        [Kind]: 'MappedResult',\n        properties\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,aAAa,UAAU;IACnC,OAAO;QACH,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1198, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/constructor/constructor.mjs"],"sourcesContent":["import { CloneType, CloneRest } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Constructor type */\nexport function Constructor(parameters, returns, options) {\n    return {\n        ...options,\n        [Kind]: 'Constructor',\n        type: 'Constructor',\n        parameters: CloneRest(parameters),\n        returns: CloneType(returns),\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEO,SAAS,YAAY,UAAU,EAAE,OAAO,EAAE,OAAO;IACpD,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM;QACN,YAAY,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;QACtB,SAAS,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;IACvB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1238, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/function/function.mjs"],"sourcesContent":["import { CloneType, CloneRest } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Function type */\nexport function Function(parameters, returns, options) {\n    return {\n        ...options,\n        [Kind]: 'Function',\n        type: 'Function',\n        parameters: CloneRest(parameters),\n        returns: CloneType(returns),\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEO,SAAS,SAAS,UAAU,EAAE,OAAO,EAAE,OAAO;IACjD,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM;QACN,YAAY,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;QACtB,SAAS,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;IACvB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1261, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1263, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1278, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/union/union-create.mjs"],"sourcesContent":["import { CloneRest } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\nexport function UnionCreate(T, options) {\n    return { ...options, [Kind]: 'Union', anyOf: CloneRest(T) };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AACO,SAAS,YAAY,CAAC,EAAE,OAAO;IAClC,OAAO;QAAE,GAAG,OAAO;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAS,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;IAAG;AAC9D","ignoreList":[0]}},
    {"offset": {"line": 1293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1299, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/optional/optional.mjs"],"sourcesContent":["import { OptionalKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { OptionalFromMappedResult } from './optional-from-mapped-result.mjs';\nimport { IsMappedResult } from '../guard/kind.mjs';\nfunction RemoveOptional(schema) {\n    return Discard(CloneType(schema), [OptionalKind]);\n}\nfunction AddOptional(schema) {\n    return { ...CloneType(schema), [OptionalKind]: 'Optional' };\n}\n// prettier-ignore\nfunction OptionalWithFlag(schema, F) {\n    return (F === false\n        ? RemoveOptional(schema)\n        : AddOptional(schema));\n}\n/** `[Json]` Creates a Optional property */\nexport function Optional(schema, enable) {\n    const F = enable ?? true;\n    return IsMappedResult(schema) ? OptionalFromMappedResult(schema, F) : OptionalWithFlag(schema, F);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;;;;;;AAKA,SAAS,eAAe,MAAM;IAC1B,OAAO,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,SAAS;QAAC,sLAAA,CAAA,eAAY;KAAC;AACpD;AACA,SAAS,YAAY,MAAM;IACvB,OAAO;QAAE,GAAG,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,OAAO;QAAE,CAAC,sLAAA,CAAA,eAAY,CAAC,EAAE;IAAW;AAC9D;AACA,kBAAkB;AAClB,SAAS,iBAAiB,MAAM,EAAE,CAAC;IAC/B,OAAQ,MAAM,QACR,eAAe,UACf,YAAY;AACtB;AAEO,SAAS,SAAS,MAAM,EAAE,MAAM;IACnC,MAAM,IAAI,UAAU;IACpB,OAAO,CAAA,GAAA,iLAAA,CAAA,iBAAc,AAAD,EAAE,UAAU,CAAA,GAAA,oNAAA,CAAA,2BAAwB,AAAD,EAAE,QAAQ,KAAK,iBAAiB,QAAQ;AACnG","ignoreList":[0]}},
    {"offset": {"line": 1333, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1339, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/union/union-evaluated.mjs"],"sourcesContent":["import { OptionalKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { UnionCreate } from './union-create.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsOptional } from '../guard/kind.mjs';\n// prettier-ignore\nfunction IsUnionOptional(T) {\n    return T.some(L => IsOptional(L));\n}\n// prettier-ignore\nfunction RemoveOptionalFromRest(T) {\n    return T.map(L => IsOptional(L) ? RemoveOptionalFromType(L) : L);\n}\n// prettier-ignore\nfunction RemoveOptionalFromType(T) {\n    return (Discard(T, [OptionalKind]));\n}\n// prettier-ignore\nfunction ResolveUnion(T, options) {\n    return (IsUnionOptional(T)\n        ? Optional(UnionCreate(RemoveOptionalFromRest(T), options))\n        : UnionCreate(RemoveOptionalFromRest(T), options));\n}\n/** `[Json]` Creates an evaluated Union type */\nexport function UnionEvaluated(T, options = {}) {\n    // prettier-ignore\n    return (T.length === 0 ? Never(options) :\n        T.length === 1 ? CloneType(T[0], options) :\n            ResolveUnion(T, options));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AAPA;AAFA;AAIA;AADA;;;;;;;;AAOA,kBAAkB;AAClB,SAAS,gBAAgB,CAAC;IACtB,OAAO,EAAE,IAAI,CAAC,CAAA,IAAK,CAAA,GAAA,iLAAA,CAAA,aAAU,AAAD,EAAE;AAClC;AACA,kBAAkB;AAClB,SAAS,uBAAuB,CAAC;IAC7B,OAAO,EAAE,GAAG,CAAC,CAAA,IAAK,CAAA,GAAA,iLAAA,CAAA,aAAU,AAAD,EAAE,KAAK,uBAAuB,KAAK;AAClE;AACA,kBAAkB;AAClB,SAAS,uBAAuB,CAAC;IAC7B,OAAQ,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,GAAG;QAAC,sLAAA,CAAA,eAAY;KAAC;AACrC;AACA,kBAAkB;AAClB,SAAS,aAAa,CAAC,EAAE,OAAO;IAC5B,OAAQ,gBAAgB,KAClB,CAAA,GAAA,wLAAA,CAAA,WAAQ,AAAD,EAAE,CAAA,GAAA,4LAAA,CAAA,cAAW,AAAD,EAAE,uBAAuB,IAAI,YAChD,CAAA,GAAA,4LAAA,CAAA,cAAW,AAAD,EAAE,uBAAuB,IAAI;AACjD;AAEO,SAAS,eAAe,CAAC,EAAE,UAAU,CAAC,CAAC;IAC1C,kBAAkB;IAClB,OAAQ,EAAE,MAAM,KAAK,IAAI,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE,WAC3B,EAAE,MAAM,KAAK,IAAI,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,CAAC,CAAC,EAAE,EAAE,WAC7B,aAAa,GAAG;AAC5B","ignoreList":[0]}},
    {"offset": {"line": 1385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1391, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/union/union-type.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n"],"names":[],"mappings":";AAAA","ignoreList":[0]}},
    {"offset": {"line": 1394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1400, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/union/union.mjs"],"sourcesContent":["import { Never } from '../never/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { UnionCreate } from './union-create.mjs';\n/** `[Json]` Creates a Union type */\nexport function Union(T, options = {}) {\n    // prettier-ignore\n    return (T.length === 0 ? Never(options) :\n        T.length === 1 ? CloneType(T[0], options) :\n            UnionCreate(T, options));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAFA;;;;AAIO,SAAS,MAAM,CAAC,EAAE,UAAU,CAAC,CAAC;IACjC,kBAAkB;IAClB,OAAQ,EAAE,MAAM,KAAK,IAAI,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE,WAC3B,EAAE,MAAM,KAAK,IAAI,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,CAAC,CAAC,EAAE,EAAE,WAC7B,CAAA,GAAA,4LAAA,CAAA,cAAW,AAAD,EAAE,GAAG;AAC3B","ignoreList":[0]}},
    {"offset": {"line": 1414, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1420, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1424, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1441, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/template-literal/parse.mjs"],"sourcesContent":["import { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralParserError\n// ------------------------------------------------------------------\nexport class TemplateLiteralParserError extends TypeBoxError {\n}\n// -------------------------------------------------------------------\n// Unescape\n//\n// Unescape for these control characters specifically. Note that this\n// function is only called on non union group content, and where we\n// still want to allow the user to embed control characters in that\n// content. For review.\n// -------------------------------------------------------------------\n// prettier-ignore\nfunction Unescape(pattern) {\n    return pattern\n        .replace(/\\\\\\$/g, '$')\n        .replace(/\\\\\\*/g, '*')\n        .replace(/\\\\\\^/g, '^')\n        .replace(/\\\\\\|/g, '|')\n        .replace(/\\\\\\(/g, '(')\n        .replace(/\\\\\\)/g, ')');\n}\n// -------------------------------------------------------------------\n// Control Characters\n// -------------------------------------------------------------------\nfunction IsNonEscaped(pattern, index, char) {\n    return pattern[index] === char && pattern.charCodeAt(index - 1) !== 92;\n}\nfunction IsOpenParen(pattern, index) {\n    return IsNonEscaped(pattern, index, '(');\n}\nfunction IsCloseParen(pattern, index) {\n    return IsNonEscaped(pattern, index, ')');\n}\nfunction IsSeparator(pattern, index) {\n    return IsNonEscaped(pattern, index, '|');\n}\n// -------------------------------------------------------------------\n// Control Groups\n// -------------------------------------------------------------------\nfunction IsGroup(pattern) {\n    if (!(IsOpenParen(pattern, 0) && IsCloseParen(pattern, pattern.length - 1)))\n        return false;\n    let count = 0;\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            count += 1;\n        if (IsCloseParen(pattern, index))\n            count -= 1;\n        if (count === 0 && index !== pattern.length - 1)\n            return false;\n    }\n    return true;\n}\n// prettier-ignore\nfunction InGroup(pattern) {\n    return pattern.slice(1, pattern.length - 1);\n}\n// prettier-ignore\nfunction IsPrecedenceOr(pattern) {\n    let count = 0;\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            count += 1;\n        if (IsCloseParen(pattern, index))\n            count -= 1;\n        if (IsSeparator(pattern, index) && count === 0)\n            return true;\n    }\n    return false;\n}\n// prettier-ignore\nfunction IsPrecedenceAnd(pattern) {\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            return true;\n    }\n    return false;\n}\n// prettier-ignore\nfunction Or(pattern) {\n    let [count, start] = [0, 0];\n    const expressions = [];\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            count += 1;\n        if (IsCloseParen(pattern, index))\n            count -= 1;\n        if (IsSeparator(pattern, index) && count === 0) {\n            const range = pattern.slice(start, index);\n            if (range.length > 0)\n                expressions.push(TemplateLiteralParse(range));\n            start = index + 1;\n        }\n    }\n    const range = pattern.slice(start);\n    if (range.length > 0)\n        expressions.push(TemplateLiteralParse(range));\n    if (expressions.length === 0)\n        return { type: 'const', const: '' };\n    if (expressions.length === 1)\n        return expressions[0];\n    return { type: 'or', expr: expressions };\n}\n// prettier-ignore\nfunction And(pattern) {\n    function Group(value, index) {\n        if (!IsOpenParen(value, index))\n            throw new TemplateLiteralParserError(`TemplateLiteralParser: Index must point to open parens`);\n        let count = 0;\n        for (let scan = index; scan < value.length; scan++) {\n            if (IsOpenParen(value, scan))\n                count += 1;\n            if (IsCloseParen(value, scan))\n                count -= 1;\n            if (count === 0)\n                return [index, scan];\n        }\n        throw new TemplateLiteralParserError(`TemplateLiteralParser: Unclosed group parens in expression`);\n    }\n    function Range(pattern, index) {\n        for (let scan = index; scan < pattern.length; scan++) {\n            if (IsOpenParen(pattern, scan))\n                return [index, scan];\n        }\n        return [index, pattern.length];\n    }\n    const expressions = [];\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index)) {\n            const [start, end] = Group(pattern, index);\n            const range = pattern.slice(start, end + 1);\n            expressions.push(TemplateLiteralParse(range));\n            index = end;\n        }\n        else {\n            const [start, end] = Range(pattern, index);\n            const range = pattern.slice(start, end);\n            if (range.length > 0)\n                expressions.push(TemplateLiteralParse(range));\n            index = end - 1;\n        }\n    }\n    return ((expressions.length === 0) ? { type: 'const', const: '' } :\n        (expressions.length === 1) ? expressions[0] :\n            { type: 'and', expr: expressions });\n}\n// ------------------------------------------------------------------\n// TemplateLiteralParse\n// ------------------------------------------------------------------\n/** Parses a pattern and returns an expression tree */\nexport function TemplateLiteralParse(pattern) {\n    // prettier-ignore\n    return (IsGroup(pattern) ? TemplateLiteralParse(InGroup(pattern)) :\n        IsPrecedenceOr(pattern) ? Or(pattern) :\n            IsPrecedenceAnd(pattern) ? And(pattern) :\n                { type: 'const', const: Unescape(pattern) });\n}\n// ------------------------------------------------------------------\n// TemplateLiteralParseExact\n// ------------------------------------------------------------------\n/** Parses a pattern and strips forward and trailing ^ and $ */\nexport function TemplateLiteralParseExact(pattern) {\n    return TemplateLiteralParse(pattern.slice(1, pattern.length - 1));\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1599, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1605, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/template-literal/finite.mjs"],"sourcesContent":["import { TemplateLiteralParseExact } from './parse.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralFiniteError\n// ------------------------------------------------------------------\nexport class TemplateLiteralFiniteError extends TypeBoxError {\n}\n// ------------------------------------------------------------------\n// IsTemplateLiteralFiniteCheck\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsNumberExpression(expression) {\n    return (expression.type === 'or' &&\n        expression.expr.length === 2 &&\n        expression.expr[0].type === 'const' &&\n        expression.expr[0].const === '0' &&\n        expression.expr[1].type === 'const' &&\n        expression.expr[1].const === '[1-9][0-9]*');\n}\n// prettier-ignore\nfunction IsBooleanExpression(expression) {\n    return (expression.type === 'or' &&\n        expression.expr.length === 2 &&\n        expression.expr[0].type === 'const' &&\n        expression.expr[0].const === 'true' &&\n        expression.expr[1].type === 'const' &&\n        expression.expr[1].const === 'false');\n}\n// prettier-ignore\nfunction IsStringExpression(expression) {\n    return expression.type === 'const' && expression.const === '.*';\n}\n// ------------------------------------------------------------------\n// IsTemplateLiteralExpressionFinite\n// ------------------------------------------------------------------\n// prettier-ignore\nexport function IsTemplateLiteralExpressionFinite(expression) {\n    return (IsNumberExpression(expression) || IsStringExpression(expression) ? false :\n        IsBooleanExpression(expression) ? true :\n            (expression.type === 'and') ? expression.expr.every((expr) => IsTemplateLiteralExpressionFinite(expr)) :\n                (expression.type === 'or') ? expression.expr.every((expr) => IsTemplateLiteralExpressionFinite(expr)) :\n                    (expression.type === 'const') ? true :\n                        (() => { throw new TemplateLiteralFiniteError(`Unknown expression type`); })());\n}\n/** Returns true if this TemplateLiteral resolves to a finite set of values */\nexport function IsTemplateLiteralFinite(schema) {\n    const expression = TemplateLiteralParseExact(schema.pattern);\n    return IsTemplateLiteralExpressionFinite(expression);\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;;;AAIO,MAAM,mCAAmC,kLAAA,CAAA,eAAY;AAC5D;AACA,qEAAqE;AACrE,+BAA+B;AAC/B,qEAAqE;AACrE,kBAAkB;AAClB,SAAS,mBAAmB,UAAU;IAClC,OAAQ,WAAW,IAAI,KAAK,QACxB,WAAW,IAAI,CAAC,MAAM,KAAK,KAC3B,WAAW,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,WAC5B,WAAW,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,OAC7B,WAAW,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,WAC5B,WAAW,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK;AACrC;AACA,kBAAkB;AAClB,SAAS,oBAAoB,UAAU;IACnC,OAAQ,WAAW,IAAI,KAAK,QACxB,WAAW,IAAI,CAAC,MAAM,KAAK,KAC3B,WAAW,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,WAC5B,WAAW,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,UAC7B,WAAW,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,WAC5B,WAAW,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK;AACrC;AACA,kBAAkB;AAClB,SAAS,mBAAmB,UAAU;IAClC,OAAO,WAAW,IAAI,KAAK,WAAW,WAAW,KAAK,KAAK;AAC/D;AAKO,SAAS,kCAAkC,UAAU;IACxD,OAAQ,mBAAmB,eAAe,mBAAmB,cAAc,QACvE,oBAAoB,cAAc,OAC9B,AAAC,WAAW,IAAI,KAAK,QAAS,WAAW,IAAI,CAAC,KAAK,CAAC,CAAC,OAAS,kCAAkC,SAC5F,AAAC,WAAW,IAAI,KAAK,OAAQ,WAAW,IAAI,CAAC,KAAK,CAAC,CAAC,OAAS,kCAAkC,SAC3F,AAAC,WAAW,IAAI,KAAK,UAAW,OAC5B,CAAC;QAAQ,MAAM,IAAI,2BAA2B,CAAC,uBAAuB,CAAC;IAAG,CAAC;AACnG;AAEO,SAAS,wBAAwB,MAAM;IAC1C,MAAM,aAAa,CAAA,GAAA,gMAAA,CAAA,4BAAyB,AAAD,EAAE,OAAO,OAAO;IAC3D,OAAO,kCAAkC;AAC7C","ignoreList":[0]}},
    {"offset": {"line": 1641, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1647, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/template-literal/generate.mjs"],"sourcesContent":["import { IsTemplateLiteralExpressionFinite } from './finite.mjs';\nimport { TemplateLiteralParseExact } from './parse.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralGenerateError\n// ------------------------------------------------------------------\nexport class TemplateLiteralGenerateError extends TypeBoxError {\n}\n// ------------------------------------------------------------------\n// TemplateLiteralExpressionGenerate\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction* GenerateReduce(buffer) {\n    if (buffer.length === 1)\n        return yield* buffer[0];\n    for (const left of buffer[0]) {\n        for (const right of GenerateReduce(buffer.slice(1))) {\n            yield `${left}${right}`;\n        }\n    }\n}\n// prettier-ignore\nfunction* GenerateAnd(expression) {\n    return yield* GenerateReduce(expression.expr.map((expr) => [...TemplateLiteralExpressionGenerate(expr)]));\n}\n// prettier-ignore\nfunction* GenerateOr(expression) {\n    for (const expr of expression.expr)\n        yield* TemplateLiteralExpressionGenerate(expr);\n}\n// prettier-ignore\nfunction* GenerateConst(expression) {\n    return yield expression.const;\n}\nexport function* TemplateLiteralExpressionGenerate(expression) {\n    return expression.type === 'and'\n        ? yield* GenerateAnd(expression)\n        : expression.type === 'or'\n            ? yield* GenerateOr(expression)\n            : expression.type === 'const'\n                ? yield* GenerateConst(expression)\n                : (() => {\n                    throw new TemplateLiteralGenerateError('Unknown expression');\n                })();\n}\n/** Generates a tuple of strings from the given TemplateLiteral. Returns an empty tuple if infinite. */\nexport function TemplateLiteralGenerate(schema) {\n    const expression = TemplateLiteralParseExact(schema.pattern);\n    // prettier-ignore\n    return (IsTemplateLiteralExpressionFinite(expression)\n        ? [...TemplateLiteralExpressionGenerate(expression)]\n        : []);\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAAA;;;;AAIO,MAAM,qCAAqC,kLAAA,CAAA,eAAY;AAC9D;AACA,qEAAqE;AACrE,oCAAoC;AACpC,qEAAqE;AACrE,kBAAkB;AAClB,UAAU,eAAe,MAAM;IAC3B,IAAI,OAAO,MAAM,KAAK,GAClB,OAAO,OAAO,MAAM,CAAC,EAAE;IAC3B,KAAK,MAAM,QAAQ,MAAM,CAAC,EAAE,CAAE;QAC1B,KAAK,MAAM,SAAS,eAAe,OAAO,KAAK,CAAC,IAAK;YACjD,MAAM,GAAG,OAAO,OAAO;QAC3B;IACJ;AACJ;AACA,kBAAkB;AAClB,UAAU,YAAY,UAAU;IAC5B,OAAO,OAAO,eAAe,WAAW,IAAI,CAAC,GAAG,CAAC,CAAC,OAAS;eAAI,kCAAkC;SAAM;AAC3G;AACA,kBAAkB;AAClB,UAAU,WAAW,UAAU;IAC3B,KAAK,MAAM,QAAQ,WAAW,IAAI,CAC9B,OAAO,kCAAkC;AACjD;AACA,kBAAkB;AAClB,UAAU,cAAc,UAAU;IAC9B,OAAO,MAAM,WAAW,KAAK;AACjC;AACO,UAAU,kCAAkC,UAAU;IACzD,OAAO,WAAW,IAAI,KAAK,QACrB,OAAO,YAAY,cACnB,WAAW,IAAI,KAAK,OAChB,OAAO,WAAW,cAClB,WAAW,IAAI,KAAK,UAChB,OAAO,cAAc,cACrB,CAAC;QACC,MAAM,IAAI,6BAA6B;IAC3C,CAAC;AACjB;AAEO,SAAS,wBAAwB,MAAM;IAC1C,MAAM,aAAa,CAAA,GAAA,gMAAA,CAAA,4BAAyB,AAAD,EAAE,OAAO,OAAO;IAC3D,kBAAkB;IAClB,OAAQ,CAAA,GAAA,iMAAA,CAAA,oCAAiC,AAAD,EAAE,cACpC;WAAI,kCAAkC;KAAY,GAClD,EAAE;AACZ","ignoreList":[0]}},
    {"offset": {"line": 1699, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1705, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/literal/literal.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Literal type */\nexport function Literal(value, options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Literal',\n        const: value,\n        type: typeof value,\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,QAAQ,KAAK,EAAE,UAAU,CAAC,CAAC;IACvC,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,OAAO;QACP,MAAM,OAAO;IACjB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1719, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1725, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1727, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1742, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/boolean/boolean.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Boolean type */\nexport function Boolean(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Boolean',\n        type: 'boolean',\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,QAAQ,UAAU,CAAC,CAAC;IAChC,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM;IACV;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1761, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1763, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1778, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/bigint/bigint.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a BigInt type */\nexport function BigInt(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'BigInt',\n        type: 'bigint',\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,OAAO,UAAU,CAAC,CAAC;IAC/B,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM;IACV;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1791, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1797, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1799, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1814, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/number/number.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Number type */\nexport function Number(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Number',\n        type: 'number',\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,OAAO,UAAU,CAAC,CAAC;IAC/B,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM;IACV;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1827, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1833, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1835, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1850, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/string/string.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a String type */\nexport function String(options = {}) {\n    return { ...options, [Kind]: 'String', type: 'string' };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,OAAO,UAAU,CAAC,CAAC;IAC/B,OAAO;QAAE,GAAG,OAAO;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAU,MAAM;IAAS;AAC1D","ignoreList":[0]}},
    {"offset": {"line": 1863, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1869, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1871, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1886, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/template-literal/syntax.mjs"],"sourcesContent":["import { Literal } from '../literal/index.mjs';\nimport { Boolean } from '../boolean/index.mjs';\nimport { BigInt } from '../bigint/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { String } from '../string/index.mjs';\nimport { UnionEvaluated } from '../union/index.mjs';\nimport { Never } from '../never/index.mjs';\n// ------------------------------------------------------------------\n// SyntaxParsers\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction* FromUnion(syntax) {\n    const trim = syntax.trim().replace(/\"|'/g, '');\n    return (trim === 'boolean' ? yield Boolean() :\n        trim === 'number' ? yield Number() :\n            trim === 'bigint' ? yield BigInt() :\n                trim === 'string' ? yield String() :\n                    yield (() => {\n                        const literals = trim.split('|').map((literal) => Literal(literal.trim()));\n                        return (literals.length === 0 ? Never() :\n                            literals.length === 1 ? literals[0] :\n                                UnionEvaluated(literals));\n                    })());\n}\n// prettier-ignore\nfunction* FromTerminal(syntax) {\n    if (syntax[1] !== '{') {\n        const L = Literal('$');\n        const R = FromSyntax(syntax.slice(1));\n        return yield* [L, ...R];\n    }\n    for (let i = 2; i < syntax.length; i++) {\n        if (syntax[i] === '}') {\n            const L = FromUnion(syntax.slice(2, i));\n            const R = FromSyntax(syntax.slice(i + 1));\n            return yield* [...L, ...R];\n        }\n    }\n    yield Literal(syntax);\n}\n// prettier-ignore\nfunction* FromSyntax(syntax) {\n    for (let i = 0; i < syntax.length; i++) {\n        if (syntax[i] === '$') {\n            const L = Literal(syntax.slice(0, i));\n            const R = FromTerminal(syntax.slice(i));\n            return yield* [L, ...R];\n        }\n    }\n    yield Literal(syntax);\n}\n/** Parses TemplateLiteralSyntax and returns a tuple of TemplateLiteralKinds */\nexport function TemplateLiteralSyntax(syntax) {\n    return [...FromSyntax(syntax)];\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAKA;AACA;AAFA;AAFA;AACA;AAFA;;;;;;;;AAMA,qEAAqE;AACrE,gBAAgB;AAChB,qEAAqE;AACrE,kBAAkB;AAClB,UAAU,UAAU,MAAM;IACtB,MAAM,OAAO,OAAO,IAAI,GAAG,OAAO,CAAC,QAAQ;IAC3C,OAAQ,SAAS,YAAY,MAAM,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,MACrC,SAAS,WAAW,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,MAC3B,SAAS,WAAW,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,MAC3B,SAAS,WAAW,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,MAC3B,MAAM,CAAC;QACH,MAAM,WAAW,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,UAAY,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,QAAQ,IAAI;QACtE,OAAQ,SAAS,MAAM,KAAK,IAAI,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,MAChC,SAAS,MAAM,KAAK,IAAI,QAAQ,CAAC,EAAE,GAC/B,CAAA,GAAA,+LAAA,CAAA,iBAAc,AAAD,EAAE;IAC3B,CAAC;AACrB;AACA,kBAAkB;AAClB,UAAU,aAAa,MAAM;IACzB,IAAI,MAAM,CAAC,EAAE,KAAK,KAAK;QACnB,MAAM,IAAI,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE;QAClB,MAAM,IAAI,WAAW,OAAO,KAAK,CAAC;QAClC,OAAO,OAAO;YAAC;eAAM;SAAE;IAC3B;IACA,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;QACpC,IAAI,MAAM,CAAC,EAAE,KAAK,KAAK;YACnB,MAAM,IAAI,UAAU,OAAO,KAAK,CAAC,GAAG;YACpC,MAAM,IAAI,WAAW,OAAO,KAAK,CAAC,IAAI;YACtC,OAAO,OAAO;mBAAI;mBAAM;aAAE;QAC9B;IACJ;IACA,MAAM,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE;AAClB;AACA,kBAAkB;AAClB,UAAU,WAAW,MAAM;IACvB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;QACpC,IAAI,MAAM,CAAC,EAAE,KAAK,KAAK;YACnB,MAAM,IAAI,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,OAAO,KAAK,CAAC,GAAG;YAClC,MAAM,IAAI,aAAa,OAAO,KAAK,CAAC;YACpC,OAAO,OAAO;gBAAC;mBAAM;aAAE;QAC3B;IACJ;IACA,MAAM,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE;AAClB;AAEO,SAAS,sBAAsB,MAAM;IACxC,OAAO;WAAI,WAAW;KAAQ;AAClC","ignoreList":[0]}},
    {"offset": {"line": 1962, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1968, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/template-literal/pattern.mjs"],"sourcesContent":["import { PatternNumber, PatternString, PatternBoolean } from '../patterns/index.mjs';\nimport { Kind } from '../symbols/index.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTemplateLiteral, IsUnion, IsNumber, IsInteger, IsBigInt, IsString, IsLiteral, IsBoolean } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralPatternError\n// ------------------------------------------------------------------\nexport class TemplateLiteralPatternError extends TypeBoxError {\n}\n// ------------------------------------------------------------------\n// TemplateLiteralPattern\n// ------------------------------------------------------------------\nfunction Escape(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n// prettier-ignore\nfunction Visit(schema, acc) {\n    return (IsTemplateLiteral(schema) ? schema.pattern.slice(1, schema.pattern.length - 1) :\n        IsUnion(schema) ? `(${schema.anyOf.map((schema) => Visit(schema, acc)).join('|')})` :\n            IsNumber(schema) ? `${acc}${PatternNumber}` :\n                IsInteger(schema) ? `${acc}${PatternNumber}` :\n                    IsBigInt(schema) ? `${acc}${PatternNumber}` :\n                        IsString(schema) ? `${acc}${PatternString}` :\n                            IsLiteral(schema) ? `${acc}${Escape(schema.const.toString())}` :\n                                IsBoolean(schema) ? `${acc}${PatternBoolean}` :\n                                    (() => { throw new TemplateLiteralPatternError(`Unexpected Kind '${schema[Kind]}'`); })());\n}\nexport function TemplateLiteralPattern(kinds) {\n    return `^${kinds.map((schema) => Visit(schema, '')).join('')}\\$`;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AAJA;AADA;AADA;;;;;AAUO,MAAM,oCAAoC,kLAAA,CAAA,eAAY;AAC7D;AACA,qEAAqE;AACrE,yBAAyB;AACzB,qEAAqE;AACrE,SAAS,OAAO,KAAK;IACjB,OAAO,MAAM,OAAO,CAAC,uBAAuB;AAChD;AACA,kBAAkB;AAClB,SAAS,MAAM,MAAM,EAAE,GAAG;IACtB,OAAQ,CAAA,GAAA,iLAAA,CAAA,oBAAiB,AAAD,EAAE,UAAU,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,OAAO,OAAO,CAAC,MAAM,GAAG,KAChF,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,UAAU,CAAC,CAAC,EAAE,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,SAAW,MAAM,QAAQ,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,GAC/E,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,UAAU,GAAG,MAAM,wLAAA,CAAA,gBAAa,EAAE,GACvC,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,UAAU,GAAG,MAAM,wLAAA,CAAA,gBAAa,EAAE,GACxC,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,UAAU,GAAG,MAAM,wLAAA,CAAA,gBAAa,EAAE,GACvC,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,UAAU,GAAG,MAAM,wLAAA,CAAA,gBAAa,EAAE,GACvC,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,UAAU,GAAG,MAAM,OAAO,OAAO,KAAK,CAAC,QAAQ,KAAK,GAC1D,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,UAAU,GAAG,MAAM,wLAAA,CAAA,iBAAc,EAAE,GACzC,CAAC;QAAQ,MAAM,IAAI,4BAA4B,CAAC,iBAAiB,EAAE,MAAM,CAAC,sLAAA,CAAA,OAAI,CAAC,CAAC,CAAC,CAAC;IAAG,CAAC;AAC1H;AACO,SAAS,uBAAuB,KAAK;IACxC,OAAO,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,SAAW,MAAM,QAAQ,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;AACpE","ignoreList":[0]}},
    {"offset": {"line": 2003, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2009, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/template-literal/union.mjs"],"sourcesContent":["import { UnionEvaluated } from '../union/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { TemplateLiteralGenerate } from './generate.mjs';\n/** Returns a Union from the given TemplateLiteral */\nexport function TemplateLiteralToUnion(schema) {\n    const R = TemplateLiteralGenerate(schema);\n    const L = R.map((S) => Literal(S));\n    return UnionEvaluated(L);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AADA;AADA;;;;AAIO,SAAS,uBAAuB,MAAM;IACzC,MAAM,IAAI,CAAA,GAAA,mMAAA,CAAA,0BAAuB,AAAD,EAAE;IAClC,MAAM,IAAI,EAAE,GAAG,CAAC,CAAC,IAAM,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE;IAC/B,OAAO,CAAA,GAAA,+LAAA,CAAA,iBAAc,AAAD,EAAE;AAC1B","ignoreList":[0]}},
    {"offset": {"line": 2025, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2031, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/template-literal/template-literal.mjs"],"sourcesContent":["import { TemplateLiteralSyntax } from './syntax.mjs';\nimport { TemplateLiteralPattern } from './pattern.mjs';\nimport { IsString } from '../guard/value.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a TemplateLiteral type */\n// prettier-ignore\nexport function TemplateLiteral(unresolved, options = {}) {\n    const pattern = IsString(unresolved)\n        ? TemplateLiteralPattern(TemplateLiteralSyntax(unresolved))\n        : TemplateLiteralPattern(unresolved);\n    return { ...options, [Kind]: 'TemplateLiteral', type: 'string', pattern };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AAAA;;;;;AAGO,SAAS,gBAAgB,UAAU,EAAE,UAAU,CAAC,CAAC;IACpD,MAAM,UAAU,CAAA,GAAA,kLAAA,CAAA,WAAQ,AAAD,EAAE,cACnB,CAAA,GAAA,kMAAA,CAAA,yBAAsB,AAAD,EAAE,CAAA,GAAA,iMAAA,CAAA,wBAAqB,AAAD,EAAE,eAC7C,CAAA,GAAA,kMAAA,CAAA,yBAAsB,AAAD,EAAE;IAC7B,OAAO;QAAE,GAAG,OAAO;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAmB,MAAM;QAAU;IAAQ;AAC5E","ignoreList":[0]}},
    {"offset": {"line": 2052, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2058, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2066, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2087, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/indexed/indexed-property-keys.mjs"],"sourcesContent":["import { TemplateLiteralGenerate } from '../template-literal/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTemplateLiteral, IsUnion, IsLiteral, IsNumber, IsInteger } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromTemplateLiteral(T) {\n    const R = TemplateLiteralGenerate(T);\n    return R.map(S => S.toString());\n}\n// prettier-ignore\nfunction FromUnion(T) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(...IndexPropertyKeys(L));\n    return Acc;\n}\n// prettier-ignore\nfunction FromLiteral(T) {\n    return ([T.toString()] // TS 5.4 observes TLiteralValue as not having a toString()\n    );\n}\n/** Returns a tuple of PropertyKeys derived from the given TSchema */\n// prettier-ignore\nexport function IndexPropertyKeys(T) {\n    return [...new Set((IsTemplateLiteral(T) ? FromTemplateLiteral(T) :\n            IsUnion(T) ? FromUnion(T.anyOf) :\n                IsLiteral(T) ? FromLiteral(T.const) :\n                    IsNumber(T) ? ['[number]'] :\n                        IsInteger(T) ? ['[number]'] :\n                            []))];\n}\n"],"names":[],"mappings":";;;AAAA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AAJA;;;AAKA,kBAAkB;AAClB,SAAS,oBAAoB,CAAC;IAC1B,MAAM,IAAI,CAAA,GAAA,mMAAA,CAAA,0BAAuB,AAAD,EAAE;IAClC,OAAO,EAAE,GAAG,CAAC,CAAA,IAAK,EAAE,QAAQ;AAChC;AACA,kBAAkB;AAClB,SAAS,UAAU,CAAC;IAChB,MAAM,MAAM,EAAE;IACd,KAAK,MAAM,KAAK,EACZ,IAAI,IAAI,IAAI,kBAAkB;IAClC,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,YAAY,CAAC;IAClB,OAAQ;QAAC,EAAE,QAAQ;KAAG,CAAC,2DAA2D;;AAEtF;AAGO,SAAS,kBAAkB,CAAC;IAC/B,OAAO;WAAI,IAAI,IAAK,CAAA,GAAA,iLAAA,CAAA,oBAAiB,AAAD,EAAE,KAAK,oBAAoB,KACvD,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,KAAK,UAAU,EAAE,KAAK,IAC1B,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,YAAY,EAAE,KAAK,IAC9B,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK;YAAC;SAAW,GACtB,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,KAAK;YAAC;SAAW,GACvB,EAAE;KAAG;AACjC","ignoreList":[0]}},
    {"offset": {"line": 2125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2131, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/indexed/indexed-from-mapped-result.mjs"],"sourcesContent":["import { MappedResult } from '../mapped/index.mjs';\nimport { IndexPropertyKeys } from './indexed-property-keys.mjs';\nimport { Index } from './index.mjs';\n// prettier-ignore\nfunction FromProperties(T, P, options) {\n    const Acc = {};\n    for (const K2 of Object.getOwnPropertyNames(P)) {\n        Acc[K2] = Index(T, IndexPropertyKeys(P[K2]), options);\n    }\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(T, R, options) {\n    return FromProperties(T, R.properties, options);\n}\n// prettier-ignore\nexport function IndexFromMappedResult(T, R, options) {\n    const P = FromMappedResult(T, R, options);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAAA;AAFA;;;;AAGA,kBAAkB;AAClB,SAAS,eAAe,CAAC,EAAE,CAAC,EAAE,OAAO;IACjC,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,MAAM,OAAO,mBAAmB,CAAC,GAAI;QAC5C,GAAG,CAAC,GAAG,GAAG,CAAA,GAAA,sLAAA,CAAA,QAAK,AAAD,EAAE,GAAG,CAAA,GAAA,0MAAA,CAAA,oBAAiB,AAAD,EAAE,CAAC,CAAC,GAAG,GAAG;IACjD;IACA,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,iBAAiB,CAAC,EAAE,CAAC,EAAE,OAAO;IACnC,OAAO,eAAe,GAAG,EAAE,UAAU,EAAE;AAC3C;AAEO,SAAS,sBAAsB,CAAC,EAAE,CAAC,EAAE,OAAO;IAC/C,MAAM,IAAI,iBAAiB,GAAG,GAAG;IACjC,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 2158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2164, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/indexed/indexed.mjs"],"sourcesContent":["import { Never } from '../never/index.mjs';\nimport { IntersectEvaluated } from '../intersect/index.mjs';\nimport { UnionEvaluated } from '../union/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { IndexPropertyKeys } from './indexed-property-keys.mjs';\nimport { IndexFromMappedKey } from './indexed-from-mapped-key.mjs';\nimport { IndexFromMappedResult } from './indexed-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsIntersect, IsObject, IsMappedKey, IsMappedResult, IsNever, IsSchema, IsTuple, IsUnion } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(T, K) {\n    return T.map(L => IndexFromPropertyKey(L, K));\n}\n// prettier-ignore\nfunction FromIntersectRest(T) {\n    return T.filter(L => !IsNever(L));\n}\n// prettier-ignore\nfunction FromIntersect(T, K) {\n    return (IntersectEvaluated(FromIntersectRest(FromRest(T, K))));\n}\n// prettier-ignore\nfunction FromUnionRest(T) {\n    return (T.some(L => IsNever(L))\n        ? []\n        : T);\n}\n// prettier-ignore\nfunction FromUnion(T, K) {\n    return (UnionEvaluated(FromUnionRest(FromRest(T, K))));\n}\n// prettier-ignore\nfunction FromTuple(T, K) {\n    return (K in T ? T[K] :\n        K === '[number]' ? UnionEvaluated(T) :\n            Never());\n}\n// prettier-ignore\nfunction FromArray(T, K) {\n    return (K === '[number]'\n        ? T\n        : Never());\n}\n// prettier-ignore\nfunction FromProperty(T, K) {\n    return (K in T ? T[K] : Never());\n}\n// prettier-ignore\nexport function IndexFromPropertyKey(T, K) {\n    return (IsIntersect(T) ? FromIntersect(T.allOf, K) :\n        IsUnion(T) ? FromUnion(T.anyOf, K) :\n            IsTuple(T) ? FromTuple(T.items ?? [], K) :\n                IsArray(T) ? FromArray(T.items, K) :\n                    IsObject(T) ? FromProperty(T.properties, K) :\n                        Never());\n}\n// prettier-ignore\nexport function IndexFromPropertyKeys(T, K) {\n    return K.map(L => IndexFromPropertyKey(T, L));\n}\n// prettier-ignore\nfunction FromSchema(T, K) {\n    return (UnionEvaluated(IndexFromPropertyKeys(T, K)));\n}\n/** `[Json]` Returns an Indexed property type for the given keys */\nexport function Index(T, K, options = {}) {\n    // prettier-ignore\n    return (IsMappedResult(K) ? CloneType(IndexFromMappedResult(T, K, options)) :\n        IsMappedKey(K) ? CloneType(IndexFromMappedKey(T, K, options)) :\n            IsSchema(K) ? CloneType(FromSchema(T, IndexPropertyKeys(K)), options) :\n                CloneType(FromSchema(T, K), options));\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2243, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/indexed/indexed-from-mapped-key.mjs"],"sourcesContent":["import { Index } from './indexed.mjs';\nimport { MappedResult } from '../mapped/index.mjs';\n// prettier-ignore\nfunction MappedIndexPropertyKey(T, K, options) {\n    return { [K]: Index(T, [K], options) };\n}\n// prettier-ignore\nfunction MappedIndexPropertyKeys(T, K, options) {\n    return K.reduce((Acc, L) => {\n        return { ...Acc, ...MappedIndexPropertyKey(T, L, options) };\n    }, {});\n}\n// prettier-ignore\nfunction MappedIndexProperties(T, K, options) {\n    return MappedIndexPropertyKeys(T, K.keys, options);\n}\n// prettier-ignore\nexport function IndexFromMappedKey(T, K, options) {\n    const P = MappedIndexProperties(T, K, options);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AACA,kBAAkB;AAClB,SAAS,uBAAuB,CAAC,EAAE,CAAC,EAAE,OAAO;IACzC,OAAO;QAAE,CAAC,EAAE,EAAE,CAAA,GAAA,sLAAA,CAAA,QAAK,AAAD,EAAE,GAAG;YAAC;SAAE,EAAE;IAAS;AACzC;AACA,kBAAkB;AAClB,SAAS,wBAAwB,CAAC,EAAE,CAAC,EAAE,OAAO;IAC1C,OAAO,EAAE,MAAM,CAAC,CAAC,KAAK;QAClB,OAAO;YAAE,GAAG,GAAG;YAAE,GAAG,uBAAuB,GAAG,GAAG,QAAQ;QAAC;IAC9D,GAAG,CAAC;AACR;AACA,kBAAkB;AAClB,SAAS,sBAAsB,CAAC,EAAE,CAAC,EAAE,OAAO;IACxC,OAAO,wBAAwB,GAAG,EAAE,IAAI,EAAE;AAC9C;AAEO,SAAS,mBAAmB,CAAC,EAAE,CAAC,EAAE,OAAO;IAC5C,MAAM,IAAI,sBAAsB,GAAG,GAAG;IACtC,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 2276, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2282, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2287, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2305, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/iterator/iterator.mjs"],"sourcesContent":["import { CloneType } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates an Iterator type */\nexport function Iterator(items, options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Iterator',\n        type: 'Iterator',\n        items: CloneType(items),\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEO,SAAS,SAAS,KAAK,EAAE,UAAU,CAAC,CAAC;IACxC,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM;QACN,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;IACrB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 2321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2327, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2329, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2344, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/object/object.mjs"],"sourcesContent":["import { CloneType } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsOptional, IsSchema } from '../guard/kind.mjs';\n/** `[Json]` Creates an Object type */\nfunction _Object(properties, options = {}) {\n    const propertyKeys = globalThis.Object.getOwnPropertyNames(properties);\n    const optionalKeys = propertyKeys.filter((key) => IsOptional(properties[key]));\n    const requiredKeys = propertyKeys.filter((name) => !optionalKeys.includes(name));\n    const clonedAdditionalProperties = IsSchema(options.additionalProperties) ? { additionalProperties: CloneType(options.additionalProperties) } : {};\n    const clonedProperties = {};\n    for (const key of propertyKeys)\n        clonedProperties[key] = CloneType(properties[key]);\n    return (requiredKeys.length > 0\n        ? { ...options, ...clonedAdditionalProperties, [Kind]: 'Object', type: 'object', properties: clonedProperties, required: requiredKeys }\n        : { ...options, ...clonedAdditionalProperties, [Kind]: 'Object', type: 'object', properties: clonedProperties });\n}\n/** `[Json]` Creates an Object type */\nexport const Object = _Object;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AAJA;;;;AAKA,oCAAoC,GACpC,SAAS,QAAQ,UAAU,EAAE,UAAU,CAAC,CAAC;IACrC,MAAM,eAAe,WAAW,MAAM,CAAC,mBAAmB,CAAC;IAC3D,MAAM,eAAe,aAAa,MAAM,CAAC,CAAC,MAAQ,CAAA,GAAA,iLAAA,CAAA,aAAU,AAAD,EAAE,UAAU,CAAC,IAAI;IAC5E,MAAM,eAAe,aAAa,MAAM,CAAC,CAAC,OAAS,CAAC,aAAa,QAAQ,CAAC;IAC1E,MAAM,6BAA6B,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,oBAAoB,IAAI;QAAE,sBAAsB,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,QAAQ,oBAAoB;IAAE,IAAI,CAAC;IACjJ,MAAM,mBAAmB,CAAC;IAC1B,KAAK,MAAM,OAAO,aACd,gBAAgB,CAAC,IAAI,GAAG,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,UAAU,CAAC,IAAI;IACrD,OAAQ,aAAa,MAAM,GAAG,IACxB;QAAE,GAAG,OAAO;QAAE,GAAG,0BAA0B;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAU,MAAM;QAAU,YAAY;QAAkB,UAAU;IAAa,IACpI;QAAE,GAAG,OAAO;QAAE,GAAG,0BAA0B;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAU,MAAM;QAAU,YAAY;IAAiB;AACtH;AAEO,MAAM,SAAS","ignoreList":[0]}},
    {"offset": {"line": 2382, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2388, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2390, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2405, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/promise/promise.mjs"],"sourcesContent":["import { CloneType } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Promise type */\nexport function Promise(item, options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Promise',\n        type: 'Promise',\n        item: CloneType(item),\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEO,SAAS,QAAQ,IAAI,EAAE,UAAU,CAAC,CAAC;IACtC,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM;QACN,MAAM,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;IACpB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 2421, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2427, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2444, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/readonly/readonly.mjs"],"sourcesContent":["import { ReadonlyKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { ReadonlyFromMappedResult } from './readonly-from-mapped-result.mjs';\nimport { IsMappedResult } from '../guard/kind.mjs';\nfunction RemoveReadonly(schema) {\n    return Discard(CloneType(schema), [ReadonlyKind]);\n}\nfunction AddReadonly(schema) {\n    return { ...CloneType(schema), [ReadonlyKind]: 'Readonly' };\n}\n// prettier-ignore\nfunction ReadonlyWithFlag(schema, F) {\n    return (F === false\n        ? RemoveReadonly(schema)\n        : AddReadonly(schema));\n}\n/** `[Json]` Creates a Readonly property */\nexport function Readonly(schema, enable) {\n    const F = enable ?? true;\n    return IsMappedResult(schema) ? ReadonlyFromMappedResult(schema, F) : ReadonlyWithFlag(schema, F);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;;;;;;AAKA,SAAS,eAAe,MAAM;IAC1B,OAAO,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,SAAS;QAAC,sLAAA,CAAA,eAAY;KAAC;AACpD;AACA,SAAS,YAAY,MAAM;IACvB,OAAO;QAAE,GAAG,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,OAAO;QAAE,CAAC,sLAAA,CAAA,eAAY,CAAC,EAAE;IAAW;AAC9D;AACA,kBAAkB;AAClB,SAAS,iBAAiB,MAAM,EAAE,CAAC;IAC/B,OAAQ,MAAM,QACR,eAAe,UACf,YAAY;AACtB;AAEO,SAAS,SAAS,MAAM,EAAE,MAAM;IACnC,MAAM,IAAI,UAAU;IACpB,OAAO,CAAA,GAAA,iLAAA,CAAA,iBAAc,AAAD,EAAE,UAAU,CAAA,GAAA,oNAAA,CAAA,2BAAwB,AAAD,EAAE,QAAQ,KAAK,iBAAiB,QAAQ;AACnG","ignoreList":[0]}},
    {"offset": {"line": 2478, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2484, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/readonly/readonly-from-mapped-result.mjs"],"sourcesContent":["import { MappedResult } from '../mapped/index.mjs';\nimport { Readonly } from './readonly.mjs';\n// prettier-ignore\nfunction FromProperties(K, F) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(K))\n        Acc[K2] = Readonly(K[K2], F);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, F) {\n    return FromProperties(R.properties, F);\n}\n// prettier-ignore\nexport function ReadonlyFromMappedResult(R, F) {\n    const P = FromMappedResult(R, F);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAEA,kBAAkB;AAClB,SAAS,eAAe,CAAC,EAAE,CAAC;IACxB,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,MAAM,WAAW,MAAM,CAAC,mBAAmB,CAAC,GACnD,GAAG,CAAC,GAAG,GAAG,CAAA,GAAA,wLAAA,CAAA,WAAQ,AAAD,EAAE,CAAC,CAAC,GAAG,EAAE;IAC9B,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,iBAAiB,CAAC,EAAE,CAAC;IAC1B,OAAO,eAAe,EAAE,UAAU,EAAE;AACxC;AAEO,SAAS,yBAAyB,CAAC,EAAE,CAAC;IACzC,MAAM,IAAI,iBAAiB,GAAG;IAC9B,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 2506, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2512, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2515, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2531, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/tuple/tuple.mjs"],"sourcesContent":["import { CloneRest } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Tuple type */\nexport function Tuple(items, options = {}) {\n    // return TupleResolver.Resolve(T)\n    const [additionalItems, minItems, maxItems] = [false, items.length, items.length];\n    // prettier-ignore\n    return (items.length > 0 ?\n        { ...options, [Kind]: 'Tuple', type: 'array', items: CloneRest(items), additionalItems, minItems, maxItems } :\n        { ...options, [Kind]: 'Tuple', type: 'array', minItems, maxItems });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEO,SAAS,MAAM,KAAK,EAAE,UAAU,CAAC,CAAC;IACrC,kCAAkC;IAClC,MAAM,CAAC,iBAAiB,UAAU,SAAS,GAAG;QAAC;QAAO,MAAM,MAAM;QAAE,MAAM,MAAM;KAAC;IACjF,kBAAkB;IAClB,OAAQ,MAAM,MAAM,GAAG,IACnB;QAAE,GAAG,OAAO;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAS,MAAM;QAAS,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;QAAQ;QAAiB;QAAU;IAAS,IAC3G;QAAE,GAAG,OAAO;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAS,MAAM;QAAS;QAAU;IAAS;AACzE","ignoreList":[0]}},
    {"offset": {"line": 2563, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2569, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2571, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2586, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/intersect/intersect-create.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\nimport { CloneType, CloneRest } from '../clone/type.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsObject, IsSchema } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// IntersectCreate\n// ------------------------------------------------------------------\n// prettier-ignore\nexport function IntersectCreate(T, options) {\n    const allObjects = T.every((schema) => IsObject(schema));\n    const clonedUnevaluatedProperties = IsSchema(options.unevaluatedProperties)\n        ? { unevaluatedProperties: CloneType(options.unevaluatedProperties) }\n        : {};\n    return ((options.unevaluatedProperties === false || IsSchema(options.unevaluatedProperties) || allObjects\n        ? { ...options, ...clonedUnevaluatedProperties, [Kind]: 'Intersect', type: 'object', allOf: CloneRest(T) }\n        : { ...options, ...clonedUnevaluatedProperties, [Kind]: 'Intersect', allOf: CloneRest(T) }));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AALA;;;;AAUO,SAAS,gBAAgB,CAAC,EAAE,OAAO;IACtC,MAAM,aAAa,EAAE,KAAK,CAAC,CAAC,SAAW,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE;IAChD,MAAM,8BAA8B,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,qBAAqB,IACpE;QAAE,uBAAuB,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,QAAQ,qBAAqB;IAAE,IAClE,CAAC;IACP,OAAS,QAAQ,qBAAqB,KAAK,SAAS,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,qBAAqB,KAAK,aACzF;QAAE,GAAG,OAAO;QAAE,GAAG,2BAA2B;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAa,MAAM;QAAU,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;IAAG,IACvG;QAAE,GAAG,OAAO;QAAE,GAAG,2BAA2B;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAa,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;IAAG;AACjG","ignoreList":[0]}},
    {"offset": {"line": 2617, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2623, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/intersect/intersect.mjs"],"sourcesContent":["import { CloneType } from '../clone/type.mjs';\nimport { Never } from '../never/index.mjs';\nimport { IntersectCreate } from './intersect-create.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform } from '../guard/kind.mjs';\n/** `[Json]` Creates an evaluated Intersect type */\nexport function Intersect(T, options = {}) {\n    if (T.length === 0)\n        return Never(options);\n    if (T.length === 1)\n        return CloneType(T[0], options);\n    if (T.some((schema) => IsTransform(schema)))\n        throw new Error('Cannot intersect transform types');\n    return IntersectCreate(T, options);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AALA;;;;;AAOO,SAAS,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;IACrC,IAAI,EAAE,MAAM,KAAK,GACb,OAAO,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE;IACjB,IAAI,EAAE,MAAM,KAAK,GACb,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,CAAC,CAAC,EAAE,EAAE;IAC3B,IAAI,EAAE,IAAI,CAAC,CAAC,SAAW,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE,UAC/B,MAAM,IAAI,MAAM;IACpB,OAAO,CAAA,GAAA,oMAAA,CAAA,kBAAe,AAAD,EAAE,GAAG;AAC9B","ignoreList":[0]}},
    {"offset": {"line": 2644, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2650, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/mapped/mapped.mjs"],"sourcesContent":["import { Kind, OptionalKind, ReadonlyKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\n// evaluation types\nimport { Array } from '../array/index.mjs';\nimport { AsyncIterator } from '../async-iterator/index.mjs';\nimport { Constructor } from '../constructor/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Iterator } from '../iterator/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { Promise } from '../promise/index.mjs';\nimport { Readonly } from '../readonly/index.mjs';\nimport { Tuple } from '../tuple/index.mjs';\nimport { Union } from '../union/index.mjs';\n// operator\nimport { SetIncludes } from '../sets/index.mjs';\n// mapping types\nimport { MappedResult } from './mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsAsyncIterator, IsConstructor, IsFunction, IsIntersect, IsIterator, IsReadonly, IsMappedResult, IsMappedKey, IsObject, IsOptional, IsPromise, IsSchema, IsTuple, IsUnion } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromMappedResult(K, P) {\n    return (K in P\n        ? FromSchemaType(K, P[K])\n        : MappedResult(P));\n}\n// prettier-ignore\nfunction MappedKeyToKnownMappedResultProperties(K) {\n    return { [K]: Literal(K) };\n}\n// prettier-ignore\nfunction MappedKeyToUnknownMappedResultProperties(P) {\n    const Acc = {};\n    for (const L of P)\n        Acc[L] = Literal(L);\n    return Acc;\n}\n// prettier-ignore\nfunction MappedKeyToMappedResultProperties(K, P) {\n    return (SetIncludes(P, K)\n        ? MappedKeyToKnownMappedResultProperties(K)\n        : MappedKeyToUnknownMappedResultProperties(P));\n}\n// prettier-ignore\nfunction FromMappedKey(K, P) {\n    const R = MappedKeyToMappedResultProperties(K, P);\n    return FromMappedResult(K, R);\n}\n// prettier-ignore\nfunction FromRest(K, T) {\n    return T.map(L => FromSchemaType(K, L));\n}\n// prettier-ignore\nfunction FromProperties(K, T) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(T))\n        Acc[K2] = FromSchemaType(K, T[K2]);\n    return Acc;\n}\n// prettier-ignore\nfunction FromSchemaType(K, T) {\n    return (\n    // unevaluated modifier types\n    IsOptional(T) ? Optional(FromSchemaType(K, Discard(T, [OptionalKind]))) :\n        IsReadonly(T) ? Readonly(FromSchemaType(K, Discard(T, [ReadonlyKind]))) :\n            // unevaluated mapped types\n            IsMappedResult(T) ? FromMappedResult(K, T.properties) :\n                IsMappedKey(T) ? FromMappedKey(K, T.keys) :\n                    // unevaluated types\n                    IsConstructor(T) ? Constructor(FromRest(K, T.parameters), FromSchemaType(K, T.returns)) :\n                        IsFunction(T) ? FunctionType(FromRest(K, T.parameters), FromSchemaType(K, T.returns)) :\n                            IsAsyncIterator(T) ? AsyncIterator(FromSchemaType(K, T.items)) :\n                                IsIterator(T) ? Iterator(FromSchemaType(K, T.items)) :\n                                    IsIntersect(T) ? Intersect(FromRest(K, T.allOf)) :\n                                        IsUnion(T) ? Union(FromRest(K, T.anyOf)) :\n                                            IsTuple(T) ? Tuple(FromRest(K, T.items ?? [])) :\n                                                IsObject(T) ? Object(FromProperties(K, T.properties)) :\n                                                    IsArray(T) ? Array(FromSchemaType(K, T.items)) :\n                                                        IsPromise(T) ? Promise(FromSchemaType(K, T.item)) :\n                                                            T);\n}\n// prettier-ignore\nexport function MappedFunctionReturnType(K, T) {\n    const Acc = {};\n    for (const L of K)\n        Acc[L] = FromSchemaType(L, T);\n    return Acc;\n}\n/** `[Json]` Creates a Mapped object type */\nexport function Mapped(key, map, options = {}) {\n    const K = IsSchema(key) ? IndexPropertyKeys(key) : key;\n    const RT = map({ [Kind]: 'MappedKey', keys: K });\n    const R = MappedFunctionReturnType(K, RT);\n    return CloneType(Object(R), options);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2777, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2783, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2787, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2804, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/optional/optional-from-mapped-result.mjs"],"sourcesContent":["import { MappedResult } from '../mapped/index.mjs';\nimport { Optional } from './optional.mjs';\n// prettier-ignore\nfunction FromProperties(P, F) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Optional(P[K2], F);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, F) {\n    return FromProperties(R.properties, F);\n}\n// prettier-ignore\nexport function OptionalFromMappedResult(R, F) {\n    const P = FromMappedResult(R, F);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAEA,kBAAkB;AAClB,SAAS,eAAe,CAAC,EAAE,CAAC;IACxB,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,MAAM,WAAW,MAAM,CAAC,mBAAmB,CAAC,GACnD,GAAG,CAAC,GAAG,GAAG,CAAA,GAAA,wLAAA,CAAA,WAAQ,AAAD,EAAE,CAAC,CAAC,GAAG,EAAE;IAC9B,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,iBAAiB,CAAC,EAAE,CAAC;IAC1B,OAAO,eAAe,EAAE,UAAU,EAAE;AACxC;AAEO,SAAS,yBAAyB,CAAC,EAAE,CAAC;IACzC,MAAM,IAAI,iBAAiB,GAAG;IAC9B,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 2826, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2832, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2835, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2851, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/intersect/intersect-evaluated.mjs"],"sourcesContent":["import { OptionalKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { IntersectCreate } from './intersect-create.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsOptional, IsTransform } from '../guard/kind.mjs';\n// prettier-ignore\nfunction IsIntersectOptional(T) {\n    return T.every(L => IsOptional(L));\n}\n// prettier-ignore\nfunction RemoveOptionalFromType(T) {\n    return (Discard(T, [OptionalKind]));\n}\n// prettier-ignore\nfunction RemoveOptionalFromRest(T) {\n    return T.map(L => IsOptional(L) ? RemoveOptionalFromType(L) : L);\n}\n// prettier-ignore\nfunction ResolveIntersect(T, options) {\n    return (IsIntersectOptional(T)\n        ? Optional(IntersectCreate(RemoveOptionalFromRest(T), options))\n        : IntersectCreate(RemoveOptionalFromRest(T), options));\n}\n/** `[Json]` Creates an evaluated Intersect type */\nexport function IntersectEvaluated(T, options = {}) {\n    if (T.length === 0)\n        return Never(options);\n    if (T.length === 1)\n        return CloneType(T[0], options);\n    if (T.some((schema) => IsTransform(schema)))\n        throw new Error('Cannot intersect transform types');\n    return ResolveIntersect(T, options);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AAPA;AAFA;AAIA;AADA;;;;;;;;AAOA,kBAAkB;AAClB,SAAS,oBAAoB,CAAC;IAC1B,OAAO,EAAE,KAAK,CAAC,CAAA,IAAK,CAAA,GAAA,iLAAA,CAAA,aAAU,AAAD,EAAE;AACnC;AACA,kBAAkB;AAClB,SAAS,uBAAuB,CAAC;IAC7B,OAAQ,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,GAAG;QAAC,sLAAA,CAAA,eAAY;KAAC;AACrC;AACA,kBAAkB;AAClB,SAAS,uBAAuB,CAAC;IAC7B,OAAO,EAAE,GAAG,CAAC,CAAA,IAAK,CAAA,GAAA,iLAAA,CAAA,aAAU,AAAD,EAAE,KAAK,uBAAuB,KAAK;AAClE;AACA,kBAAkB;AAClB,SAAS,iBAAiB,CAAC,EAAE,OAAO;IAChC,OAAQ,oBAAoB,KACtB,CAAA,GAAA,wLAAA,CAAA,WAAQ,AAAD,EAAE,CAAA,GAAA,oMAAA,CAAA,kBAAe,AAAD,EAAE,uBAAuB,IAAI,YACpD,CAAA,GAAA,oMAAA,CAAA,kBAAe,AAAD,EAAE,uBAAuB,IAAI;AACrD;AAEO,SAAS,mBAAmB,CAAC,EAAE,UAAU,CAAC,CAAC;IAC9C,IAAI,EAAE,MAAM,KAAK,GACb,OAAO,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE;IACjB,IAAI,EAAE,MAAM,KAAK,GACb,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,CAAC,CAAC,EAAE,EAAE;IAC3B,IAAI,EAAE,IAAI,CAAC,CAAC,SAAW,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE,UAC/B,MAAM,IAAI,MAAM;IACpB,OAAO,iBAAiB,GAAG;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 2899, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2905, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/intersect/intersect-type.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n"],"names":[],"mappings":";AAAA","ignoreList":[0]}},
    {"offset": {"line": 2908, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2914, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2918, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2935, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/awaited/awaited.mjs"],"sourcesContent":["import { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsIntersect, IsUnion, IsPromise } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(T) {\n    return T.map(L => AwaitedResolve(L));\n}\n// prettier-ignore\nfunction FromIntersect(T) {\n    return Intersect(FromRest(T));\n}\n// prettier-ignore\nfunction FromUnion(T) {\n    return Union(FromRest(T));\n}\n// prettier-ignore\nfunction FromPromise(T) {\n    return AwaitedResolve(T);\n}\n// ----------------------------------------------------------------\n// AwaitedResolve\n// ----------------------------------------------------------------\n// prettier-ignore\nfunction AwaitedResolve(T) {\n    return (IsIntersect(T) ? FromIntersect(T.allOf) :\n        IsUnion(T) ? FromUnion(T.anyOf) :\n            IsPromise(T) ? FromPromise(T.item) :\n                T);\n}\n/** `[JavaScript]` Constructs a type by recursively unwrapping Promise types */\nexport function Awaited(T, options = {}) {\n    return CloneType(AwaitedResolve(T), options);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AANA;AACA;;;;;AAMA,kBAAkB;AAClB,SAAS,SAAS,CAAC;IACf,OAAO,EAAE,GAAG,CAAC,CAAA,IAAK,eAAe;AACrC;AACA,kBAAkB;AAClB,SAAS,cAAc,CAAC;IACpB,OAAO,CAAA,GAAA,0LAAA,CAAA,YAAS,AAAD,EAAE,SAAS;AAC9B;AACA,kBAAkB;AAClB,SAAS,UAAU,CAAC;IAChB,OAAO,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE,SAAS;AAC1B;AACA,kBAAkB;AAClB,SAAS,YAAY,CAAC;IAClB,OAAO,eAAe;AAC1B;AACA,mEAAmE;AACnE,iBAAiB;AACjB,mEAAmE;AACnE,kBAAkB;AAClB,SAAS,eAAe,CAAC;IACrB,OAAQ,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE,KAAK,cAAc,EAAE,KAAK,IAC1C,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,KAAK,UAAU,EAAE,KAAK,IAC1B,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,YAAY,EAAE,IAAI,IAC7B;AAChB;AAEO,SAAS,QAAQ,CAAC,EAAE,UAAU,CAAC,CAAC;IACnC,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,eAAe,IAAI;AACxC","ignoreList":[0]}},
    {"offset": {"line": 2977, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2983, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2985, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3000, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/keyof/keyof-property-keys.mjs"],"sourcesContent":["import { SetUnionMany, SetIntersectMany } from '../sets/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsIntersect, IsUnion, IsTuple, IsArray, IsObject, IsRecord } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(T) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(KeyOfPropertyKeys(L));\n    return Acc;\n}\n// prettier-ignore\nfunction FromIntersect(T) {\n    const C = FromRest(T);\n    const R = SetUnionMany(C);\n    return R;\n}\n// prettier-ignore\nfunction FromUnion(T) {\n    const C = FromRest(T);\n    const R = SetIntersectMany(C);\n    return R;\n}\n// prettier-ignore\nfunction FromTuple(T) {\n    return T.map((_, I) => I.toString());\n}\n// prettier-ignore\nfunction FromArray(_) {\n    return (['[number]']);\n}\n// prettier-ignore\nfunction FromProperties(T) {\n    return (globalThis.Object.getOwnPropertyNames(T));\n}\n// ------------------------------------------------------------------\n// FromPatternProperties\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromPatternProperties(patternProperties) {\n    if (!includePatternProperties)\n        return [];\n    const patternPropertyKeys = globalThis.Object.getOwnPropertyNames(patternProperties);\n    return patternPropertyKeys.map(key => {\n        return (key[0] === '^' && key[key.length - 1] === '$')\n            ? key.slice(1, key.length - 1)\n            : key;\n    });\n}\n/** Returns a tuple of PropertyKeys derived from the given TSchema. */\n// prettier-ignore\nexport function KeyOfPropertyKeys(T) {\n    return (IsIntersect(T) ? FromIntersect(T.allOf) :\n        IsUnion(T) ? FromUnion(T.anyOf) :\n            IsTuple(T) ? FromTuple(T.items ?? []) :\n                IsArray(T) ? FromArray(T.items) :\n                    IsObject(T) ? FromProperties(T.properties) :\n                        IsRecord(T) ? FromPatternProperties(T.patternProperties) :\n                            []);\n}\n// ----------------------------------------------------------------\n// KeyOfPattern\n// ----------------------------------------------------------------\nlet includePatternProperties = false;\n/** Returns a regular expression pattern derived from the given TSchema */\nexport function KeyOfPattern(schema) {\n    includePatternProperties = true;\n    const keys = KeyOfPropertyKeys(schema);\n    includePatternProperties = false;\n    const pattern = keys.map((key) => `(${key})`);\n    return `^(${pattern.join('|')})$`;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AAJA;;;AAKA,kBAAkB;AAClB,SAAS,SAAS,CAAC;IACf,MAAM,MAAM,EAAE;IACd,KAAK,MAAM,KAAK,EACZ,IAAI,IAAI,CAAC,kBAAkB;IAC/B,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,cAAc,CAAC;IACpB,MAAM,IAAI,SAAS;IACnB,MAAM,IAAI,CAAA,GAAA,+KAAA,CAAA,eAAY,AAAD,EAAE;IACvB,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,UAAU,CAAC;IAChB,MAAM,IAAI,SAAS;IACnB,MAAM,IAAI,CAAA,GAAA,+KAAA,CAAA,mBAAgB,AAAD,EAAE;IAC3B,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,UAAU,CAAC;IAChB,OAAO,EAAE,GAAG,CAAC,CAAC,GAAG,IAAM,EAAE,QAAQ;AACrC;AACA,kBAAkB;AAClB,SAAS,UAAU,CAAC;IAChB,OAAQ;QAAC;KAAW;AACxB;AACA,kBAAkB;AAClB,SAAS,eAAe,CAAC;IACrB,OAAQ,WAAW,MAAM,CAAC,mBAAmB,CAAC;AAClD;AACA,qEAAqE;AACrE,wBAAwB;AACxB,qEAAqE;AACrE,kBAAkB;AAClB,SAAS,sBAAsB,iBAAiB;IAC5C,IAAI,CAAC,0BACD,OAAO,EAAE;IACb,MAAM,sBAAsB,WAAW,MAAM,CAAC,mBAAmB,CAAC;IAClE,OAAO,oBAAoB,GAAG,CAAC,CAAA;QAC3B,OAAO,AAAC,GAAG,CAAC,EAAE,KAAK,OAAO,GAAG,CAAC,IAAI,MAAM,GAAG,EAAE,KAAK,MAC5C,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,GAAG,KAC1B;IACV;AACJ;AAGO,SAAS,kBAAkB,CAAC;IAC/B,OAAQ,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE,KAAK,cAAc,EAAE,KAAK,IAC1C,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,KAAK,UAAU,EAAE,KAAK,IAC1B,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,KAAK,UAAU,EAAE,KAAK,IAAI,EAAE,IAChC,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,KAAK,UAAU,EAAE,KAAK,IAC1B,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,eAAe,EAAE,UAAU,IACrC,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,sBAAsB,EAAE,iBAAiB,IACnD,EAAE;AAC9B;AACA,mEAAmE;AACnE,eAAe;AACf,mEAAmE;AACnE,IAAI,2BAA2B;AAExB,SAAS,aAAa,MAAM;IAC/B,2BAA2B;IAC3B,MAAM,OAAO,kBAAkB;IAC/B,2BAA2B;IAC3B,MAAM,UAAU,KAAK,GAAG,CAAC,CAAC,MAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAC5C,OAAO,CAAC,EAAE,EAAE,QAAQ,IAAI,CAAC,KAAK,EAAE,CAAC;AACrC","ignoreList":[0]}},
    {"offset": {"line": 3069, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3075, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/keyof/keyof.mjs"],"sourcesContent":["import { Literal } from '../literal/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { KeyOfPropertyKeys } from './keyof-property-keys.mjs';\nimport { UnionEvaluated } from '../union/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { KeyOfFromMappedResult } from './keyof-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult } from '../guard/kind.mjs';\n// prettier-ignore\nexport function KeyOfPropertyKeysToRest(T) {\n    return T.map(L => L === '[number]' ? Number() : Literal(L));\n}\n/** `[Json]` Creates a KeyOf type */\nexport function KeyOf(T, options = {}) {\n    if (IsMappedResult(T)) {\n        return KeyOfFromMappedResult(T, options);\n    }\n    else {\n        const K = KeyOfPropertyKeys(T);\n        const S = KeyOfPropertyKeysToRest(K);\n        const U = UnionEvaluated(S);\n        return CloneType(U, options);\n    }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AATA;AACA;AAEA;;;;;;;;AAQO,SAAS,wBAAwB,CAAC;IACrC,OAAO,EAAE,GAAG,CAAC,CAAA,IAAK,MAAM,aAAa,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,MAAM,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE;AAC5D;AAEO,SAAS,MAAM,CAAC,EAAE,UAAU,CAAC,CAAC;IACjC,IAAI,CAAA,GAAA,iLAAA,CAAA,iBAAc,AAAD,EAAE,IAAI;QACnB,OAAO,CAAA,GAAA,8MAAA,CAAA,wBAAqB,AAAD,EAAE,GAAG;IACpC,OACK;QACD,MAAM,IAAI,CAAA,GAAA,sMAAA,CAAA,oBAAiB,AAAD,EAAE;QAC5B,MAAM,IAAI,wBAAwB;QAClC,MAAM,IAAI,CAAA,GAAA,+LAAA,CAAA,iBAAc,AAAD,EAAE;QACzB,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,GAAG;IACxB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3118, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/keyof/keyof-from-mapped-result.mjs"],"sourcesContent":["import { MappedResult } from '../mapped/index.mjs';\nimport { KeyOf } from './keyof.mjs';\n// prettier-ignore\nfunction FromProperties(K, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(K))\n        Acc[K2] = KeyOf(K[K2], options);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, options) {\n    return FromProperties(R.properties, options);\n}\n// prettier-ignore\nexport function KeyOfFromMappedResult(R, options) {\n    const P = FromMappedResult(R, options);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAEA,kBAAkB;AAClB,SAAS,eAAe,CAAC,EAAE,OAAO;IAC9B,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,MAAM,WAAW,MAAM,CAAC,mBAAmB,CAAC,GACnD,GAAG,CAAC,GAAG,GAAG,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE,CAAC,CAAC,GAAG,EAAE;IAC3B,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,iBAAiB,CAAC,EAAE,OAAO;IAChC,OAAO,eAAe,EAAE,UAAU,EAAE;AACxC;AAEO,SAAS,sBAAsB,CAAC,EAAE,OAAO;IAC5C,MAAM,IAAI,iBAAiB,GAAG;IAC9B,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 3140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3146, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/keyof/keyof-property-entries.mjs"],"sourcesContent":["import { IndexFromPropertyKeys } from '../indexed/indexed.mjs';\nimport { KeyOfPropertyKeys } from './keyof-property-keys.mjs';\n/**\n * `[Utility]` Resolves an array of keys and schemas from the given schema. This method is faster\n * than obtaining the keys and resolving each individually via indexing. This method was written\n * accellerate Intersect and Union encoding.\n */\nexport function KeyOfPropertyEntries(schema) {\n    const keys = KeyOfPropertyKeys(schema);\n    const schemas = IndexFromPropertyKeys(schema, keys);\n    return keys.map((_, index) => [keys[index], schemas[index]]);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAMO,SAAS,qBAAqB,MAAM;IACvC,MAAM,OAAO,CAAA,GAAA,sMAAA,CAAA,oBAAiB,AAAD,EAAE;IAC/B,MAAM,UAAU,CAAA,GAAA,sLAAA,CAAA,wBAAqB,AAAD,EAAE,QAAQ;IAC9C,OAAO,KAAK,GAAG,CAAC,CAAC,GAAG,QAAU;YAAC,IAAI,CAAC,MAAM;YAAE,OAAO,CAAC,MAAM;SAAC;AAC/D","ignoreList":[0]}},
    {"offset": {"line": 3161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3172, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3190, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/composite/composite.mjs"],"sourcesContent":["import { IntersectEvaluated } from '../intersect/index.mjs';\nimport { IndexFromPropertyKeys } from '../indexed/index.mjs';\nimport { KeyOfPropertyKeys } from '../keyof/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { SetDistinct } from '../sets/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsNever } from '../guard/kind.mjs';\n// prettier-ignore\nfunction CompositeKeys(T) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(...KeyOfPropertyKeys(L));\n    return SetDistinct(Acc);\n}\n// prettier-ignore\nfunction FilterNever(T) {\n    return T.filter(L => !IsNever(L));\n}\n// prettier-ignore\nfunction CompositeProperty(T, K) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(...IndexFromPropertyKeys(L, [K]));\n    return FilterNever(Acc);\n}\n// prettier-ignore\nfunction CompositeProperties(T, K) {\n    const Acc = {};\n    for (const L of K) {\n        Acc[L] = IntersectEvaluated(CompositeProperty(T, L));\n    }\n    return Acc;\n}\n// prettier-ignore\nexport function Composite(T, options = {}) {\n    const K = CompositeKeys(T);\n    const P = CompositeProperties(T, K);\n    const R = Object(P, options);\n    return R;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AANA;AAEA;AAHA;AADA;AAGA;;;;;;;AAMA,kBAAkB;AAClB,SAAS,cAAc,CAAC;IACpB,MAAM,MAAM,EAAE;IACd,KAAK,MAAM,KAAK,EACZ,IAAI,IAAI,IAAI,CAAA,GAAA,sMAAA,CAAA,oBAAiB,AAAD,EAAE;IAClC,OAAO,CAAA,GAAA,+KAAA,CAAA,cAAW,AAAD,EAAE;AACvB;AACA,kBAAkB;AAClB,SAAS,YAAY,CAAC;IAClB,OAAO,EAAE,MAAM,CAAC,CAAA,IAAK,CAAC,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE;AAClC;AACA,kBAAkB;AAClB,SAAS,kBAAkB,CAAC,EAAE,CAAC;IAC3B,MAAM,MAAM,EAAE;IACd,KAAK,MAAM,KAAK,EACZ,IAAI,IAAI,IAAI,CAAA,GAAA,sLAAA,CAAA,wBAAqB,AAAD,EAAE,GAAG;QAAC;KAAE;IAC5C,OAAO,YAAY;AACvB;AACA,kBAAkB;AAClB,SAAS,oBAAoB,CAAC,EAAE,CAAC;IAC7B,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,KAAK,EAAG;QACf,GAAG,CAAC,EAAE,GAAG,CAAA,GAAA,uMAAA,CAAA,qBAAkB,AAAD,EAAE,kBAAkB,GAAG;IACrD;IACA,OAAO;AACX;AAEO,SAAS,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;IACrC,MAAM,IAAI,cAAc;IACxB,MAAM,IAAI,oBAAoB,GAAG;IACjC,MAAM,IAAI,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,EAAE,GAAG;IACpB,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 3245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3268, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/date/date.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Date type */\nexport function Date(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Date',\n        type: 'Date',\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,KAAK,UAAU,CAAC,CAAC;IAC7B,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM;IACV;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3287, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3304, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/null/null.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Null type */\nexport function Null(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Null',\n        type: 'null',\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,KAAK,UAAU,CAAC,CAAC;IAC7B,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM;IACV;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3317, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3323, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3325, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3340, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/symbol/symbol.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Symbol type */\nexport function Symbol(options) {\n    return { ...options, [Kind]: 'Symbol', type: 'symbol' };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,OAAO,OAAO;IAC1B,OAAO;QAAE,GAAG,OAAO;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAU,MAAM;IAAS;AAC1D","ignoreList":[0]}},
    {"offset": {"line": 3353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3361, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3376, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/undefined/undefined.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Undefined type */\nexport function Undefined(options = {}) {\n    return { ...options, [Kind]: 'Undefined', type: 'undefined' };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,UAAU,UAAU,CAAC,CAAC;IAClC,OAAO;QAAE,GAAG,OAAO;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAa,MAAM;IAAY;AAChE","ignoreList":[0]}},
    {"offset": {"line": 3389, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3397, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3412, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/uint8array/uint8array.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Uint8Array type */\nexport function Uint8Array(options = {}) {\n    return { ...options, [Kind]: 'Uint8Array', type: 'Uint8Array' };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,WAAW,UAAU,CAAC,CAAC;IACnC,OAAO;QAAE,GAAG,OAAO;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAc,MAAM;IAAa;AAClE","ignoreList":[0]}},
    {"offset": {"line": 3425, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3433, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3448, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/unknown/unknown.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Unknown type */\nexport function Unknown(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Unknown',\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,QAAQ,UAAU,CAAC,CAAC;IAChC,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;IACZ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3460, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3466, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3468, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3483, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/const/const.mjs"],"sourcesContent":["import { Any } from '../any/index.mjs';\nimport { BigInt } from '../bigint/index.mjs';\nimport { Date } from '../date/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Null } from '../null/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Symbol } from '../symbol/index.mjs';\nimport { Tuple } from '../tuple/index.mjs';\nimport { Readonly } from '../readonly/index.mjs';\nimport { Undefined } from '../undefined/index.mjs';\nimport { Uint8Array } from '../uint8array/index.mjs';\nimport { Unknown } from '../unknown/index.mjs';\nimport { CloneType } from '../clone/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsNumber, IsBigInt, IsUint8Array, IsDate, IsIterator, IsObject, IsAsyncIterator, IsFunction, IsUndefined, IsNull, IsSymbol, IsBoolean, IsString } from '../guard/value.mjs';\n// prettier-ignore\nfunction FromArray(T) {\n    return T.map(L => FromValue(L, false));\n}\n// prettier-ignore\nfunction FromProperties(value) {\n    const Acc = {};\n    for (const K of globalThis.Object.getOwnPropertyNames(value))\n        Acc[K] = Readonly(FromValue(value[K], false));\n    return Acc;\n}\nfunction ConditionalReadonly(T, root) {\n    return (root === true ? T : Readonly(T));\n}\n// prettier-ignore\nfunction FromValue(value, root) {\n    return (IsAsyncIterator(value) ? ConditionalReadonly(Any(), root) :\n        IsIterator(value) ? ConditionalReadonly(Any(), root) :\n            IsArray(value) ? Readonly(Tuple(FromArray(value))) :\n                IsUint8Array(value) ? Uint8Array() :\n                    IsDate(value) ? Date() :\n                        IsObject(value) ? ConditionalReadonly(Object(FromProperties(value)), root) :\n                            IsFunction(value) ? ConditionalReadonly(FunctionType([], Unknown()), root) :\n                                IsUndefined(value) ? Undefined() :\n                                    IsNull(value) ? Null() :\n                                        IsSymbol(value) ? Symbol() :\n                                            IsBigInt(value) ? BigInt() :\n                                                IsNumber(value) ? Literal(value) :\n                                                    IsBoolean(value) ? Literal(value) :\n                                                        IsString(value) ? Literal(value) :\n                                                            Object({}));\n}\n/** `[JavaScript]` Creates a readonly const type from the given value. */\nexport function Const(T, options = {}) {\n    return CloneType(FromValue(T, true), options);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3553, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3559, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3561, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3576, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/constructor-parameters/constructor-parameters.mjs"],"sourcesContent":["import { Tuple } from '../tuple/index.mjs';\nimport { CloneRest } from '../clone/type.mjs';\n/** `[JavaScript]` Extracts the ConstructorParameters from the given Constructor type */\nexport function ConstructorParameters(schema, options = {}) {\n    return Tuple(CloneRest(schema.parameters), { ...options });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAGO,SAAS,sBAAsB,MAAM,EAAE,UAAU,CAAC,CAAC;IACtD,OAAO,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,OAAO,UAAU,GAAG;QAAE,GAAG,OAAO;IAAC;AAC5D","ignoreList":[0]}},
    {"offset": {"line": 3589, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3595, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3597, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3612, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/deref/deref.mjs"],"sourcesContent":["import { CloneType, CloneRest } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { IsUndefined } from '../guard/value.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsConstructor, IsFunction, IsIntersect, IsUnion, IsTuple, IsArray, IsObject, IsPromise, IsAsyncIterator, IsIterator, IsRef } from '../guard/kind.mjs';\nfunction FromRest(schema, references) {\n    return schema.map((schema) => Deref(schema, references));\n}\n// prettier-ignore\nfunction FromProperties(properties, references) {\n    const Acc = {};\n    for (const K of globalThis.Object.getOwnPropertyNames(properties)) {\n        Acc[K] = Deref(properties[K], references);\n    }\n    return Acc;\n}\n// prettier-ignore\nfunction FromConstructor(schema, references) {\n    schema.parameters = FromRest(schema.parameters, references);\n    schema.returns = Deref(schema.returns, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromFunction(schema, references) {\n    schema.parameters = FromRest(schema.parameters, references);\n    schema.returns = Deref(schema.returns, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromIntersect(schema, references) {\n    schema.allOf = FromRest(schema.allOf, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromUnion(schema, references) {\n    schema.anyOf = FromRest(schema.anyOf, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromTuple(schema, references) {\n    if (IsUndefined(schema.items))\n        return schema;\n    schema.items = FromRest(schema.items, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromArray(schema, references) {\n    schema.items = Deref(schema.items, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromObject(schema, references) {\n    schema.properties = FromProperties(schema.properties, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromPromise(schema, references) {\n    schema.item = Deref(schema.item, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromAsyncIterator(schema, references) {\n    schema.items = Deref(schema.items, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromIterator(schema, references) {\n    schema.items = Deref(schema.items, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromRef(schema, references) {\n    const target = references.find(remote => remote.$id === schema.$ref);\n    if (target === undefined)\n        throw Error(`Unable to dereference schema with $id ${schema.$ref}`);\n    const discard = Discard(target, ['$id']);\n    return Deref(discard, references);\n}\n// prettier-ignore\nfunction DerefResolve(schema, references) {\n    return (IsConstructor(schema) ? FromConstructor(schema, references) :\n        IsFunction(schema) ? FromFunction(schema, references) :\n            IsIntersect(schema) ? FromIntersect(schema, references) :\n                IsUnion(schema) ? FromUnion(schema, references) :\n                    IsTuple(schema) ? FromTuple(schema, references) :\n                        IsArray(schema) ? FromArray(schema, references) :\n                            IsObject(schema) ? FromObject(schema, references) :\n                                IsPromise(schema) ? FromPromise(schema, references) :\n                                    IsAsyncIterator(schema) ? FromAsyncIterator(schema, references) :\n                                        IsIterator(schema) ? FromIterator(schema, references) :\n                                            IsRef(schema) ? FromRef(schema, references) :\n                                                schema);\n}\n// ------------------------------------------------------------------\n// TDeref\n// ------------------------------------------------------------------\n/** `[Json]` Creates a dereferenced type */\nexport function Deref(schema, references) {\n    return DerefResolve(CloneType(schema), CloneRest(references));\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3707, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3713, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3715, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3730, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/enum/enum.mjs"],"sourcesContent":["import { Literal } from '../literal/index.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\nimport { Union } from '../union/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsUndefined } from '../guard/value.mjs';\n/** `[Json]` Creates a Enum type */\nexport function Enum(item, options = {}) {\n    if (IsUndefined(item))\n        throw new Error('Enum undefined or empty');\n    const values1 = globalThis.Object.getOwnPropertyNames(item)\n        .filter((key) => isNaN(key))\n        .map((key) => item[key]);\n    const values2 = [...new Set(values1)];\n    const anyOf = values2.map((value) => Literal(value));\n    return Union(anyOf, { ...options, [Hint]: 'Enum' });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA,qEAAqE;AACrE,aAAa;AACb,qEAAqE;AACrE;AANA;AAEA;AADA;;;;;AAOO,SAAS,KAAK,IAAI,EAAE,UAAU,CAAC,CAAC;IACnC,IAAI,CAAA,GAAA,kLAAA,CAAA,cAAW,AAAD,EAAE,OACZ,MAAM,IAAI,MAAM;IACpB,MAAM,UAAU,WAAW,MAAM,CAAC,mBAAmB,CAAC,MACjD,MAAM,CAAC,CAAC,MAAQ,MAAM,MACtB,GAAG,CAAC,CAAC,MAAQ,IAAI,CAAC,IAAI;IAC3B,MAAM,UAAU;WAAI,IAAI,IAAI;KAAS;IACrC,MAAM,QAAQ,QAAQ,GAAG,CAAC,CAAC,QAAU,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE;IAC7C,OAAO,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE,OAAO;QAAE,GAAG,OAAO;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;IAAO;AACrD","ignoreList":[0]}},
    {"offset": {"line": 3759, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3765, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3767, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3802, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/extends/extends-check.mjs"],"sourcesContent":["import { Any } from '../any/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { String } from '../string/index.mjs';\nimport { Unknown } from '../unknown/index.mjs';\nimport { TemplateLiteralToUnion } from '../template-literal/index.mjs';\nimport { PatternNumberExact, PatternStringExact } from '../patterns/index.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\nimport { TypeGuard, ValueGuard } from '../guard/index.mjs';\nexport class ExtendsResolverError extends TypeBoxError {\n}\nexport var ExtendsResult;\n(function (ExtendsResult) {\n    ExtendsResult[ExtendsResult[\"Union\"] = 0] = \"Union\";\n    ExtendsResult[ExtendsResult[\"True\"] = 1] = \"True\";\n    ExtendsResult[ExtendsResult[\"False\"] = 2] = \"False\";\n})(ExtendsResult || (ExtendsResult = {}));\n// ------------------------------------------------------------------\n// IntoBooleanResult\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IntoBooleanResult(result) {\n    return result === ExtendsResult.False ? result : ExtendsResult.True;\n}\n// ------------------------------------------------------------------\n// Throw\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Throw(message) {\n    throw new ExtendsResolverError(message);\n}\n// ------------------------------------------------------------------\n// StructuralRight\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsStructuralRight(right) {\n    return (TypeGuard.IsNever(right) ||\n        TypeGuard.IsIntersect(right) ||\n        TypeGuard.IsUnion(right) ||\n        TypeGuard.IsUnknown(right) ||\n        TypeGuard.IsAny(right));\n}\n// prettier-ignore\nfunction StructuralRight(left, right) {\n    return (TypeGuard.IsNever(right) ? FromNeverRight(left, right) :\n        TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n            TypeGuard.IsUnion(right) ? FromUnionRight(left, right) :\n                TypeGuard.IsUnknown(right) ? FromUnknownRight(left, right) :\n                    TypeGuard.IsAny(right) ? FromAnyRight(left, right) :\n                        Throw('StructuralRight'));\n}\n// ------------------------------------------------------------------\n// Any\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromAnyRight(left, right) {\n    return ExtendsResult.True;\n}\n// prettier-ignore\nfunction FromAny(left, right) {\n    return (TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n        (TypeGuard.IsUnion(right) && right.anyOf.some((schema) => TypeGuard.IsAny(schema) || TypeGuard.IsUnknown(schema))) ? ExtendsResult.True :\n            TypeGuard.IsUnion(right) ? ExtendsResult.Union :\n                TypeGuard.IsUnknown(right) ? ExtendsResult.True :\n                    TypeGuard.IsAny(right) ? ExtendsResult.True :\n                        ExtendsResult.Union);\n}\n// ------------------------------------------------------------------\n// Array\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromArrayRight(left, right) {\n    return (TypeGuard.IsUnknown(left) ? ExtendsResult.False :\n        TypeGuard.IsAny(left) ? ExtendsResult.Union :\n            TypeGuard.IsNever(left) ? ExtendsResult.True :\n                ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromArray(left, right) {\n    return (TypeGuard.IsObject(right) && IsObjectArrayLike(right) ? ExtendsResult.True :\n        IsStructuralRight(right) ? StructuralRight(left, right) :\n            !TypeGuard.IsArray(right) ? ExtendsResult.False :\n                IntoBooleanResult(Visit(left.items, right.items)));\n}\n// ------------------------------------------------------------------\n// AsyncIterator\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromAsyncIterator(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        !TypeGuard.IsAsyncIterator(right) ? ExtendsResult.False :\n            IntoBooleanResult(Visit(left.items, right.items)));\n}\n// ------------------------------------------------------------------\n// BigInt\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromBigInt(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsBigInt(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Boolean\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromBooleanRight(left, right) {\n    return (TypeGuard.IsLiteralBoolean(left) ? ExtendsResult.True :\n        TypeGuard.IsBoolean(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromBoolean(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsBoolean(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Constructor\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromConstructor(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            !TypeGuard.IsConstructor(right) ? ExtendsResult.False :\n                left.parameters.length > right.parameters.length ? ExtendsResult.False :\n                    (!left.parameters.every((schema, index) => IntoBooleanResult(Visit(right.parameters[index], schema)) === ExtendsResult.True)) ? ExtendsResult.False :\n                        IntoBooleanResult(Visit(left.returns, right.returns)));\n}\n// ------------------------------------------------------------------\n// Date\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromDate(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsDate(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Function\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromFunction(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            !TypeGuard.IsFunction(right) ? ExtendsResult.False :\n                left.parameters.length > right.parameters.length ? ExtendsResult.False :\n                    (!left.parameters.every((schema, index) => IntoBooleanResult(Visit(right.parameters[index], schema)) === ExtendsResult.True)) ? ExtendsResult.False :\n                        IntoBooleanResult(Visit(left.returns, right.returns)));\n}\n// ------------------------------------------------------------------\n// Integer\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromIntegerRight(left, right) {\n    return (TypeGuard.IsLiteral(left) && ValueGuard.IsNumber(left.const) ? ExtendsResult.True :\n        TypeGuard.IsNumber(left) || TypeGuard.IsInteger(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromInteger(left, right) {\n    return (TypeGuard.IsInteger(right) || TypeGuard.IsNumber(right) ? ExtendsResult.True :\n        IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Intersect\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromIntersectRight(left, right) {\n    return right.allOf.every((schema) => Visit(left, schema) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// prettier-ignore\nfunction FromIntersect(left, right) {\n    return left.allOf.some((schema) => Visit(schema, right) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// ------------------------------------------------------------------\n// Iterator\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromIterator(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        !TypeGuard.IsIterator(right) ? ExtendsResult.False :\n            IntoBooleanResult(Visit(left.items, right.items)));\n}\n// ------------------------------------------------------------------\n// Literal\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromLiteral(left, right) {\n    return (TypeGuard.IsLiteral(right) && right.const === left.const ? ExtendsResult.True :\n        IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                    TypeGuard.IsString(right) ? FromStringRight(left, right) :\n                        TypeGuard.IsNumber(right) ? FromNumberRight(left, right) :\n                            TypeGuard.IsInteger(right) ? FromIntegerRight(left, right) :\n                                TypeGuard.IsBoolean(right) ? FromBooleanRight(left, right) :\n                                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Never\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromNeverRight(left, right) {\n    return ExtendsResult.False;\n}\n// prettier-ignore\nfunction FromNever(left, right) {\n    return ExtendsResult.True;\n}\n// ------------------------------------------------------------------\n// Not\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction UnwrapTNot(schema) {\n    let [current, depth] = [schema, 0];\n    while (true) {\n        if (!TypeGuard.IsNot(current))\n            break;\n        current = current.not;\n        depth += 1;\n    }\n    return depth % 2 === 0 ? current : Unknown();\n}\n// prettier-ignore\nfunction FromNot(left, right) {\n    // TypeScript has no concept of negated types, and attempts to correctly check the negated\n    // type at runtime would put TypeBox at odds with TypeScripts ability to statically infer\n    // the type. Instead we unwrap to either unknown or T and continue evaluating.\n    // prettier-ignore\n    return (TypeGuard.IsNot(left) ? Visit(UnwrapTNot(left), right) :\n        TypeGuard.IsNot(right) ? Visit(left, UnwrapTNot(right)) :\n            Throw('Invalid fallthrough for Not'));\n}\n// ------------------------------------------------------------------\n// Null\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromNull(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsNull(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Number\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromNumberRight(left, right) {\n    return (TypeGuard.IsLiteralNumber(left) ? ExtendsResult.True :\n        TypeGuard.IsNumber(left) || TypeGuard.IsInteger(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromNumber(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsInteger(right) || TypeGuard.IsNumber(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Object\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsObjectPropertyCount(schema, count) {\n    return Object.getOwnPropertyNames(schema.properties).length === count;\n}\n// prettier-ignore\nfunction IsObjectStringLike(schema) {\n    return IsObjectArrayLike(schema);\n}\n// prettier-ignore\nfunction IsObjectSymbolLike(schema) {\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'description' in schema.properties && TypeGuard.IsUnion(schema.properties.description) && schema.properties.description.anyOf.length === 2 && ((TypeGuard.IsString(schema.properties.description.anyOf[0]) &&\n        TypeGuard.IsUndefined(schema.properties.description.anyOf[1])) || (TypeGuard.IsString(schema.properties.description.anyOf[1]) &&\n        TypeGuard.IsUndefined(schema.properties.description.anyOf[0]))));\n}\n// prettier-ignore\nfunction IsObjectNumberLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectBooleanLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectBigIntLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectDateLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectUint8ArrayLike(schema) {\n    return IsObjectArrayLike(schema);\n}\n// prettier-ignore\nfunction IsObjectFunctionLike(schema) {\n    const length = Number();\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'length' in schema.properties && IntoBooleanResult(Visit(schema.properties['length'], length)) === ExtendsResult.True);\n}\n// prettier-ignore\nfunction IsObjectConstructorLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectArrayLike(schema) {\n    const length = Number();\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'length' in schema.properties && IntoBooleanResult(Visit(schema.properties['length'], length)) === ExtendsResult.True);\n}\n// prettier-ignore\nfunction IsObjectPromiseLike(schema) {\n    const then = FunctionType([Any()], Any());\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'then' in schema.properties && IntoBooleanResult(Visit(schema.properties['then'], then)) === ExtendsResult.True);\n}\n// ------------------------------------------------------------------\n// Property\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Property(left, right) {\n    return (Visit(left, right) === ExtendsResult.False ? ExtendsResult.False :\n        TypeGuard.IsOptional(left) && !TypeGuard.IsOptional(right) ? ExtendsResult.False :\n            ExtendsResult.True);\n}\n// prettier-ignore\nfunction FromObjectRight(left, right) {\n    return (TypeGuard.IsUnknown(left) ? ExtendsResult.False :\n        TypeGuard.IsAny(left) ? ExtendsResult.Union : (TypeGuard.IsNever(left) ||\n            (TypeGuard.IsLiteralString(left) && IsObjectStringLike(right)) ||\n            (TypeGuard.IsLiteralNumber(left) && IsObjectNumberLike(right)) ||\n            (TypeGuard.IsLiteralBoolean(left) && IsObjectBooleanLike(right)) ||\n            (TypeGuard.IsSymbol(left) && IsObjectSymbolLike(right)) ||\n            (TypeGuard.IsBigInt(left) && IsObjectBigIntLike(right)) ||\n            (TypeGuard.IsString(left) && IsObjectStringLike(right)) ||\n            (TypeGuard.IsSymbol(left) && IsObjectSymbolLike(right)) ||\n            (TypeGuard.IsNumber(left) && IsObjectNumberLike(right)) ||\n            (TypeGuard.IsInteger(left) && IsObjectNumberLike(right)) ||\n            (TypeGuard.IsBoolean(left) && IsObjectBooleanLike(right)) ||\n            (TypeGuard.IsUint8Array(left) && IsObjectUint8ArrayLike(right)) ||\n            (TypeGuard.IsDate(left) && IsObjectDateLike(right)) ||\n            (TypeGuard.IsConstructor(left) && IsObjectConstructorLike(right)) ||\n            (TypeGuard.IsFunction(left) && IsObjectFunctionLike(right))) ? ExtendsResult.True :\n            (TypeGuard.IsRecord(left) && TypeGuard.IsString(RecordKey(left))) ? (() => {\n                // When expressing a Record with literal key values, the Record is converted into a Object with\n                // the Hint assigned as `Record`. This is used to invert the extends logic.\n                return right[Hint] === 'Record' ? ExtendsResult.True : ExtendsResult.False;\n            })() :\n                (TypeGuard.IsRecord(left) && TypeGuard.IsNumber(RecordKey(left))) ? (() => {\n                    return IsObjectPropertyCount(right, 0) ? ExtendsResult.True : ExtendsResult.False;\n                })() :\n                    ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromObject(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n            !TypeGuard.IsObject(right) ? ExtendsResult.False :\n                (() => {\n                    for (const key of Object.getOwnPropertyNames(right.properties)) {\n                        if (!(key in left.properties) && !TypeGuard.IsOptional(right.properties[key])) {\n                            return ExtendsResult.False;\n                        }\n                        if (TypeGuard.IsOptional(right.properties[key])) {\n                            return ExtendsResult.True;\n                        }\n                        if (Property(left.properties[key], right.properties[key]) === ExtendsResult.False) {\n                            return ExtendsResult.False;\n                        }\n                    }\n                    return ExtendsResult.True;\n                })());\n}\n// ------------------------------------------------------------------\n// Promise\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromPromise(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) && IsObjectPromiseLike(right) ? ExtendsResult.True :\n            !TypeGuard.IsPromise(right) ? ExtendsResult.False :\n                IntoBooleanResult(Visit(left.item, right.item)));\n}\n// ------------------------------------------------------------------\n// Record\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordKey(schema) {\n    return (PatternNumberExact in schema.patternProperties ? Number() :\n        PatternStringExact in schema.patternProperties ? String() :\n            Throw('Unknown record key pattern'));\n}\n// prettier-ignore\nfunction RecordValue(schema) {\n    return (PatternNumberExact in schema.patternProperties ? schema.patternProperties[PatternNumberExact] :\n        PatternStringExact in schema.patternProperties ? schema.patternProperties[PatternStringExact] :\n            Throw('Unable to get record value schema'));\n}\n// prettier-ignore\nfunction FromRecordRight(left, right) {\n    const [Key, Value] = [RecordKey(right), RecordValue(right)];\n    return ((TypeGuard.IsLiteralString(left) && TypeGuard.IsNumber(Key) && IntoBooleanResult(Visit(left, Value)) === ExtendsResult.True) ? ExtendsResult.True :\n        TypeGuard.IsUint8Array(left) && TypeGuard.IsNumber(Key) ? Visit(left, Value) :\n            TypeGuard.IsString(left) && TypeGuard.IsNumber(Key) ? Visit(left, Value) :\n                TypeGuard.IsArray(left) && TypeGuard.IsNumber(Key) ? Visit(left, Value) :\n                    TypeGuard.IsObject(left) ? (() => {\n                        for (const key of Object.getOwnPropertyNames(left.properties)) {\n                            if (Property(Value, left.properties[key]) === ExtendsResult.False) {\n                                return ExtendsResult.False;\n                            }\n                        }\n                        return ExtendsResult.True;\n                    })() :\n                        ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromRecord(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            !TypeGuard.IsRecord(right) ? ExtendsResult.False :\n                Visit(RecordValue(left), RecordValue(right)));\n}\n// ------------------------------------------------------------------\n// RegExp\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromRegExp(left, right) {\n    // Note: RegExp types evaluate as strings, not RegExp objects.\n    // Here we remap either into string and continue evaluating.\n    const L = TypeGuard.IsRegExp(left) ? String() : left;\n    const R = TypeGuard.IsRegExp(right) ? String() : right;\n    return Visit(L, R);\n}\n// ------------------------------------------------------------------\n// String\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromStringRight(left, right) {\n    return (TypeGuard.IsLiteral(left) && ValueGuard.IsString(left.const) ? ExtendsResult.True :\n        TypeGuard.IsString(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromString(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsString(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Symbol\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromSymbol(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsSymbol(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// TemplateLiteral\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromTemplateLiteral(left, right) {\n    // TemplateLiteral types are resolved to either unions for finite expressions or string\n    // for infinite expressions. Here we call to TemplateLiteralResolver to resolve for\n    // either type and continue evaluating.\n    return (TypeGuard.IsTemplateLiteral(left) ? Visit(TemplateLiteralToUnion(left), right) :\n        TypeGuard.IsTemplateLiteral(right) ? Visit(left, TemplateLiteralToUnion(right)) :\n            Throw('Invalid fallthrough for TemplateLiteral'));\n}\n// ------------------------------------------------------------------\n// Tuple\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsArrayOfTuple(left, right) {\n    return (TypeGuard.IsArray(right) &&\n        left.items !== undefined &&\n        left.items.every((schema) => Visit(schema, right.items) === ExtendsResult.True));\n}\n// prettier-ignore\nfunction FromTupleRight(left, right) {\n    return (TypeGuard.IsNever(left) ? ExtendsResult.True :\n        TypeGuard.IsUnknown(left) ? ExtendsResult.False :\n            TypeGuard.IsAny(left) ? ExtendsResult.Union :\n                ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromTuple(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) && IsObjectArrayLike(right) ? ExtendsResult.True :\n            TypeGuard.IsArray(right) && IsArrayOfTuple(left, right) ? ExtendsResult.True :\n                !TypeGuard.IsTuple(right) ? ExtendsResult.False :\n                    (ValueGuard.IsUndefined(left.items) && !ValueGuard.IsUndefined(right.items)) || (!ValueGuard.IsUndefined(left.items) && ValueGuard.IsUndefined(right.items)) ? ExtendsResult.False :\n                        (ValueGuard.IsUndefined(left.items) && !ValueGuard.IsUndefined(right.items)) ? ExtendsResult.True :\n                            left.items.every((schema, index) => Visit(schema, right.items[index]) === ExtendsResult.True) ? ExtendsResult.True :\n                                ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Uint8Array\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUint8Array(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsUint8Array(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Undefined\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUndefined(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsVoid(right) ? FromVoidRight(left, right) :\n                    TypeGuard.IsUndefined(right) ? ExtendsResult.True :\n                        ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Union\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUnionRight(left, right) {\n    return right.anyOf.some((schema) => Visit(left, schema) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// prettier-ignore\nfunction FromUnion(left, right) {\n    return left.anyOf.every((schema) => Visit(schema, right) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// ------------------------------------------------------------------\n// Unknown\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUnknownRight(left, right) {\n    return ExtendsResult.True;\n}\n// prettier-ignore\nfunction FromUnknown(left, right) {\n    return (TypeGuard.IsNever(right) ? FromNeverRight(left, right) :\n        TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n            TypeGuard.IsUnion(right) ? FromUnionRight(left, right) :\n                TypeGuard.IsAny(right) ? FromAnyRight(left, right) :\n                    TypeGuard.IsString(right) ? FromStringRight(left, right) :\n                        TypeGuard.IsNumber(right) ? FromNumberRight(left, right) :\n                            TypeGuard.IsInteger(right) ? FromIntegerRight(left, right) :\n                                TypeGuard.IsBoolean(right) ? FromBooleanRight(left, right) :\n                                    TypeGuard.IsArray(right) ? FromArrayRight(left, right) :\n                                        TypeGuard.IsTuple(right) ? FromTupleRight(left, right) :\n                                            TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                                                TypeGuard.IsUnknown(right) ? ExtendsResult.True :\n                                                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Void\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromVoidRight(left, right) {\n    return (TypeGuard.IsUndefined(left) ? ExtendsResult.True :\n        TypeGuard.IsUndefined(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromVoid(left, right) {\n    return (TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n        TypeGuard.IsUnion(right) ? FromUnionRight(left, right) :\n            TypeGuard.IsUnknown(right) ? FromUnknownRight(left, right) :\n                TypeGuard.IsAny(right) ? FromAnyRight(left, right) :\n                    TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                        TypeGuard.IsVoid(right) ? ExtendsResult.True :\n                            ExtendsResult.False);\n}\n// prettier-ignore\nfunction Visit(left, right) {\n    return (\n    // resolvable\n    (TypeGuard.IsTemplateLiteral(left) || TypeGuard.IsTemplateLiteral(right)) ? FromTemplateLiteral(left, right) :\n        (TypeGuard.IsRegExp(left) || TypeGuard.IsRegExp(right)) ? FromRegExp(left, right) :\n            (TypeGuard.IsNot(left) || TypeGuard.IsNot(right)) ? FromNot(left, right) :\n                // standard\n                TypeGuard.IsAny(left) ? FromAny(left, right) :\n                    TypeGuard.IsArray(left) ? FromArray(left, right) :\n                        TypeGuard.IsBigInt(left) ? FromBigInt(left, right) :\n                            TypeGuard.IsBoolean(left) ? FromBoolean(left, right) :\n                                TypeGuard.IsAsyncIterator(left) ? FromAsyncIterator(left, right) :\n                                    TypeGuard.IsConstructor(left) ? FromConstructor(left, right) :\n                                        TypeGuard.IsDate(left) ? FromDate(left, right) :\n                                            TypeGuard.IsFunction(left) ? FromFunction(left, right) :\n                                                TypeGuard.IsInteger(left) ? FromInteger(left, right) :\n                                                    TypeGuard.IsIntersect(left) ? FromIntersect(left, right) :\n                                                        TypeGuard.IsIterator(left) ? FromIterator(left, right) :\n                                                            TypeGuard.IsLiteral(left) ? FromLiteral(left, right) :\n                                                                TypeGuard.IsNever(left) ? FromNever(left, right) :\n                                                                    TypeGuard.IsNull(left) ? FromNull(left, right) :\n                                                                        TypeGuard.IsNumber(left) ? FromNumber(left, right) :\n                                                                            TypeGuard.IsObject(left) ? FromObject(left, right) :\n                                                                                TypeGuard.IsRecord(left) ? FromRecord(left, right) :\n                                                                                    TypeGuard.IsString(left) ? FromString(left, right) :\n                                                                                        TypeGuard.IsSymbol(left) ? FromSymbol(left, right) :\n                                                                                            TypeGuard.IsTuple(left) ? FromTuple(left, right) :\n                                                                                                TypeGuard.IsPromise(left) ? FromPromise(left, right) :\n                                                                                                    TypeGuard.IsUint8Array(left) ? FromUint8Array(left, right) :\n                                                                                                        TypeGuard.IsUndefined(left) ? FromUndefined(left, right) :\n                                                                                                            TypeGuard.IsUnion(left) ? FromUnion(left, right) :\n                                                                                                                TypeGuard.IsUnknown(left) ? FromUnknown(left, right) :\n                                                                                                                    TypeGuard.IsVoid(left) ? FromVoid(left, right) :\n                                                                                                                        Throw(`Unknown left type operand '${left[Kind]}'`));\n}\nexport function ExtendsCheck(left, right) {\n    return Visit(left, right);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4271, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/extends/extends-from-mapped-result.mjs"],"sourcesContent":["import { MappedResult } from '../mapped/index.mjs';\nimport { Extends } from './extends.mjs';\n// prettier-ignore\nfunction FromProperties(P, Right, True, False, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Extends(P[K2], Right, True, False, options);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(Left, Right, True, False, options) {\n    return FromProperties(Left.properties, Right, True, False, options);\n}\n// prettier-ignore\nexport function ExtendsFromMappedResult(Left, Right, True, False, options) {\n    const P = FromMappedResult(Left, Right, True, False, options);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAEA,kBAAkB;AAClB,SAAS,eAAe,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO;IAClD,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,MAAM,WAAW,MAAM,CAAC,mBAAmB,CAAC,GACnD,GAAG,CAAC,GAAG,GAAG,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,CAAC,CAAC,GAAG,EAAE,OAAO,MAAM,OAAO;IACjD,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,iBAAiB,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO;IACvD,OAAO,eAAe,KAAK,UAAU,EAAE,OAAO,MAAM,OAAO;AAC/D;AAEO,SAAS,wBAAwB,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO;IACrE,MAAM,IAAI,iBAAiB,MAAM,OAAO,MAAM,OAAO;IACrD,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 4293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4299, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/extends/extends.mjs"],"sourcesContent":["import { Union } from '../union/index.mjs';\nimport { ExtendsCheck, ExtendsResult } from './extends-check.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { ExtendsFromMappedKey } from './extends-from-mapped-key.mjs';\nimport { ExtendsFromMappedResult } from './extends-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsMappedResult } from '../guard/kind.mjs';\n// prettier-ignore\nfunction ExtendsResolve(left, right, trueType, falseType) {\n    const R = ExtendsCheck(left, right);\n    return (R === ExtendsResult.Union ? Union([trueType, falseType]) :\n        R === ExtendsResult.True ? trueType :\n            falseType);\n}\n/** `[Json]` Creates a Conditional type */\nexport function Extends(L, R, T, F, options = {}) {\n    // prettier-ignore\n    return (IsMappedResult(L) ? ExtendsFromMappedResult(L, R, T, F, options) :\n        IsMappedKey(L) ? CloneType(ExtendsFromMappedKey(L, R, T, F, options)) :\n            CloneType(ExtendsResolve(L, R, T, F), options));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AARA;;;;;;;AASA,kBAAkB;AAClB,SAAS,eAAe,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS;IACpD,MAAM,IAAI,CAAA,GAAA,+LAAA,CAAA,eAAY,AAAD,EAAE,MAAM;IAC7B,OAAQ,MAAM,+LAAA,CAAA,gBAAa,CAAC,KAAK,GAAG,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE;QAAC;QAAU;KAAU,IAC3D,MAAM,+LAAA,CAAA,gBAAa,CAAC,IAAI,GAAG,WACvB;AACZ;AAEO,SAAS,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IAC5C,kBAAkB;IAClB,OAAQ,CAAA,GAAA,iLAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,CAAA,GAAA,kNAAA,CAAA,0BAAuB,AAAD,EAAE,GAAG,GAAG,GAAG,GAAG,WAC5D,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE,KAAK,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,+MAAA,CAAA,uBAAoB,AAAD,EAAE,GAAG,GAAG,GAAG,GAAG,YACxD,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,eAAe,GAAG,GAAG,GAAG,IAAI;AAClD","ignoreList":[0]}},
    {"offset": {"line": 4330, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4336, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/extends/extends-from-mapped-key.mjs"],"sourcesContent":["import { MappedResult } from '../mapped/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Extends } from './extends.mjs';\n// prettier-ignore\nfunction FromPropertyKey(K, U, L, R, options) {\n    return {\n        [K]: Extends(Literal(K), U, L, R, options)\n    };\n}\n// prettier-ignore\nfunction FromPropertyKeys(K, U, L, R, options) {\n    return K.reduce((Acc, LK) => {\n        return { ...Acc, ...FromPropertyKey(LK, U, L, R, options) };\n    }, {});\n}\n// prettier-ignore\nfunction FromMappedKey(K, U, L, R, options) {\n    return FromPropertyKeys(K.keys, U, L, R, options);\n}\n// prettier-ignore\nexport function ExtendsFromMappedKey(T, U, L, R, options) {\n    const P = FromMappedKey(T, U, L, R, options);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AADA;AADA;;;;AAGA,kBAAkB;AAClB,SAAS,gBAAgB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO;IACxC,OAAO;QACH,CAAC,EAAE,EAAE,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,IAAI,GAAG,GAAG,GAAG;IACtC;AACJ;AACA,kBAAkB;AAClB,SAAS,iBAAiB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO;IACzC,OAAO,EAAE,MAAM,CAAC,CAAC,KAAK;QAClB,OAAO;YAAE,GAAG,GAAG;YAAE,GAAG,gBAAgB,IAAI,GAAG,GAAG,GAAG,QAAQ;QAAC;IAC9D,GAAG,CAAC;AACR;AACA,kBAAkB;AAClB,SAAS,cAAc,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO;IACtC,OAAO,iBAAiB,EAAE,IAAI,EAAE,GAAG,GAAG,GAAG;AAC7C;AAEO,SAAS,qBAAqB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO;IACpD,MAAM,IAAI,cAAc,GAAG,GAAG,GAAG,GAAG;IACpC,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 4370, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4376, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/extends/extends-undefined.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** Fast undefined check used for properties of type undefined */\nfunction Intersect(schema) {\n    return schema.allOf.every((schema) => ExtendsUndefinedCheck(schema));\n}\nfunction Union(schema) {\n    return schema.anyOf.some((schema) => ExtendsUndefinedCheck(schema));\n}\nfunction Not(schema) {\n    return !ExtendsUndefinedCheck(schema.not);\n}\n/** Fast undefined check used for properties of type undefined */\n// prettier-ignore\nexport function ExtendsUndefinedCheck(schema) {\n    return (schema[Kind] === 'Intersect' ? Intersect(schema) :\n        schema[Kind] === 'Union' ? Union(schema) :\n            schema[Kind] === 'Not' ? Not(schema) :\n                schema[Kind] === 'Undefined' ? true :\n                    false);\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACA,+DAA+D,GAC/D,SAAS,UAAU,MAAM;IACrB,OAAO,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,SAAW,sBAAsB;AAChE;AACA,SAAS,MAAM,MAAM;IACjB,OAAO,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,SAAW,sBAAsB;AAC/D;AACA,SAAS,IAAI,MAAM;IACf,OAAO,CAAC,sBAAsB,OAAO,GAAG;AAC5C;AAGO,SAAS,sBAAsB,MAAM;IACxC,OAAQ,MAAM,CAAC,sLAAA,CAAA,OAAI,CAAC,KAAK,cAAc,UAAU,UAC7C,MAAM,CAAC,sLAAA,CAAA,OAAI,CAAC,KAAK,UAAU,MAAM,UAC7B,MAAM,CAAC,sLAAA,CAAA,OAAI,CAAC,KAAK,QAAQ,IAAI,UACzB,MAAM,CAAC,sLAAA,CAAA,OAAI,CAAC,KAAK,cAAc,OAC3B;AACpB","ignoreList":[0]}},
    {"offset": {"line": 4394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 4406, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4425, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/exclude/exclude-from-template-literal.mjs"],"sourcesContent":["import { Exclude } from './exclude.mjs';\nimport { TemplateLiteralToUnion } from '../template-literal/index.mjs';\nexport function ExcludeFromTemplateLiteral(L, R) {\n    return Exclude(TemplateLiteralToUnion(L), R);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AACO,SAAS,2BAA2B,CAAC,EAAE,CAAC;IAC3C,OAAO,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,gMAAA,CAAA,yBAAsB,AAAD,EAAE,IAAI;AAC9C","ignoreList":[0]}},
    {"offset": {"line": 4436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4442, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/exclude/exclude.mjs"],"sourcesContent":["import { Union } from '../union/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { ExtendsCheck, ExtendsResult } from '../extends/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { ExcludeFromMappedResult } from './exclude-from-mapped-result.mjs';\nimport { ExcludeFromTemplateLiteral } from './exclude-from-template-literal.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult, IsTemplateLiteral, IsUnion } from '../guard/kind.mjs';\nfunction ExcludeRest(L, R) {\n    const excluded = L.filter((inner) => ExtendsCheck(inner, R) === ExtendsResult.False);\n    return excluded.length === 1 ? excluded[0] : Union(excluded);\n}\n/** `[Json]` Constructs a type by excluding from unionType all union members that are assignable to excludedMembers */\nexport function Exclude(L, R, options = {}) {\n    // overloads\n    if (IsTemplateLiteral(L))\n        return CloneType(ExcludeFromTemplateLiteral(L, R), options);\n    if (IsMappedResult(L))\n        return CloneType(ExcludeFromMappedResult(L, R), options);\n    // prettier-ignore\n    return CloneType(IsUnion(L) ? ExcludeRest(L.anyOf, R) :\n        ExtendsCheck(L, R) !== ExtendsResult.False ? Never() : L, options);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AAPA;AAFA;AACA;;;;;;;;AASA,SAAS,YAAY,CAAC,EAAE,CAAC;IACrB,MAAM,WAAW,EAAE,MAAM,CAAC,CAAC,QAAU,CAAA,GAAA,+LAAA,CAAA,eAAY,AAAD,EAAE,OAAO,OAAO,+LAAA,CAAA,gBAAa,CAAC,KAAK;IACnF,OAAO,SAAS,MAAM,KAAK,IAAI,QAAQ,CAAC,EAAE,GAAG,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE;AACvD;AAEO,SAAS,QAAQ,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IACtC,YAAY;IACZ,IAAI,CAAA,GAAA,iLAAA,CAAA,oBAAiB,AAAD,EAAE,IAClB,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,qNAAA,CAAA,6BAA0B,AAAD,EAAE,GAAG,IAAI;IACvD,IAAI,CAAA,GAAA,iLAAA,CAAA,iBAAc,AAAD,EAAE,IACf,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,kNAAA,CAAA,0BAAuB,AAAD,EAAE,GAAG,IAAI;IACpD,kBAAkB;IAClB,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,KAAK,YAAY,EAAE,KAAK,EAAE,KAC/C,CAAA,GAAA,+LAAA,CAAA,eAAY,AAAD,EAAE,GAAG,OAAO,+LAAA,CAAA,gBAAa,CAAC,KAAK,GAAG,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,MAAM,GAAG;AAClE","ignoreList":[0]}},
    {"offset": {"line": 4476, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4482, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/exclude/exclude-from-mapped-result.mjs"],"sourcesContent":["import { MappedResult } from '../mapped/index.mjs';\nimport { Exclude } from './exclude.mjs';\n// prettier-ignore\nfunction FromProperties(P, U) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Exclude(P[K2], U);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, T) {\n    return FromProperties(R.properties, T);\n}\n// prettier-ignore\nexport function ExcludeFromMappedResult(R, T) {\n    const P = FromMappedResult(R, T);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAEA,kBAAkB;AAClB,SAAS,eAAe,CAAC,EAAE,CAAC;IACxB,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,MAAM,WAAW,MAAM,CAAC,mBAAmB,CAAC,GACnD,GAAG,CAAC,GAAG,GAAG,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,CAAC,CAAC,GAAG,EAAE;IAC7B,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,iBAAiB,CAAC,EAAE,CAAC;IAC1B,OAAO,eAAe,EAAE,UAAU,EAAE;AACxC;AAEO,SAAS,wBAAwB,CAAC,EAAE,CAAC;IACxC,MAAM,IAAI,iBAAiB,GAAG;IAC9B,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 4504, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 4514, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4531, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/extract/extract-from-template-literal.mjs"],"sourcesContent":["import { Extract } from './extract.mjs';\nimport { TemplateLiteralToUnion } from '../template-literal/index.mjs';\nexport function ExtractFromTemplateLiteral(L, R) {\n    return Extract(TemplateLiteralToUnion(L), R);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AACO,SAAS,2BAA2B,CAAC,EAAE,CAAC;IAC3C,OAAO,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,gMAAA,CAAA,yBAAsB,AAAD,EAAE,IAAI;AAC9C","ignoreList":[0]}},
    {"offset": {"line": 4542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4548, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/extract/extract.mjs"],"sourcesContent":["import { Union } from '../union/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { ExtendsCheck, ExtendsResult } from '../extends/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { ExtractFromMappedResult } from './extract-from-mapped-result.mjs';\nimport { ExtractFromTemplateLiteral } from './extract-from-template-literal.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult, IsTemplateLiteral, IsUnion } from '../guard/kind.mjs';\nfunction ExtractRest(L, R) {\n    const extracted = L.filter((inner) => ExtendsCheck(inner, R) !== ExtendsResult.False);\n    return extracted.length === 1 ? extracted[0] : Union(extracted);\n}\n/** `[Json]` Constructs a type by extracting from type all union members that are assignable to union */\nexport function Extract(L, R, options = {}) {\n    // overloads\n    if (IsTemplateLiteral(L))\n        return CloneType(ExtractFromTemplateLiteral(L, R), options);\n    if (IsMappedResult(L))\n        return CloneType(ExtractFromMappedResult(L, R), options);\n    // prettier-ignore\n    return CloneType(IsUnion(L) ? ExtractRest(L.anyOf, R) :\n        ExtendsCheck(L, R) !== ExtendsResult.False ? L : Never(), options);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AAPA;AAFA;AACA;;;;;;;;AASA,SAAS,YAAY,CAAC,EAAE,CAAC;IACrB,MAAM,YAAY,EAAE,MAAM,CAAC,CAAC,QAAU,CAAA,GAAA,+LAAA,CAAA,eAAY,AAAD,EAAE,OAAO,OAAO,+LAAA,CAAA,gBAAa,CAAC,KAAK;IACpF,OAAO,UAAU,MAAM,KAAK,IAAI,SAAS,CAAC,EAAE,GAAG,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE;AACzD;AAEO,SAAS,QAAQ,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IACtC,YAAY;IACZ,IAAI,CAAA,GAAA,iLAAA,CAAA,oBAAiB,AAAD,EAAE,IAClB,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,qNAAA,CAAA,6BAA0B,AAAD,EAAE,GAAG,IAAI;IACvD,IAAI,CAAA,GAAA,iLAAA,CAAA,iBAAc,AAAD,EAAE,IACf,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,kNAAA,CAAA,0BAAuB,AAAD,EAAE,GAAG,IAAI;IACpD,kBAAkB;IAClB,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,KAAK,YAAY,EAAE,KAAK,EAAE,KAC/C,CAAA,GAAA,+LAAA,CAAA,eAAY,AAAD,EAAE,GAAG,OAAO,+LAAA,CAAA,gBAAa,CAAC,KAAK,GAAG,IAAI,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,KAAK;AAClE","ignoreList":[0]}},
    {"offset": {"line": 4582, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4588, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/extract/extract-from-mapped-result.mjs"],"sourcesContent":["import { MappedResult } from '../mapped/index.mjs';\nimport { Extract } from './extract.mjs';\n// prettier-ignore\nfunction FromProperties(P, T) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Extract(P[K2], T);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, T) {\n    return FromProperties(R.properties, T);\n}\n// prettier-ignore\nexport function ExtractFromMappedResult(R, T) {\n    const P = FromMappedResult(R, T);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAEA,kBAAkB;AAClB,SAAS,eAAe,CAAC,EAAE,CAAC;IACxB,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,MAAM,WAAW,MAAM,CAAC,mBAAmB,CAAC,GACnD,GAAG,CAAC,GAAG,GAAG,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,CAAC,CAAC,GAAG,EAAE;IAC7B,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,iBAAiB,CAAC,EAAE,CAAC;IAC1B,OAAO,eAAe,EAAE,UAAU,EAAE;AACxC;AAEO,SAAS,wBAAwB,CAAC,EAAE,CAAC;IACxC,MAAM,IAAI,iBAAiB,GAAG;IAC9B,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 4610, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4616, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 4620, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4637, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/instance-type/instance-type.mjs"],"sourcesContent":["import { CloneType } from '../clone/type.mjs';\n/** `[JavaScript]` Extracts the InstanceType from the given Constructor type */\nexport function InstanceType(schema, options = {}) {\n    return CloneType(schema.returns, options);\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,aAAa,MAAM,EAAE,UAAU,CAAC,CAAC;IAC7C,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,OAAO,OAAO,EAAE;AACrC","ignoreList":[0]}},
    {"offset": {"line": 4645, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4651, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 4653, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4668, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/integer/integer.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Integer type */\nexport function Integer(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Integer',\n        type: 'integer',\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,QAAQ,UAAU,CAAC,CAAC;IAChC,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM;IACV;AACJ","ignoreList":[0]}},
    {"offset": {"line": 4681, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4687, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 4689, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4704, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/intrinsic/intrinsic-from-mapped-key.mjs"],"sourcesContent":["import { MappedResult } from '../mapped/index.mjs';\nimport { Intrinsic } from './intrinsic.mjs';\nimport { Literal } from '../literal/index.mjs';\n// prettier-ignore\nfunction MappedIntrinsicPropertyKey(K, M, options) {\n    return {\n        [K]: Intrinsic(Literal(K), M, options)\n    };\n}\n// prettier-ignore\nfunction MappedIntrinsicPropertyKeys(K, M, options) {\n    return K.reduce((Acc, L) => {\n        return { ...Acc, ...MappedIntrinsicPropertyKey(L, M, options) };\n    }, {});\n}\n// prettier-ignore\nfunction MappedIntrinsicProperties(T, M, options) {\n    return MappedIntrinsicPropertyKeys(T['keys'], M, options);\n}\n// prettier-ignore\nexport function IntrinsicFromMappedKey(T, M, options) {\n    const P = MappedIntrinsicProperties(T, M, options);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAAA;AAFA;;;;AAGA,kBAAkB;AAClB,SAAS,2BAA2B,CAAC,EAAE,CAAC,EAAE,OAAO;IAC7C,OAAO;QACH,CAAC,EAAE,EAAE,CAAA,GAAA,0LAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,IAAI,GAAG;IAClC;AACJ;AACA,kBAAkB;AAClB,SAAS,4BAA4B,CAAC,EAAE,CAAC,EAAE,OAAO;IAC9C,OAAO,EAAE,MAAM,CAAC,CAAC,KAAK;QAClB,OAAO;YAAE,GAAG,GAAG;YAAE,GAAG,2BAA2B,GAAG,GAAG,QAAQ;QAAC;IAClE,GAAG,CAAC;AACR;AACA,kBAAkB;AAClB,SAAS,0BAA0B,CAAC,EAAE,CAAC,EAAE,OAAO;IAC5C,OAAO,4BAA4B,CAAC,CAAC,OAAO,EAAE,GAAG;AACrD;AAEO,SAAS,uBAAuB,CAAC,EAAE,CAAC,EAAE,OAAO;IAChD,MAAM,IAAI,0BAA0B,GAAG,GAAG;IAC1C,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 4738, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4744, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/intrinsic/intrinsic.mjs"],"sourcesContent":["import { TemplateLiteral, TemplateLiteralParseExact, IsTemplateLiteralExpressionFinite, TemplateLiteralExpressionGenerate } from '../template-literal/index.mjs';\nimport { IntrinsicFromMappedKey } from './intrinsic-from-mapped-key.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Union } from '../union/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsTemplateLiteral, IsUnion, IsLiteral } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// Apply\n// ------------------------------------------------------------------\nfunction ApplyUncapitalize(value) {\n    const [first, rest] = [value.slice(0, 1), value.slice(1)];\n    return [first.toLowerCase(), rest].join('');\n}\nfunction ApplyCapitalize(value) {\n    const [first, rest] = [value.slice(0, 1), value.slice(1)];\n    return [first.toUpperCase(), rest].join('');\n}\nfunction ApplyUppercase(value) {\n    return value.toUpperCase();\n}\nfunction ApplyLowercase(value) {\n    return value.toLowerCase();\n}\nfunction FromTemplateLiteral(schema, mode, options) {\n    // note: template literals require special runtime handling as they are encoded in string patterns.\n    // This diverges from the mapped type which would otherwise map on the template literal kind.\n    const expression = TemplateLiteralParseExact(schema.pattern);\n    const finite = IsTemplateLiteralExpressionFinite(expression);\n    if (!finite)\n        return { ...schema, pattern: FromLiteralValue(schema.pattern, mode) };\n    const strings = [...TemplateLiteralExpressionGenerate(expression)];\n    const literals = strings.map((value) => Literal(value));\n    const mapped = FromRest(literals, mode);\n    const union = Union(mapped);\n    return TemplateLiteral([union], options);\n}\n// prettier-ignore\nfunction FromLiteralValue(value, mode) {\n    return (typeof value === 'string' ? (mode === 'Uncapitalize' ? ApplyUncapitalize(value) :\n        mode === 'Capitalize' ? ApplyCapitalize(value) :\n            mode === 'Uppercase' ? ApplyUppercase(value) :\n                mode === 'Lowercase' ? ApplyLowercase(value) :\n                    value) : value.toString());\n}\n// prettier-ignore\nfunction FromRest(T, M) {\n    return T.map(L => Intrinsic(L, M));\n}\n/** Applies an intrinsic string manipulation to the given type. */\nexport function Intrinsic(schema, mode, options = {}) {\n    // prettier-ignore\n    return (\n    // Intrinsic-Mapped-Inference\n    IsMappedKey(schema) ? IntrinsicFromMappedKey(schema, mode, options) :\n        // Standard-Inference\n        IsTemplateLiteral(schema) ? FromTemplateLiteral(schema, mode, schema) :\n            IsUnion(schema) ? Union(FromRest(schema.anyOf, mode), options) :\n                IsLiteral(schema) ? Literal(FromLiteralValue(schema.const, mode), options) :\n                    schema);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AAPA;AAAA;AAAA;AAEA;AACA;AAHA;;;;;;AAQA,qEAAqE;AACrE,QAAQ;AACR,qEAAqE;AACrE,SAAS,kBAAkB,KAAK;IAC5B,MAAM,CAAC,OAAO,KAAK,GAAG;QAAC,MAAM,KAAK,CAAC,GAAG;QAAI,MAAM,KAAK,CAAC;KAAG;IACzD,OAAO;QAAC,MAAM,WAAW;QAAI;KAAK,CAAC,IAAI,CAAC;AAC5C;AACA,SAAS,gBAAgB,KAAK;IAC1B,MAAM,CAAC,OAAO,KAAK,GAAG;QAAC,MAAM,KAAK,CAAC,GAAG;QAAI,MAAM,KAAK,CAAC;KAAG;IACzD,OAAO;QAAC,MAAM,WAAW;QAAI;KAAK,CAAC,IAAI,CAAC;AAC5C;AACA,SAAS,eAAe,KAAK;IACzB,OAAO,MAAM,WAAW;AAC5B;AACA,SAAS,eAAe,KAAK;IACzB,OAAO,MAAM,WAAW;AAC5B;AACA,SAAS,oBAAoB,MAAM,EAAE,IAAI,EAAE,OAAO;IAC9C,mGAAmG;IACnG,6FAA6F;IAC7F,MAAM,aAAa,CAAA,GAAA,gMAAA,CAAA,4BAAyB,AAAD,EAAE,OAAO,OAAO;IAC3D,MAAM,SAAS,CAAA,GAAA,iMAAA,CAAA,oCAAiC,AAAD,EAAE;IACjD,IAAI,CAAC,QACD,OAAO;QAAE,GAAG,MAAM;QAAE,SAAS,iBAAiB,OAAO,OAAO,EAAE;IAAM;IACxE,MAAM,UAAU;WAAI,CAAA,GAAA,mMAAA,CAAA,oCAAiC,AAAD,EAAE;KAAY;IAClE,MAAM,WAAW,QAAQ,GAAG,CAAC,CAAC,QAAU,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE;IAChD,MAAM,SAAS,SAAS,UAAU;IAClC,MAAM,QAAQ,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE;IACpB,OAAO,CAAA,GAAA,8MAAA,CAAA,kBAAe,AAAD,EAAE;QAAC;KAAM,EAAE;AACpC;AACA,kBAAkB;AAClB,SAAS,iBAAiB,KAAK,EAAE,IAAI;IACjC,OAAQ,OAAO,UAAU,WAAY,SAAS,iBAAiB,kBAAkB,SAC7E,SAAS,eAAe,gBAAgB,SACpC,SAAS,cAAc,eAAe,SAClC,SAAS,cAAc,eAAe,SAClC,QAAS,MAAM,QAAQ;AAC3C;AACA,kBAAkB;AAClB,SAAS,SAAS,CAAC,EAAE,CAAC;IAClB,OAAO,EAAE,GAAG,CAAC,CAAA,IAAK,UAAU,GAAG;AACnC;AAEO,SAAS,UAAU,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;IAChD,kBAAkB;IAClB,OACA,6BAA6B;IAC7B,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE,UAAU,CAAA,GAAA,mNAAA,CAAA,yBAAsB,AAAD,EAAE,QAAQ,MAAM,WACvD,qBAAqB;IACrB,CAAA,GAAA,iLAAA,CAAA,oBAAiB,AAAD,EAAE,UAAU,oBAAoB,QAAQ,MAAM,UAC1D,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,UAAU,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE,SAAS,OAAO,KAAK,EAAE,OAAO,WAClD,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,UAAU,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,iBAAiB,OAAO,KAAK,EAAE,OAAO,WAC9D;AACpB","ignoreList":[0]}},
    {"offset": {"line": 4828, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4834, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/intrinsic/capitalize.mjs"],"sourcesContent":["import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Capitalize LiteralString types */\nexport function Capitalize(T, options = {}) {\n    return Intrinsic(T, 'Capitalize', options);\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,WAAW,CAAC,EAAE,UAAU,CAAC,CAAC;IACtC,OAAO,CAAA,GAAA,0LAAA,CAAA,YAAS,AAAD,EAAE,GAAG,cAAc;AACtC","ignoreList":[0]}},
    {"offset": {"line": 4842, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4848, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/intrinsic/lowercase.mjs"],"sourcesContent":["import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Lowercase LiteralString types */\nexport function Lowercase(T, options = {}) {\n    return Intrinsic(T, 'Lowercase', options);\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;IACrC,OAAO,CAAA,GAAA,0LAAA,CAAA,YAAS,AAAD,EAAE,GAAG,aAAa;AACrC","ignoreList":[0]}},
    {"offset": {"line": 4856, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4862, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/intrinsic/uncapitalize.mjs"],"sourcesContent":["import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Uncapitalize LiteralString types */\nexport function Uncapitalize(T, options = {}) {\n    return Intrinsic(T, 'Uncapitalize', options);\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,aAAa,CAAC,EAAE,UAAU,CAAC,CAAC;IACxC,OAAO,CAAA,GAAA,0LAAA,CAAA,YAAS,AAAD,EAAE,GAAG,gBAAgB;AACxC","ignoreList":[0]}},
    {"offset": {"line": 4870, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4876, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/intrinsic/uppercase.mjs"],"sourcesContent":["import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Uppercase LiteralString types */\nexport function Uppercase(T, options = {}) {\n    return Intrinsic(T, 'Uppercase', options);\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;IACrC,OAAO,CAAA,GAAA,0LAAA,CAAA,YAAS,AAAD,EAAE,GAAG,aAAa;AACrC","ignoreList":[0]}},
    {"offset": {"line": 4884, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4890, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 4897, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4917, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/not/not.mjs"],"sourcesContent":["import { CloneType } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Not type */\nexport function Not(schema, options) {\n    return {\n        ...options,\n        [Kind]: 'Not',\n        not: CloneType(schema),\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEO,SAAS,IAAI,MAAM,EAAE,OAAO;IAC/B,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,KAAK,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;IACnB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 4932, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4938, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 4940, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4955, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/omit/omit-from-mapped-result.mjs"],"sourcesContent":["import { MappedResult } from '../mapped/index.mjs';\nimport { Omit } from './omit.mjs';\n// prettier-ignore\nfunction FromProperties(P, K, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Omit(P[K2], K, options);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, K, options) {\n    return FromProperties(R.properties, K, options);\n}\n// prettier-ignore\nexport function OmitFromMappedResult(R, K, options) {\n    const P = FromMappedResult(R, K, options);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAEA,kBAAkB;AAClB,SAAS,eAAe,CAAC,EAAE,CAAC,EAAE,OAAO;IACjC,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,MAAM,WAAW,MAAM,CAAC,mBAAmB,CAAC,GACnD,GAAG,CAAC,GAAG,GAAG,CAAA,GAAA,gLAAA,CAAA,OAAI,AAAD,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG;IAC7B,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,iBAAiB,CAAC,EAAE,CAAC,EAAE,OAAO;IACnC,OAAO,eAAe,EAAE,UAAU,EAAE,GAAG;AAC3C;AAEO,SAAS,qBAAqB,CAAC,EAAE,CAAC,EAAE,OAAO;IAC9C,MAAM,IAAI,iBAAiB,GAAG,GAAG;IACjC,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 4977, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4983, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/omit/omit.mjs"],"sourcesContent":["import { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { OmitFromMappedKey } from './omit-from-mapped-key.mjs';\nimport { OmitFromMappedResult } from './omit-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsIntersect, IsUnion, IsObject, IsSchema, IsMappedResult } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromIntersect(T, K) {\n    return T.map((T) => OmitResolve(T, K));\n}\n// prettier-ignore\nfunction FromUnion(T, K) {\n    return T.map((T) => OmitResolve(T, K));\n}\n// ------------------------------------------------------------------\n// FromProperty\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromProperty(T, K) {\n    const { [K]: _, ...R } = T;\n    return R;\n}\n// prettier-ignore\nfunction FromProperties(T, K) {\n    return K.reduce((T, K2) => FromProperty(T, K2), T);\n}\n// ------------------------------------------------------------------\n// OmitResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction OmitResolve(T, K) {\n    return (IsIntersect(T) ? Intersect(FromIntersect(T.allOf, K)) :\n        IsUnion(T) ? Union(FromUnion(T.anyOf, K)) :\n            IsObject(T) ? Object(FromProperties(T.properties, K)) :\n                Object({}));\n}\nexport function Omit(T, K, options = {}) {\n    // mapped\n    if (IsMappedKey(K))\n        return OmitFromMappedKey(T, K, options);\n    if (IsMappedResult(T))\n        return OmitFromMappedResult(T, K, options);\n    // non-mapped\n    const I = IsSchema(K) ? IndexPropertyKeys(K) : K;\n    const D = Discard(T, [TransformKind, '$id', 'required']);\n    const R = CloneType(OmitResolve(T, I), options);\n    return { ...D, ...R };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AAVA;AADA;AADA;AAGA;AACA;AACA;;;;;;;;;;;AAQA,kBAAkB;AAClB,SAAS,cAAc,CAAC,EAAE,CAAC;IACvB,OAAO,EAAE,GAAG,CAAC,CAAC,IAAM,YAAY,GAAG;AACvC;AACA,kBAAkB;AAClB,SAAS,UAAU,CAAC,EAAE,CAAC;IACnB,OAAO,EAAE,GAAG,CAAC,CAAC,IAAM,YAAY,GAAG;AACvC;AACA,qEAAqE;AACrE,eAAe;AACf,qEAAqE;AACrE,kBAAkB;AAClB,SAAS,aAAa,CAAC,EAAE,CAAC;IACtB,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,GAAG,GAAG;IACzB,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,eAAe,CAAC,EAAE,CAAC;IACxB,OAAO,EAAE,MAAM,CAAC,CAAC,GAAG,KAAO,aAAa,GAAG,KAAK;AACpD;AACA,qEAAqE;AACrE,cAAc;AACd,qEAAqE;AACrE,kBAAkB;AAClB,SAAS,YAAY,CAAC,EAAE,CAAC;IACrB,OAAQ,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE,KAAK,CAAA,GAAA,0LAAA,CAAA,YAAS,AAAD,EAAE,cAAc,EAAE,KAAK,EAAE,MACtD,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,KAAK,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE,UAAU,EAAE,KAAK,EAAE,MAClC,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,EAAE,eAAe,EAAE,UAAU,EAAE,MAC9C,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,EAAE,CAAC;AACxB;AACO,SAAS,KAAK,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IACnC,SAAS;IACT,IAAI,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE,IACZ,OAAO,CAAA,GAAA,yMAAA,CAAA,oBAAiB,AAAD,EAAE,GAAG,GAAG;IACnC,IAAI,CAAA,GAAA,iLAAA,CAAA,iBAAc,AAAD,EAAE,IACf,OAAO,CAAA,GAAA,4MAAA,CAAA,uBAAoB,AAAD,EAAE,GAAG,GAAG;IACtC,aAAa;IACb,MAAM,IAAI,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,CAAA,GAAA,0MAAA,CAAA,oBAAiB,AAAD,EAAE,KAAK;IAC/C,MAAM,IAAI,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,GAAG;QAAC,sLAAA,CAAA,gBAAa;QAAE;QAAO;KAAW;IACvD,MAAM,IAAI,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,YAAY,GAAG,IAAI;IACvC,OAAO;QAAE,GAAG,CAAC;QAAE,GAAG,CAAC;IAAC;AACxB","ignoreList":[0]}},
    {"offset": {"line": 5059, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5065, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/omit/omit-from-mapped-key.mjs"],"sourcesContent":["import { MappedResult } from '../mapped/index.mjs';\nimport { Omit } from './omit.mjs';\n// prettier-ignore\nfunction FromPropertyKey(T, K, options) {\n    return {\n        [K]: Omit(T, [K], options)\n    };\n}\n// prettier-ignore\nfunction FromPropertyKeys(T, K, options) {\n    return K.reduce((Acc, LK) => {\n        return { ...Acc, ...FromPropertyKey(T, LK, options) };\n    }, {});\n}\n// prettier-ignore\nfunction FromMappedKey(T, K, options) {\n    return FromPropertyKeys(T, K.keys, options);\n}\n// prettier-ignore\nexport function OmitFromMappedKey(T, K, options) {\n    const P = FromMappedKey(T, K, options);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAEA,kBAAkB;AAClB,SAAS,gBAAgB,CAAC,EAAE,CAAC,EAAE,OAAO;IAClC,OAAO;QACH,CAAC,EAAE,EAAE,CAAA,GAAA,gLAAA,CAAA,OAAI,AAAD,EAAE,GAAG;YAAC;SAAE,EAAE;IACtB;AACJ;AACA,kBAAkB;AAClB,SAAS,iBAAiB,CAAC,EAAE,CAAC,EAAE,OAAO;IACnC,OAAO,EAAE,MAAM,CAAC,CAAC,KAAK;QAClB,OAAO;YAAE,GAAG,GAAG;YAAE,GAAG,gBAAgB,GAAG,IAAI,QAAQ;QAAC;IACxD,GAAG,CAAC;AACR;AACA,kBAAkB;AAClB,SAAS,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO;IAChC,OAAO,iBAAiB,GAAG,EAAE,IAAI,EAAE;AACvC;AAEO,SAAS,kBAAkB,CAAC,EAAE,CAAC,EAAE,OAAO;IAC3C,MAAM,IAAI,cAAc,GAAG,GAAG;IAC9B,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 5098, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5125, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/parameters/parameters.mjs"],"sourcesContent":["import { Tuple } from '../tuple/index.mjs';\nimport { CloneRest } from '../clone/type.mjs';\n/** `[JavaScript]` Extracts the Parameters from the given Function type */\nexport function Parameters(schema, options = {}) {\n    return Tuple(CloneRest(schema.parameters), { ...options });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAGO,SAAS,WAAW,MAAM,EAAE,UAAU,CAAC,CAAC;IAC3C,OAAO,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,OAAO,UAAU,GAAG;QAAE,GAAG,OAAO;IAAC;AAC5D","ignoreList":[0]}},
    {"offset": {"line": 5138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5161, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/partial/partial.mjs"],"sourcesContent":["import { Optional } from '../optional/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { PartialFromMappedResult } from './partial-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult, IsIntersect, IsUnion, IsObject } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(T) {\n    return T.map(L => PartialResolve(L));\n}\n// prettier-ignore\nfunction FromProperties(T) {\n    const Acc = {};\n    for (const K of globalThis.Object.getOwnPropertyNames(T))\n        Acc[K] = Optional(T[K]);\n    return Acc;\n}\n// ------------------------------------------------------------------\n// PartialResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction PartialResolve(T) {\n    return (IsIntersect(T) ? Intersect(FromRest(T.allOf)) :\n        IsUnion(T) ? Union(FromRest(T.anyOf)) :\n            IsObject(T) ? Object(FromProperties(T.properties)) :\n                Object({}));\n}\n/** `[Json]` Constructs a type where all properties are optional */\nexport function Partial(T, options = {}) {\n    if (IsMappedResult(T))\n        return PartialFromMappedResult(T, options);\n    const D = Discard(T, [TransformKind, '$id', 'required']);\n    const R = CloneType(PartialResolve(T), options);\n    return { ...D, ...R };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AAXA;AACA;AAEA;AADA;AAEA;AACA;;;;;;;;;;AAOA,kBAAkB;AAClB,SAAS,SAAS,CAAC;IACf,OAAO,EAAE,GAAG,CAAC,CAAA,IAAK,eAAe;AACrC;AACA,kBAAkB;AAClB,SAAS,eAAe,CAAC;IACrB,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,KAAK,WAAW,MAAM,CAAC,mBAAmB,CAAC,GAClD,GAAG,CAAC,EAAE,GAAG,CAAA,GAAA,wLAAA,CAAA,WAAQ,AAAD,EAAE,CAAC,CAAC,EAAE;IAC1B,OAAO;AACX;AACA,qEAAqE;AACrE,iBAAiB;AACjB,qEAAqE;AACrE,kBAAkB;AAClB,SAAS,eAAe,CAAC;IACrB,OAAQ,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE,KAAK,CAAA,GAAA,0LAAA,CAAA,YAAS,AAAD,EAAE,SAAS,EAAE,KAAK,KAC/C,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,KAAK,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE,SAAS,EAAE,KAAK,KAC/B,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,EAAE,eAAe,EAAE,UAAU,KAC5C,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,EAAE,CAAC;AACxB;AAEO,SAAS,QAAQ,CAAC,EAAE,UAAU,CAAC,CAAC;IACnC,IAAI,CAAA,GAAA,iLAAA,CAAA,iBAAc,AAAD,EAAE,IACf,OAAO,CAAA,GAAA,kNAAA,CAAA,0BAAuB,AAAD,EAAE,GAAG;IACtC,MAAM,IAAI,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,GAAG;QAAC,sLAAA,CAAA,gBAAa;QAAE;QAAO;KAAW;IACvD,MAAM,IAAI,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,eAAe,IAAI;IACvC,OAAO;QAAE,GAAG,CAAC;QAAE,GAAG,CAAC;IAAC;AACxB","ignoreList":[0]}},
    {"offset": {"line": 5221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5227, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/partial/partial-from-mapped-result.mjs"],"sourcesContent":["import { MappedResult } from '../mapped/index.mjs';\nimport { Partial } from './partial.mjs';\n// prettier-ignore\nfunction FromProperties(K, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(K))\n        Acc[K2] = Partial(K[K2], options);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, options) {\n    return FromProperties(R.properties, options);\n}\n// prettier-ignore\nexport function PartialFromMappedResult(R, options) {\n    const P = FromMappedResult(R, options);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAEA,kBAAkB;AAClB,SAAS,eAAe,CAAC,EAAE,OAAO;IAC9B,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,MAAM,WAAW,MAAM,CAAC,mBAAmB,CAAC,GACnD,GAAG,CAAC,GAAG,GAAG,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,CAAC,CAAC,GAAG,EAAE;IAC7B,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,iBAAiB,CAAC,EAAE,OAAO;IAChC,OAAO,eAAe,EAAE,UAAU,EAAE;AACxC;AAEO,SAAS,wBAAwB,CAAC,EAAE,OAAO;IAC9C,MAAM,IAAI,iBAAiB,GAAG;IAC9B,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 5249, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5258, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5274, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/pick/pick-from-mapped-result.mjs"],"sourcesContent":["import { MappedResult } from '../mapped/index.mjs';\nimport { Pick } from './pick.mjs';\n// prettier-ignore\nfunction FromProperties(P, K, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Pick(P[K2], K, options);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, K, options) {\n    return FromProperties(R.properties, K, options);\n}\n// prettier-ignore\nexport function PickFromMappedResult(R, K, options) {\n    const P = FromMappedResult(R, K, options);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAEA,kBAAkB;AAClB,SAAS,eAAe,CAAC,EAAE,CAAC,EAAE,OAAO;IACjC,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,MAAM,WAAW,MAAM,CAAC,mBAAmB,CAAC,GACnD,GAAG,CAAC,GAAG,GAAG,CAAA,GAAA,gLAAA,CAAA,OAAI,AAAD,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG;IAC7B,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,iBAAiB,CAAC,EAAE,CAAC,EAAE,OAAO;IACnC,OAAO,eAAe,EAAE,UAAU,EAAE,GAAG;AAC3C;AAEO,SAAS,qBAAqB,CAAC,EAAE,CAAC,EAAE,OAAO;IAC9C,MAAM,IAAI,iBAAiB,GAAG,GAAG;IACjC,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 5296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5302, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/pick/pick.mjs"],"sourcesContent":["import { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { PickFromMappedKey } from './pick-from-mapped-key.mjs';\nimport { PickFromMappedResult } from './pick-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsMappedResult, IsIntersect, IsUnion, IsObject, IsSchema } from '../guard/kind.mjs';\nfunction FromIntersect(T, K) {\n    return T.map((T) => PickResolve(T, K));\n}\n// prettier-ignore\nfunction FromUnion(T, K) {\n    return T.map((T) => PickResolve(T, K));\n}\n// prettier-ignore\nfunction FromProperties(T, K) {\n    const Acc = {};\n    for (const K2 of K)\n        if (K2 in T)\n            Acc[K2] = T[K2];\n    return Acc;\n}\n// ------------------------------------------------------------------\n// PickResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction PickResolve(T, K) {\n    return (IsIntersect(T) ? Intersect(FromIntersect(T.allOf, K)) :\n        IsUnion(T) ? Union(FromUnion(T.anyOf, K)) :\n            IsObject(T) ? Object(FromProperties(T.properties, K)) :\n                Object({}));\n}\nexport function Pick(T, K, options = {}) {\n    // mapped\n    if (IsMappedKey(K))\n        return PickFromMappedKey(T, K, options);\n    if (IsMappedResult(T))\n        return PickFromMappedResult(T, K, options);\n    // non-mapped\n    const I = IsSchema(K) ? IndexPropertyKeys(K) : K;\n    const D = Discard(T, [TransformKind, '$id', 'required']);\n    const R = CloneType(PickResolve(T, I), options);\n    return { ...D, ...R };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AAVA;AADA;AADA;AAGA;AACA;AACA;;;;;;;;;;;AAQA,SAAS,cAAc,CAAC,EAAE,CAAC;IACvB,OAAO,EAAE,GAAG,CAAC,CAAC,IAAM,YAAY,GAAG;AACvC;AACA,kBAAkB;AAClB,SAAS,UAAU,CAAC,EAAE,CAAC;IACnB,OAAO,EAAE,GAAG,CAAC,CAAC,IAAM,YAAY,GAAG;AACvC;AACA,kBAAkB;AAClB,SAAS,eAAe,CAAC,EAAE,CAAC;IACxB,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,MAAM,EACb,IAAI,MAAM,GACN,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG;IACvB,OAAO;AACX;AACA,qEAAqE;AACrE,cAAc;AACd,qEAAqE;AACrE,kBAAkB;AAClB,SAAS,YAAY,CAAC,EAAE,CAAC;IACrB,OAAQ,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE,KAAK,CAAA,GAAA,0LAAA,CAAA,YAAS,AAAD,EAAE,cAAc,EAAE,KAAK,EAAE,MACtD,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,KAAK,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE,UAAU,EAAE,KAAK,EAAE,MAClC,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,EAAE,eAAe,EAAE,UAAU,EAAE,MAC9C,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,EAAE,CAAC;AACxB;AACO,SAAS,KAAK,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IACnC,SAAS;IACT,IAAI,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE,IACZ,OAAO,CAAA,GAAA,yMAAA,CAAA,oBAAiB,AAAD,EAAE,GAAG,GAAG;IACnC,IAAI,CAAA,GAAA,iLAAA,CAAA,iBAAc,AAAD,EAAE,IACf,OAAO,CAAA,GAAA,4MAAA,CAAA,uBAAoB,AAAD,EAAE,GAAG,GAAG;IACtC,aAAa;IACb,MAAM,IAAI,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,CAAA,GAAA,0MAAA,CAAA,oBAAiB,AAAD,EAAE,KAAK;IAC/C,MAAM,IAAI,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,GAAG;QAAC,sLAAA,CAAA,gBAAa;QAAE;QAAO;KAAW;IACvD,MAAM,IAAI,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,YAAY,GAAG,IAAI;IACvC,OAAO;QAAE,GAAG,CAAC;QAAE,GAAG,CAAC;IAAC;AACxB","ignoreList":[0]}},
    {"offset": {"line": 5371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5377, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/pick/pick-from-mapped-key.mjs"],"sourcesContent":["import { MappedResult } from '../mapped/index.mjs';\nimport { Pick } from './pick.mjs';\n// prettier-ignore\nfunction FromPropertyKey(T, K, options) {\n    return {\n        [K]: Pick(T, [K], options)\n    };\n}\n// prettier-ignore\nfunction FromPropertyKeys(T, K, options) {\n    return K.reduce((Acc, LK) => {\n        return { ...Acc, ...FromPropertyKey(T, LK, options) };\n    }, {});\n}\n// prettier-ignore\nfunction FromMappedKey(T, K, options) {\n    return FromPropertyKeys(T, K.keys, options);\n}\n// prettier-ignore\nexport function PickFromMappedKey(T, K, options) {\n    const P = FromMappedKey(T, K, options);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAEA,kBAAkB;AAClB,SAAS,gBAAgB,CAAC,EAAE,CAAC,EAAE,OAAO;IAClC,OAAO;QACH,CAAC,EAAE,EAAE,CAAA,GAAA,gLAAA,CAAA,OAAI,AAAD,EAAE,GAAG;YAAC;SAAE,EAAE;IACtB;AACJ;AACA,kBAAkB;AAClB,SAAS,iBAAiB,CAAC,EAAE,CAAC,EAAE,OAAO;IACnC,OAAO,EAAE,MAAM,CAAC,CAAC,KAAK;QAClB,OAAO;YAAE,GAAG,GAAG;YAAE,GAAG,gBAAgB,GAAG,IAAI,QAAQ;QAAC;IACxD,GAAG,CAAC;AACR;AACA,kBAAkB;AAClB,SAAS,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO;IAChC,OAAO,iBAAiB,GAAG,EAAE,IAAI,EAAE;AACvC;AAEO,SAAS,kBAAkB,CAAC,EAAE,CAAC,EAAE,OAAO;IAC3C,MAAM,IAAI,cAAc,GAAG,GAAG;IAC9B,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 5410, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5416, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5420, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5437, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/readonly-optional/readonly-optional.mjs"],"sourcesContent":["import { Readonly } from '../readonly/index.mjs';\nimport { Optional } from '../optional/index.mjs';\n/** `[Json]` Creates a Readonly and Optional property */\nexport function ReadonlyOptional(schema) {\n    return Readonly(Optional(schema));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;AACA;;;AAEO,SAAS,iBAAiB,MAAM;IACnC,OAAO,CAAA,GAAA,wLAAA,CAAA,WAAQ,AAAD,EAAE,CAAA,GAAA,wLAAA,CAAA,WAAQ,AAAD,EAAE;AAC7B","ignoreList":[0]}},
    {"offset": {"line": 5449, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5472, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/record/record.mjs"],"sourcesContent":["import { Object } from '../object/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { IsTemplateLiteralFinite } from '../template-literal/index.mjs';\nimport { PatternStringExact, PatternNumberExact, PatternNeverExact } from '../patterns/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsUndefined } from '../guard/value.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsInteger, IsLiteral, IsAny, IsNever, IsNumber, IsString, IsRegExp, IsTemplateLiteral, IsUnion } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// RecordCreateFromPattern\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordCreateFromPattern(pattern, T, options) {\n    return {\n        ...options,\n        [Kind]: 'Record',\n        type: 'object',\n        patternProperties: { [pattern]: CloneType(T) }\n    };\n}\n// ------------------------------------------------------------------\n// RecordCreateFromKeys\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordCreateFromKeys(K, T, options) {\n    const Acc = {};\n    for (const K2 of K)\n        Acc[K2] = CloneType(T);\n    return Object(Acc, { ...options, [Hint]: 'Record' });\n}\n// prettier-ignore\nfunction FromTemplateLiteralKey(K, T, options) {\n    return (IsTemplateLiteralFinite(K)\n        ? RecordCreateFromKeys(IndexPropertyKeys(K), T, options)\n        : RecordCreateFromPattern(K.pattern, T, options));\n}\n// prettier-ignore\nfunction FromUnionKey(K, T, options) {\n    return RecordCreateFromKeys(IndexPropertyKeys(Union(K)), T, options);\n}\n// prettier-ignore\nfunction FromLiteralKey(K, T, options) {\n    return RecordCreateFromKeys([K.toString()], T, options);\n}\n// prettier-ignore\nfunction FromRegExpKey(K, T, options) {\n    return RecordCreateFromPattern(K.source, T, options);\n}\n// prettier-ignore\nfunction FromStringKey(K, T, options) {\n    const pattern = IsUndefined(K.pattern) ? PatternStringExact : K.pattern;\n    return RecordCreateFromPattern(pattern, T, options);\n}\n// prettier-ignore\nfunction FromAnyKey(K, T, options) {\n    return RecordCreateFromPattern(PatternStringExact, T, options);\n}\n// prettier-ignore\nfunction FromNeverKey(K, T, options) {\n    return RecordCreateFromPattern(PatternNeverExact, T, options);\n}\n// prettier-ignore\nfunction FromIntegerKey(_, T, options) {\n    return RecordCreateFromPattern(PatternNumberExact, T, options);\n}\n// prettier-ignore\nfunction FromNumberKey(_, T, options) {\n    return RecordCreateFromPattern(PatternNumberExact, T, options);\n}\n// ------------------------------------------------------------------\n// TRecordOrObject\n// ------------------------------------------------------------------\n/** `[Json]` Creates a Record type */\nexport function Record(K, T, options = {}) {\n    // prettier-ignore\n    return (IsUnion(K) ? FromUnionKey(K.anyOf, T, options) :\n        IsTemplateLiteral(K) ? FromTemplateLiteralKey(K, T, options) :\n            IsLiteral(K) ? FromLiteralKey(K.const, T, options) :\n                IsInteger(K) ? FromIntegerKey(K, T, options) :\n                    IsNumber(K) ? FromNumberKey(K, T, options) :\n                        IsRegExp(K) ? FromRegExpKey(K, T, options) :\n                            IsString(K) ? FromStringKey(K, T, options) :\n                                IsAny(K) ? FromAnyKey(K, T, options) :\n                                    IsNever(K) ? FromNeverKey(K, T, options) :\n                                        Never(options));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,aAAa;AACb,qEAAqE;AACrE;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AATA;AANA;AAGA;AAEA;AAHA;AAEA;AAHA;;;;;;;;;;;AAeA,qEAAqE;AACrE,0BAA0B;AAC1B,qEAAqE;AACrE,kBAAkB;AAClB,SAAS,wBAAwB,OAAO,EAAE,CAAC,EAAE,OAAO;IAChD,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM;QACN,mBAAmB;YAAE,CAAC,QAAQ,EAAE,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;QAAG;IACjD;AACJ;AACA,qEAAqE;AACrE,uBAAuB;AACvB,qEAAqE;AACrE,kBAAkB;AAClB,SAAS,qBAAqB,CAAC,EAAE,CAAC,EAAE,OAAO;IACvC,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,MAAM,EACb,GAAG,CAAC,GAAG,GAAG,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;IACxB,OAAO,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,EAAE,KAAK;QAAE,GAAG,OAAO;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;IAAS;AACtD;AACA,kBAAkB;AAClB,SAAS,uBAAuB,CAAC,EAAE,CAAC,EAAE,OAAO;IACzC,OAAQ,CAAA,GAAA,iMAAA,CAAA,0BAAuB,AAAD,EAAE,KAC1B,qBAAqB,CAAA,GAAA,0MAAA,CAAA,oBAAiB,AAAD,EAAE,IAAI,GAAG,WAC9C,wBAAwB,EAAE,OAAO,EAAE,GAAG;AAChD;AACA,kBAAkB;AAClB,SAAS,aAAa,CAAC,EAAE,CAAC,EAAE,OAAO;IAC/B,OAAO,qBAAqB,CAAA,GAAA,0MAAA,CAAA,oBAAiB,AAAD,EAAE,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE,KAAK,GAAG;AAChE;AACA,kBAAkB;AAClB,SAAS,eAAe,CAAC,EAAE,CAAC,EAAE,OAAO;IACjC,OAAO,qBAAqB;QAAC,EAAE,QAAQ;KAAG,EAAE,GAAG;AACnD;AACA,kBAAkB;AAClB,SAAS,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO;IAChC,OAAO,wBAAwB,EAAE,MAAM,EAAE,GAAG;AAChD;AACA,kBAAkB;AAClB,SAAS,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO;IAChC,MAAM,UAAU,CAAA,GAAA,kLAAA,CAAA,cAAW,AAAD,EAAE,EAAE,OAAO,IAAI,wLAAA,CAAA,qBAAkB,GAAG,EAAE,OAAO;IACvE,OAAO,wBAAwB,SAAS,GAAG;AAC/C;AACA,kBAAkB;AAClB,SAAS,WAAW,CAAC,EAAE,CAAC,EAAE,OAAO;IAC7B,OAAO,wBAAwB,wLAAA,CAAA,qBAAkB,EAAE,GAAG;AAC1D;AACA,kBAAkB;AAClB,SAAS,aAAa,CAAC,EAAE,CAAC,EAAE,OAAO;IAC/B,OAAO,wBAAwB,wLAAA,CAAA,oBAAiB,EAAE,GAAG;AACzD;AACA,kBAAkB;AAClB,SAAS,eAAe,CAAC,EAAE,CAAC,EAAE,OAAO;IACjC,OAAO,wBAAwB,wLAAA,CAAA,qBAAkB,EAAE,GAAG;AAC1D;AACA,kBAAkB;AAClB,SAAS,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO;IAChC,OAAO,wBAAwB,wLAAA,CAAA,qBAAkB,EAAE,GAAG;AAC1D;AAKO,SAAS,OAAO,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IACrC,kBAAkB;IAClB,OAAQ,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,KAAK,aAAa,EAAE,KAAK,EAAE,GAAG,WAC1C,CAAA,GAAA,iLAAA,CAAA,oBAAiB,AAAD,EAAE,KAAK,uBAAuB,GAAG,GAAG,WAChD,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,eAAe,EAAE,KAAK,EAAE,GAAG,WACtC,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,eAAe,GAAG,GAAG,WAChC,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,cAAc,GAAG,GAAG,WAC9B,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,cAAc,GAAG,GAAG,WAC9B,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,cAAc,GAAG,GAAG,WAC9B,CAAA,GAAA,iLAAA,CAAA,QAAK,AAAD,EAAE,KAAK,WAAW,GAAG,GAAG,WACxB,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,KAAK,aAAa,GAAG,GAAG,WAC5B,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE;AAC9C","ignoreList":[0]}},
    {"offset": {"line": 5577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5583, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5585, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5600, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/recursive/recursive.mjs"],"sourcesContent":["import { CloneType } from '../clone/type.mjs';\nimport { IsUndefined } from '../guard/value.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\n// Auto Tracked For Recursive Types without ID's\nlet Ordinal = 0;\n/** `[Json]` Creates a Recursive type */\nexport function Recursive(callback, options = {}) {\n    if (IsUndefined(options.$id))\n        options.$id = `T${Ordinal++}`;\n    const thisType = callback({ [Kind]: 'This', $ref: `${options.$id}` });\n    thisType.$id = options.$id;\n    // prettier-ignore\n    return CloneType({ ...options, [Hint]: 'Recursive', ...thisType });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAAA;;;;AACA,gDAAgD;AAChD,IAAI,UAAU;AAEP,SAAS,UAAU,QAAQ,EAAE,UAAU,CAAC,CAAC;IAC5C,IAAI,CAAA,GAAA,kLAAA,CAAA,cAAW,AAAD,EAAE,QAAQ,GAAG,GACvB,QAAQ,GAAG,GAAG,CAAC,CAAC,EAAE,WAAW;IACjC,MAAM,WAAW,SAAS;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAQ,MAAM,GAAG,QAAQ,GAAG,EAAE;IAAC;IACnE,SAAS,GAAG,GAAG,QAAQ,GAAG;IAC1B,kBAAkB;IAClB,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE;QAAE,GAAG,OAAO;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAa,GAAG,QAAQ;IAAC;AACpE","ignoreList":[0]}},
    {"offset": {"line": 5626, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5632, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5634, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5649, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/ref/ref.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsString, IsUndefined } from '../guard/value.mjs';\n/** `[Json]` Creates a Ref type. */\nexport function Ref(unresolved, options = {}) {\n    if (IsString(unresolved))\n        return { ...options, [Kind]: 'Ref', $ref: unresolved };\n    if (IsUndefined(unresolved.$id))\n        throw new Error('Reference target type must specify an $id');\n    return {\n        ...options,\n        [Kind]: 'Ref',\n        $ref: unresolved.$id,\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AACA,qEAAqE;AACrE,aAAa;AACb,qEAAqE;AACrE;AAJA;;;AAMO,SAAS,IAAI,UAAU,EAAE,UAAU,CAAC,CAAC;IACxC,IAAI,CAAA,GAAA,kLAAA,CAAA,WAAQ,AAAD,EAAE,aACT,OAAO;QAAE,GAAG,OAAO;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAO,MAAM;IAAW;IACzD,IAAI,CAAA,GAAA,kLAAA,CAAA,cAAW,AAAD,EAAE,WAAW,GAAG,GAC1B,MAAM,IAAI,MAAM;IACpB,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM,WAAW,GAAG;IACxB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 5673, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5679, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5681, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5696, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/regexp/regexp.mjs"],"sourcesContent":["import { IsString } from '../guard/value.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a RegExp type */\nexport function RegExp(unresolved, options = {}) {\n    const expr = IsString(unresolved) ? new globalThis.RegExp(unresolved) : unresolved;\n    return { ...options, [Kind]: 'RegExp', type: 'RegExp', source: expr.source, flags: expr.flags };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEO,SAAS,OAAO,UAAU,EAAE,UAAU,CAAC,CAAC;IAC3C,MAAM,OAAO,CAAA,GAAA,kLAAA,CAAA,WAAQ,AAAD,EAAE,cAAc,IAAI,WAAW,MAAM,CAAC,cAAc;IACxE,OAAO;QAAE,GAAG,OAAO;QAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QAAU,MAAM;QAAU,QAAQ,KAAK,MAAM;QAAE,OAAO,KAAK,KAAK;IAAC;AAClG","ignoreList":[0]}},
    {"offset": {"line": 5714, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5720, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5722, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5737, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/required/required.mjs"],"sourcesContent":["import { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { OptionalKind, TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { RequiredFromMappedResult } from './required-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult, IsIntersect, IsUnion, IsObject } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(T) {\n    return T.map(L => RequiredResolve(L));\n}\n// prettier-ignore\nfunction FromProperties(T) {\n    const Acc = {};\n    for (const K of globalThis.Object.getOwnPropertyNames(T))\n        Acc[K] = Discard(T[K], [OptionalKind]);\n    return Acc;\n}\n// ------------------------------------------------------------------\n// RequiredResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RequiredResolve(T) {\n    return (IsIntersect(T) ? Intersect(FromRest(T.allOf)) :\n        IsUnion(T) ? Union(FromRest(T.anyOf)) :\n            IsObject(T) ? Object(FromProperties(T.properties)) :\n                Object({}));\n}\n/** `[Json]` Constructs a type where all properties are required */\nexport function Required(T, options = {}) {\n    if (IsMappedResult(T)) {\n        return RequiredFromMappedResult(T, options);\n    }\n    else {\n        const D = Discard(T, [TransformKind, '$id', 'required']);\n        const R = CloneType(RequiredResolve(T), options);\n        return { ...D, ...R };\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AALA;AAFA;AADA;AADA;AADA;;;;;;;;;AAWA,kBAAkB;AAClB,SAAS,SAAS,CAAC;IACf,OAAO,EAAE,GAAG,CAAC,CAAA,IAAK,gBAAgB;AACtC;AACA,kBAAkB;AAClB,SAAS,eAAe,CAAC;IACrB,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,KAAK,WAAW,MAAM,CAAC,mBAAmB,CAAC,GAClD,GAAG,CAAC,EAAE,GAAG,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,CAAC,CAAC,EAAE,EAAE;QAAC,sLAAA,CAAA,eAAY;KAAC;IACzC,OAAO;AACX;AACA,qEAAqE;AACrE,kBAAkB;AAClB,qEAAqE;AACrE,kBAAkB;AAClB,SAAS,gBAAgB,CAAC;IACtB,OAAQ,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE,KAAK,CAAA,GAAA,0LAAA,CAAA,YAAS,AAAD,EAAE,SAAS,EAAE,KAAK,KAC/C,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,KAAK,CAAA,GAAA,kLAAA,CAAA,QAAK,AAAD,EAAE,SAAS,EAAE,KAAK,KAC/B,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,EAAE,eAAe,EAAE,UAAU,KAC5C,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,EAAE,CAAC;AACxB;AAEO,SAAS,SAAS,CAAC,EAAE,UAAU,CAAC,CAAC;IACpC,IAAI,CAAA,GAAA,iLAAA,CAAA,iBAAc,AAAD,EAAE,IAAI;QACnB,OAAO,CAAA,GAAA,oNAAA,CAAA,2BAAwB,AAAD,EAAE,GAAG;IACvC,OACK;QACD,MAAM,IAAI,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,GAAG;YAAC,sLAAA,CAAA,gBAAa;YAAE;YAAO;SAAW;QACvD,MAAM,IAAI,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,gBAAgB,IAAI;QACxC,OAAO;YAAE,GAAG,CAAC;YAAE,GAAG,CAAC;QAAC;IACxB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 5799, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5805, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/required/required-from-mapped-result.mjs"],"sourcesContent":["import { MappedResult } from '../mapped/index.mjs';\nimport { Required } from './required.mjs';\n// prettier-ignore\nfunction FromProperties(P, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Required(P[K2], options);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, options) {\n    return FromProperties(R.properties, options);\n}\n// prettier-ignore\nexport function RequiredFromMappedResult(R, options) {\n    const P = FromMappedResult(R, options);\n    return MappedResult(P);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAEA,kBAAkB;AAClB,SAAS,eAAe,CAAC,EAAE,OAAO;IAC9B,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,MAAM,WAAW,MAAM,CAAC,mBAAmB,CAAC,GACnD,GAAG,CAAC,GAAG,GAAG,CAAA,GAAA,wLAAA,CAAA,WAAQ,AAAD,EAAE,CAAC,CAAC,GAAG,EAAE;IAC9B,OAAO;AACX;AACA,kBAAkB;AAClB,SAAS,iBAAiB,CAAC,EAAE,OAAO;IAChC,OAAO,eAAe,EAAE,UAAU,EAAE;AACxC;AAEO,SAAS,yBAAyB,CAAC,EAAE,OAAO;IAC/C,MAAM,IAAI,iBAAiB,GAAG;IAC9B,OAAO,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE;AACxB","ignoreList":[0]}},
    {"offset": {"line": 5827, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5833, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5836, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5852, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/rest/rest.mjs"],"sourcesContent":["import { CloneRest } from '../clone/type.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsIntersect, IsUnion, IsTuple } from '../guard/kind.mjs';\n// prettier-ignore\nfunction RestResolve(T) {\n    return (IsIntersect(T) ? CloneRest(T.allOf) :\n        IsUnion(T) ? CloneRest(T.anyOf) :\n            IsTuple(T) ? CloneRest(T.items ?? []) :\n                []);\n}\n/** `[Json]` Extracts interior Rest elements from Tuple, Intersect and Union types */\nexport function Rest(T) {\n    return CloneRest(RestResolve(T));\n}\n"],"names":[],"mappings":";;;AAAA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;;;AACA,kBAAkB;AAClB,SAAS,YAAY,CAAC;IAClB,OAAQ,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE,KAAK,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,EAAE,KAAK,IACtC,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,KAAK,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,EAAE,KAAK,IAC1B,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE,KAAK,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,EAAE,KAAK,IAAI,EAAE,IAChC,EAAE;AAClB;AAEO,SAAS,KAAK,CAAC;IAClB,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,YAAY;AACjC","ignoreList":[0]}},
    {"offset": {"line": 5869, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5875, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5877, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5892, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/return-type/return-type.mjs"],"sourcesContent":["import { CloneType } from '../clone/type.mjs';\n/** `[JavaScript]` Extracts the ReturnType from the given Function type */\nexport function ReturnType(schema, options = {}) {\n    return CloneType(schema.returns, options);\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,WAAW,MAAM,EAAE,UAAU,CAAC,CAAC;IAC3C,OAAO,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,OAAO,OAAO,EAAE;AACrC","ignoreList":[0]}},
    {"offset": {"line": 5900, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5906, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5908, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5923, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5925, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5931, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/schema/schema.mjs"],"sourcesContent":["import { Kind, Hint, ReadonlyKind, OptionalKind } from '../symbols/index.mjs';\n"],"names":[],"mappings":";AAAA","ignoreList":[0]}},
    {"offset": {"line": 5934, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5940, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5943, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5959, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5961, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5967, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5969, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5984, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/strict/strict.mjs"],"sourcesContent":["/** `[Json]` Omits compositing symbols from this schema. */\nexport function Strict(schema) {\n    return JSON.parse(JSON.stringify(schema));\n}\n"],"names":[],"mappings":"AAAA,yDAAyD;;;AAClD,SAAS,OAAO,MAAM;IACzB,OAAO,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;AACrC","ignoreList":[0]}},
    {"offset": {"line": 5990, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5996, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5998, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6013, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/transform/transform.mjs"],"sourcesContent":["import { TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// TransformBuilders\n// ------------------------------------------------------------------\nexport class TransformDecodeBuilder {\n    constructor(schema) {\n        this.schema = schema;\n    }\n    Decode(decode) {\n        return new TransformEncodeBuilder(this.schema, decode);\n    }\n}\n// prettier-ignore\nexport class TransformEncodeBuilder {\n    constructor(schema, decode) {\n        this.schema = schema;\n        this.decode = decode;\n    }\n    EncodeTransform(encode, schema) {\n        const Encode = (value) => schema[TransformKind].Encode(encode(value));\n        const Decode = (value) => this.decode(schema[TransformKind].Decode(value));\n        const Codec = { Encode: Encode, Decode: Decode };\n        return { ...schema, [TransformKind]: Codec };\n    }\n    EncodeSchema(encode, schema) {\n        const Codec = { Decode: this.decode, Encode: encode };\n        return { ...schema, [TransformKind]: Codec };\n    }\n    Encode(encode) {\n        const schema = CloneType(this.schema);\n        return (IsTransform(schema) ? this.EncodeTransform(encode, schema) : this.EncodeSchema(encode, schema));\n    }\n}\n/** `[Json]` Creates a Transform type */\nexport function Transform(schema) {\n    return new TransformDecodeBuilder(schema);\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE;AALA;;;;AASO,MAAM;IACT,YAAY,MAAM,CAAE;QAChB,IAAI,CAAC,MAAM,GAAG;IAClB;IACA,OAAO,MAAM,EAAE;QACX,OAAO,IAAI,uBAAuB,IAAI,CAAC,MAAM,EAAE;IACnD;AACJ;AAEO,MAAM;IACT,YAAY,MAAM,EAAE,MAAM,CAAE;QACxB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,MAAM,GAAG;IAClB;IACA,gBAAgB,MAAM,EAAE,MAAM,EAAE;QAC5B,MAAM,SAAS,CAAC,QAAU,MAAM,CAAC,sLAAA,CAAA,gBAAa,CAAC,CAAC,MAAM,CAAC,OAAO;QAC9D,MAAM,SAAS,CAAC,QAAU,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,sLAAA,CAAA,gBAAa,CAAC,CAAC,MAAM,CAAC;QACnE,MAAM,QAAQ;YAAE,QAAQ;YAAQ,QAAQ;QAAO;QAC/C,OAAO;YAAE,GAAG,MAAM;YAAE,CAAC,sLAAA,CAAA,gBAAa,CAAC,EAAE;QAAM;IAC/C;IACA,aAAa,MAAM,EAAE,MAAM,EAAE;QACzB,MAAM,QAAQ;YAAE,QAAQ,IAAI,CAAC,MAAM;YAAE,QAAQ;QAAO;QACpD,OAAO;YAAE,GAAG,MAAM;YAAE,CAAC,sLAAA,CAAA,gBAAa,CAAC,EAAE;QAAM;IAC/C;IACA,OAAO,MAAM,EAAE;QACX,MAAM,SAAS,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,IAAI,CAAC,MAAM;QACpC,OAAQ,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE,UAAU,IAAI,CAAC,eAAe,CAAC,QAAQ,UAAU,IAAI,CAAC,YAAY,CAAC,QAAQ;IACnG;AACJ;AAEO,SAAS,UAAU,MAAM;IAC5B,OAAO,IAAI,uBAAuB;AACtC","ignoreList":[0]}},
    {"offset": {"line": 6071, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6077, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 6079, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6094, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/unsafe/unsafe.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Unsafe type that will infers as the generic argument T */\nexport function Unsafe(options = {}) {\n    return {\n        ...options,\n        [Kind]: options[Kind] ?? 'Unsafe',\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,OAAO,UAAU,CAAC,CAAC;IAC/B,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE,OAAO,CAAC,sLAAA,CAAA,OAAI,CAAC,IAAI;IAC7B;AACJ","ignoreList":[0]}},
    {"offset": {"line": 6106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 6114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6129, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/void/void.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Void type */\nexport function Void(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Void',\n        type: 'void',\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS,KAAK,UAAU,CAAC,CAAC;IAC7B,OAAO;QACH,GAAG,OAAO;QACV,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;QACR,MAAM;IACV;AACJ","ignoreList":[0]}},
    {"offset": {"line": 6142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 6150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6165, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/type/json.mjs"],"sourcesContent":["import { Any } from '../any/index.mjs';\nimport { Array } from '../array/index.mjs';\nimport { Boolean } from '../boolean/index.mjs';\nimport { Composite } from '../composite/index.mjs';\nimport { Const } from '../const/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { Enum } from '../enum/index.mjs';\nimport { Exclude } from '../exclude/index.mjs';\nimport { Extends } from '../extends/index.mjs';\nimport { Extract } from '../extract/index.mjs';\nimport { Index } from '../indexed/index.mjs';\nimport { Integer } from '../integer/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Capitalize, Uncapitalize, Lowercase, Uppercase } from '../intrinsic/index.mjs';\nimport { KeyOf } from '../keyof/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Mapped } from '../mapped/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Not } from '../not/index.mjs';\nimport { Null } from '../null/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Omit } from '../omit/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { Partial } from '../partial/index.mjs';\nimport { Pick } from '../pick/index.mjs';\nimport { Readonly } from '../readonly/index.mjs';\nimport { ReadonlyOptional } from '../readonly-optional/index.mjs';\nimport { Record } from '../record/index.mjs';\nimport { Recursive } from '../recursive/index.mjs';\nimport { Ref } from '../ref/index.mjs';\nimport { Required } from '../required/index.mjs';\nimport { Rest } from '../rest/index.mjs';\nimport { Strict } from '../strict/index.mjs';\nimport { String } from '../string/index.mjs';\nimport { TemplateLiteral } from '../template-literal/index.mjs';\nimport { Transform } from '../transform/index.mjs';\nimport { Tuple } from '../tuple/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Unknown } from '../unknown/index.mjs';\nimport { Unsafe } from '../unsafe/index.mjs';\n/** Json Type Builder with Static Resolution for TypeScript */\nexport class JsonTypeBuilder {\n    // ------------------------------------------------------------------------\n    // Strict\n    // ------------------------------------------------------------------------\n    /** `[Json]` Omits compositing symbols from this schema */\n    Strict(schema) {\n        return Strict(schema);\n    }\n    // ------------------------------------------------------------------------\n    // Modifiers\n    // ------------------------------------------------------------------------\n    /** `[Json]` Creates a Readonly and Optional property */\n    ReadonlyOptional(schema) {\n        return ReadonlyOptional(schema);\n    }\n    /** `[Json]` Creates a Readonly property */\n    Readonly(schema, enable) {\n        return Readonly(schema, enable ?? true);\n    }\n    /** `[Json]` Creates a Optional property */\n    Optional(schema, enable) {\n        return Optional(schema, enable ?? true);\n    }\n    // ------------------------------------------------------------------------\n    // Types\n    // ------------------------------------------------------------------------\n    /** `[Json]` Creates an Any type */\n    Any(options = {}) {\n        return Any(options);\n    }\n    /** `[Json]` Creates an Array type */\n    Array(schema, options = {}) {\n        return Array(schema, options);\n    }\n    /** `[Json]` Creates a Boolean type */\n    Boolean(options = {}) {\n        return Boolean(options);\n    }\n    /** `[Json]` Intrinsic function to Capitalize LiteralString types */\n    Capitalize(schema, options = {}) {\n        return Capitalize(schema, options);\n    }\n    /** `[Json]` Creates a Composite object type */\n    Composite(schemas, options) {\n        return Composite(schemas, options); // (error) TS 5.4.0-dev - review TComposite implementation\n    }\n    /** `[JavaScript]` Creates a readonly const type from the given value. */\n    Const(value, options = {}) {\n        return Const(value, options);\n    }\n    /** `[Json]` Creates a dereferenced type */\n    Deref(schema, references) {\n        return Deref(schema, references);\n    }\n    /** `[Json]` Creates a Enum type */\n    Enum(item, options = {}) {\n        return Enum(item, options);\n    }\n    /** `[Json]` Constructs a type by excluding from unionType all union members that are assignable to excludedMembers */\n    Exclude(unionType, excludedMembers, options = {}) {\n        return Exclude(unionType, excludedMembers, options);\n    }\n    /** `[Json]` Creates a Conditional type */\n    Extends(L, R, T, F, options = {}) {\n        return Extends(L, R, T, F, options);\n    }\n    /** `[Json]` Constructs a type by extracting from type all union members that are assignable to union */\n    Extract(type, union, options = {}) {\n        return Extract(type, union, options);\n    }\n    /** `[Json]` Returns an Indexed property type for the given keys */\n    Index(schema, unresolved, options = {}) {\n        return Index(schema, unresolved, options);\n    }\n    /** `[Json]` Creates an Integer type */\n    Integer(options = {}) {\n        return Integer(options);\n    }\n    /** `[Json]` Creates an Intersect type */\n    Intersect(T, options = {}) {\n        return Intersect(T, options);\n    }\n    /** `[Json]` Creates a KeyOf type */\n    KeyOf(schema, options = {}) {\n        return KeyOf(schema, options);\n    }\n    /** `[Json]` Creates a Literal type */\n    Literal(value, options = {}) {\n        return Literal(value, options);\n    }\n    /** `[Json]` Intrinsic function to Lowercase LiteralString types */\n    Lowercase(schema, options = {}) {\n        return Lowercase(schema, options);\n    }\n    /** `[Json]` Creates a Mapped object type */\n    Mapped(key, map, options = {}) {\n        return Mapped(key, map, options);\n    }\n    /** `[Json]` Creates a Never type */\n    Never(options = {}) {\n        return Never(options);\n    }\n    /** `[Json]` Creates a Not type */\n    Not(schema, options) {\n        return Not(schema, options);\n    }\n    /** `[Json]` Creates a Null type */\n    Null(options = {}) {\n        return Null(options);\n    }\n    /** `[Json]` Creates a Number type */\n    Number(options = {}) {\n        return Number(options);\n    }\n    /** `[Json]` Creates an Object type */\n    Object(properties, options = {}) {\n        return Object(properties, options);\n    }\n    /** `[Json]` Constructs a type whose keys are omitted from the given type */\n    Omit(schema, unresolved, options = {}) {\n        return Omit(schema, unresolved, options);\n    }\n    /** `[Json]` Constructs a type where all properties are optional */\n    Partial(schema, options = {}) {\n        return Partial(schema, options);\n    }\n    /** `[Json]` Constructs a type whose keys are picked from the given type */\n    Pick(schema, unresolved, options = {}) {\n        return Pick(schema, unresolved, options);\n    }\n    /** `[Json]` Creates a Record type */\n    Record(key, schema, options = {}) {\n        return Record(key, schema, options);\n    }\n    /** `[Json]` Creates a Recursive type */\n    Recursive(callback, options = {}) {\n        return Recursive(callback, options);\n    }\n    /** `[Json]` Creates a Ref type. */\n    Ref(unresolved, options = {}) {\n        return Ref(unresolved, options);\n    }\n    /** `[Json]` Constructs a type where all properties are required */\n    Required(schema, options = {}) {\n        return Required(schema, options);\n    }\n    /** `[Json]` Extracts interior Rest elements from Tuple, Intersect and Union types */\n    Rest(schema) {\n        return Rest(schema);\n    }\n    /** `[Json]` Creates a String type */\n    String(options = {}) {\n        return String(options);\n    }\n    /** `[Json]` Creates a TemplateLiteral type */\n    TemplateLiteral(unresolved, options = {}) {\n        return TemplateLiteral(unresolved, options);\n    }\n    /** `[Json]` Creates a Transform type */\n    Transform(schema) {\n        return Transform(schema);\n    }\n    /** `[Json]` Creates a Tuple type */\n    Tuple(items, options = {}) {\n        return Tuple(items, options);\n    }\n    /** `[Json]` Intrinsic function to Uncapitalize LiteralString types */\n    Uncapitalize(schema, options = {}) {\n        return Uncapitalize(schema, options);\n    }\n    /** `[Json]` Creates a Union type */\n    Union(schemas, options = {}) {\n        return Union(schemas, options);\n    }\n    /** `[Json]` Creates an Unknown type */\n    Unknown(options = {}) {\n        return Unknown(options);\n    }\n    /** `[Json]` Creates a Unsafe type that will infers as the generic argument T */\n    Unsafe(options = {}) {\n        return Unsafe(options);\n    }\n    /** `[Json]` Intrinsic function to Uppercase LiteralString types */\n    Uppercase(schema, options = {}) {\n        return Uppercase(schema, options);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6437, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6443, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/type/type.mjs"],"sourcesContent":["// ------------------------------------------------------------------\n// Type: Module\n// ------------------------------------------------------------------\nexport { Any } from '../any/index.mjs';\nexport { Array } from '../array/index.mjs';\nexport { AsyncIterator } from '../async-iterator/index.mjs';\nexport { Awaited } from '../awaited/index.mjs';\nexport { BigInt } from '../bigint/index.mjs';\nexport { Boolean } from '../boolean/index.mjs';\nexport { Composite } from '../composite/index.mjs';\nexport { Const } from '../const/index.mjs';\nexport { Constructor } from '../constructor/index.mjs';\nexport { ConstructorParameters } from '../constructor-parameters/index.mjs';\nexport { Date } from '../date/index.mjs';\nexport { Deref } from '../deref/index.mjs';\nexport { Enum } from '../enum/index.mjs';\nexport { Exclude } from '../exclude/index.mjs';\nexport { Extends } from '../extends/index.mjs';\nexport { Extract } from '../extract/index.mjs';\nexport { Function } from '../function/index.mjs';\nexport { Index } from '../indexed/index.mjs';\nexport { InstanceType } from '../instance-type/index.mjs';\nexport { Integer } from '../integer/index.mjs';\nexport { Intersect } from '../intersect/index.mjs';\nexport { Capitalize, Uncapitalize, Lowercase, Uppercase } from '../intrinsic/index.mjs';\nexport { Iterator } from '../iterator/index.mjs';\nexport { KeyOf } from '../keyof/index.mjs';\nexport { Literal } from '../literal/index.mjs';\nexport { Mapped } from '../mapped/index.mjs';\nexport { Never } from '../never/index.mjs';\nexport { Not } from '../not/index.mjs';\nexport { Null } from '../null/index.mjs';\nexport { Number } from '../number/index.mjs';\nexport { Object } from '../object/index.mjs';\nexport { Omit } from '../omit/index.mjs';\nexport { Optional } from '../optional/index.mjs';\nexport { Parameters } from '../parameters/index.mjs';\nexport { Partial } from '../partial/index.mjs';\nexport { Pick } from '../pick/index.mjs';\nexport { Promise } from '../promise/index.mjs';\nexport { Readonly } from '../readonly/index.mjs';\nexport { ReadonlyOptional } from '../readonly-optional/index.mjs';\nexport { Record } from '../record/index.mjs';\nexport { Recursive } from '../recursive/index.mjs';\nexport { Ref } from '../ref/index.mjs';\nexport { RegExp } from '../regexp/index.mjs';\nexport { Required } from '../required/index.mjs';\nexport { Rest } from '../rest/index.mjs';\nexport { ReturnType } from '../return-type/index.mjs';\nexport { Strict } from '../strict/index.mjs';\nexport { String } from '../string/index.mjs';\nexport { Symbol } from '../symbol/index.mjs';\nexport { TemplateLiteral } from '../template-literal/index.mjs';\nexport { Transform } from '../transform/index.mjs';\nexport { Tuple } from '../tuple/index.mjs';\nexport { Uint8Array } from '../uint8array/index.mjs';\nexport { Undefined } from '../undefined/index.mjs';\nexport { Union } from '../union/index.mjs';\nexport { Unknown } from '../unknown/index.mjs';\nexport { Unsafe } from '../unsafe/index.mjs';\nexport { Void } from '../void/index.mjs';\n"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,eAAe;AACf,qEAAqE","ignoreList":[0]}},
    {"offset": {"line": 6505, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6577, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/type/javascript.mjs"],"sourcesContent":["import { JsonTypeBuilder } from './json.mjs';\nimport { AsyncIterator } from '../async-iterator/index.mjs';\nimport { Awaited } from '../awaited/index.mjs';\nimport { BigInt } from '../bigint/index.mjs';\nimport { Constructor } from '../constructor/index.mjs';\nimport { ConstructorParameters } from '../constructor-parameters/index.mjs';\nimport { Date } from '../date/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { InstanceType } from '../instance-type/index.mjs';\nimport { Iterator } from '../iterator/index.mjs';\nimport { Parameters } from '../parameters/index.mjs';\nimport { Promise } from '../promise/index.mjs';\nimport { RegExp } from '../regexp/index.mjs';\nimport { ReturnType } from '../return-type/index.mjs';\nimport { Symbol } from '../symbol/index.mjs';\nimport { Uint8Array } from '../uint8array/index.mjs';\nimport { Undefined } from '../undefined/index.mjs';\nimport { Void } from '../void/index.mjs';\n/** JavaScript Type Builder with Static Resolution for TypeScript */\nexport class JavaScriptTypeBuilder extends JsonTypeBuilder {\n    /** `[JavaScript]` Creates a AsyncIterator type */\n    AsyncIterator(items, options = {}) {\n        return AsyncIterator(items, options);\n    }\n    /** `[JavaScript]` Constructs a type by recursively unwrapping Promise types */\n    Awaited(schema, options = {}) {\n        return Awaited(schema, options);\n    }\n    /** `[JavaScript]` Creates a BigInt type */\n    BigInt(options = {}) {\n        return BigInt(options);\n    }\n    /** `[JavaScript]` Extracts the ConstructorParameters from the given Constructor type */\n    ConstructorParameters(schema, options = {}) {\n        return ConstructorParameters(schema, options);\n    }\n    /** `[JavaScript]` Creates a Constructor type */\n    Constructor(parameters, returns, options) {\n        return Constructor(parameters, returns, options);\n    }\n    /** `[JavaScript]` Creates a Date type */\n    Date(options = {}) {\n        return Date(options);\n    }\n    /** `[JavaScript]` Creates a Function type */\n    Function(parameters, returns, options) {\n        return FunctionType(parameters, returns, options);\n    }\n    /** `[JavaScript]` Extracts the InstanceType from the given Constructor type */\n    InstanceType(schema, options = {}) {\n        return InstanceType(schema, options);\n    }\n    /** `[JavaScript]` Creates an Iterator type */\n    Iterator(items, options = {}) {\n        return Iterator(items, options);\n    }\n    /** `[JavaScript]` Extracts the Parameters from the given Function type */\n    Parameters(schema, options = {}) {\n        return Parameters(schema, options);\n    }\n    /** `[JavaScript]` Creates a Promise type */\n    Promise(item, options = {}) {\n        return Promise(item, options);\n    }\n    /** `[JavaScript]` Creates a RegExp type */\n    RegExp(unresolved, options = {}) {\n        return RegExp(unresolved, options);\n    }\n    /** `[JavaScript]` Extracts the ReturnType from the given Function type */\n    ReturnType(schema, options = {}) {\n        return ReturnType(schema, options);\n    }\n    /** `[JavaScript]` Creates a Symbol type */\n    Symbol(options) {\n        return Symbol(options);\n    }\n    /** `[JavaScript]` Creates a Undefined type */\n    Undefined(options = {}) {\n        return Undefined(options);\n    }\n    /** `[JavaScript]` Creates a Uint8Array type */\n    Uint8Array(options = {}) {\n        return Uint8Array(options);\n    }\n    /** `[JavaScript]` Creates a Void type */\n    Void(options = {}) {\n        return Void(options);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6686, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6894, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/type/type/index.mjs"],"sourcesContent":["// ------------------------------------------------------------------\n// JsonTypeBuilder\n// ------------------------------------------------------------------\nexport { JsonTypeBuilder } from './json.mjs';\n// ------------------------------------------------------------------\n// JavaScriptTypeBuilder\n// ------------------------------------------------------------------\nimport * as TypeBuilder from './type.mjs';\nimport { JavaScriptTypeBuilder } from './javascript.mjs';\n/** JavaScript Type Builder with Static Resolution for TypeScript */\nconst Type = TypeBuilder;\nexport { JavaScriptTypeBuilder };\nexport { Type };\n"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,kBAAkB;AAClB,qEAAqE;;;;AAErE,qEAAqE;AACrE,wBAAwB;AACxB,qEAAqE;AACrE;;;;AAEA,kEAAkE,GAClE,MAAM,OAAO","ignoreList":[0]}},
    {"offset": {"line": 6910, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6927, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/index.mjs"],"sourcesContent":["// ------------------------------------------------------------------\n// Infrastructure\n// ------------------------------------------------------------------\nexport * from './type/clone/index.mjs';\nexport * from './type/error/index.mjs';\nexport * from './type/guard/index.mjs';\nexport * from './type/helpers/index.mjs';\nexport * from './type/patterns/index.mjs';\nexport * from './type/registry/index.mjs';\nexport * from './type/sets/index.mjs';\nexport * from './type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\nexport * from './type/any/index.mjs';\nexport * from './type/array/index.mjs';\nexport * from './type/async-iterator/index.mjs';\nexport * from './type/awaited/index.mjs';\nexport * from './type/bigint/index.mjs';\nexport * from './type/boolean/index.mjs';\nexport * from './type/composite/index.mjs';\nexport * from './type/const/index.mjs';\nexport * from './type/constructor/index.mjs';\nexport * from './type/constructor-parameters/index.mjs';\nexport * from './type/date/index.mjs';\nexport * from './type/deref/index.mjs';\nexport * from './type/enum/index.mjs';\nexport * from './type/exclude/index.mjs';\nexport * from './type/extends/index.mjs';\nexport * from './type/extract/index.mjs';\nexport * from './type/function/index.mjs';\nexport * from './type/indexed/index.mjs';\nexport * from './type/instance-type/index.mjs';\nexport * from './type/integer/index.mjs';\nexport * from './type/intersect/index.mjs';\nexport * from './type/iterator/index.mjs';\nexport * from './type/intrinsic/index.mjs';\nexport * from './type/keyof/index.mjs';\nexport * from './type/literal/index.mjs';\nexport * from './type/mapped/index.mjs';\nexport * from './type/never/index.mjs';\nexport * from './type/not/index.mjs';\nexport * from './type/null/index.mjs';\nexport * from './type/number/index.mjs';\nexport * from './type/object/index.mjs';\nexport * from './type/omit/index.mjs';\nexport * from './type/optional/index.mjs';\nexport * from './type/parameters/index.mjs';\nexport * from './type/partial/index.mjs';\nexport * from './type/pick/index.mjs';\nexport * from './type/promise/index.mjs';\nexport * from './type/readonly/index.mjs';\nexport * from './type/readonly-optional/index.mjs';\nexport * from './type/record/index.mjs';\nexport * from './type/recursive/index.mjs';\nexport * from './type/ref/index.mjs';\nexport * from './type/regexp/index.mjs';\nexport * from './type/required/index.mjs';\nexport * from './type/rest/index.mjs';\nexport * from './type/return-type/index.mjs';\nexport * from './type/schema/index.mjs';\nexport * from './type/static/index.mjs';\nexport * from './type/strict/index.mjs';\nexport * from './type/string/index.mjs';\nexport * from './type/symbol/index.mjs';\nexport * from './type/template-literal/index.mjs';\nexport * from './type/transform/index.mjs';\nexport * from './type/tuple/index.mjs';\nexport * from './type/uint8array/index.mjs';\nexport * from './type/undefined/index.mjs';\nexport * from './type/union/index.mjs';\nexport * from './type/unknown/index.mjs';\nexport * from './type/unsafe/index.mjs';\nexport * from './type/void/index.mjs';\n// ------------------------------------------------------------------\n// Namespace\n// ------------------------------------------------------------------\nexport * from './type/type/index.mjs';\n"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,iBAAiB;AACjB,qEAAqE","ignoreList":[0]}},
    {"offset": {"line": 7000, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7083, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/guard/guard.mjs"],"sourcesContent":["// --------------------------------------------------------------------------\n// Iterators\n// --------------------------------------------------------------------------\n/** Returns true if this value is an async iterator */\nexport function IsAsyncIterator(value) {\n    return IsObject(value) && Symbol.asyncIterator in value;\n}\n/** Returns true if this value is an iterator */\nexport function IsIterator(value) {\n    return IsObject(value) && Symbol.iterator in value;\n}\n// --------------------------------------------------------------------------\n// Object Instances\n// --------------------------------------------------------------------------\n/** Returns true if this value is not an instance of a class */\nexport function IsStandardObject(value) {\n    return IsObject(value) && (Object.getPrototypeOf(value) === Object.prototype || Object.getPrototypeOf(value) === null);\n}\n/** Returns true if this value is an instance of a class */\nexport function IsInstanceObject(value) {\n    return IsObject(value) && !IsArray(value) && IsFunction(value.constructor) && value.constructor.name !== 'Object';\n}\n// --------------------------------------------------------------------------\n// JavaScript\n// --------------------------------------------------------------------------\n/** Returns true if this value is a Promise */\nexport function IsPromise(value) {\n    return value instanceof Promise;\n}\n/** Returns true if this value is a Date */\nexport function IsDate(value) {\n    return value instanceof Date && Number.isFinite(value.getTime());\n}\n/** Returns true if this value is an instance of Map<K, T> */\nexport function IsMap(value) {\n    return value instanceof globalThis.Map;\n}\n/** Returns true if this value is an instance of Set<T> */\nexport function IsSet(value) {\n    return value instanceof globalThis.Set;\n}\n/** Returns true if this value is RegExp */\nexport function IsRegExp(value) {\n    return value instanceof globalThis.RegExp;\n}\n/** Returns true if this value is a typed array */\nexport function IsTypedArray(value) {\n    return ArrayBuffer.isView(value);\n}\n/** Returns true if the value is a Int8Array */\nexport function IsInt8Array(value) {\n    return value instanceof globalThis.Int8Array;\n}\n/** Returns true if the value is a Uint8Array */\nexport function IsUint8Array(value) {\n    return value instanceof globalThis.Uint8Array;\n}\n/** Returns true if the value is a Uint8ClampedArray */\nexport function IsUint8ClampedArray(value) {\n    return value instanceof globalThis.Uint8ClampedArray;\n}\n/** Returns true if the value is a Int16Array */\nexport function IsInt16Array(value) {\n    return value instanceof globalThis.Int16Array;\n}\n/** Returns true if the value is a Uint16Array */\nexport function IsUint16Array(value) {\n    return value instanceof globalThis.Uint16Array;\n}\n/** Returns true if the value is a Int32Array */\nexport function IsInt32Array(value) {\n    return value instanceof globalThis.Int32Array;\n}\n/** Returns true if the value is a Uint32Array */\nexport function IsUint32Array(value) {\n    return value instanceof globalThis.Uint32Array;\n}\n/** Returns true if the value is a Float32Array */\nexport function IsFloat32Array(value) {\n    return value instanceof globalThis.Float32Array;\n}\n/** Returns true if the value is a Float64Array */\nexport function IsFloat64Array(value) {\n    return value instanceof globalThis.Float64Array;\n}\n/** Returns true if the value is a BigInt64Array */\nexport function IsBigInt64Array(value) {\n    return value instanceof globalThis.BigInt64Array;\n}\n/** Returns true if the value is a BigUint64Array */\nexport function IsBigUint64Array(value) {\n    return value instanceof globalThis.BigUint64Array;\n}\n// --------------------------------------------------------------------------\n// Standard\n// --------------------------------------------------------------------------\n/** Returns true if this value has this property key */\nexport function HasPropertyKey(value, key) {\n    return key in value;\n}\n/** Returns true of this value is an object type */\nexport function IsObject(value) {\n    return value !== null && typeof value === 'object';\n}\n/** Returns true if this value is an array, but not a typed array */\nexport function IsArray(value) {\n    return Array.isArray(value) && !ArrayBuffer.isView(value);\n}\n/** Returns true if this value is an undefined */\nexport function IsUndefined(value) {\n    return value === undefined;\n}\n/** Returns true if this value is an null */\nexport function IsNull(value) {\n    return value === null;\n}\n/** Returns true if this value is an boolean */\nexport function IsBoolean(value) {\n    return typeof value === 'boolean';\n}\n/** Returns true if this value is an number */\nexport function IsNumber(value) {\n    return typeof value === 'number';\n}\n/** Returns true if this value is an integer */\nexport function IsInteger(value) {\n    return Number.isInteger(value);\n}\n/** Returns true if this value is bigint */\nexport function IsBigInt(value) {\n    return typeof value === 'bigint';\n}\n/** Returns true if this value is string */\nexport function IsString(value) {\n    return typeof value === 'string';\n}\n/** Returns true if this value is a function */\nexport function IsFunction(value) {\n    return typeof value === 'function';\n}\n/** Returns true if this value is a symbol */\nexport function IsSymbol(value) {\n    return typeof value === 'symbol';\n}\n/** Returns true if this value is a value type such as number, string, boolean */\nexport function IsValueType(value) {\n    // prettier-ignore\n    return (IsBigInt(value) ||\n        IsBoolean(value) ||\n        IsNull(value) ||\n        IsNumber(value) ||\n        IsString(value) ||\n        IsSymbol(value) ||\n        IsUndefined(value));\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 7233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7248, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/system/policy.mjs"],"sourcesContent":["import { IsObject, IsArray, IsNumber, IsUndefined } from '../value/guard/index.mjs';\nexport var TypeSystemPolicy;\n(function (TypeSystemPolicy) {\n    // ------------------------------------------------------------------\n    // TypeSystemPolicy\n    // ------------------------------------------------------------------\n    /** Shared assertion routines used by the value and errors modules */\n    /** Sets whether TypeBox should assert optional properties using the TypeScript `exactOptionalPropertyTypes` assertion policy. The default is `false` */\n    TypeSystemPolicy.ExactOptionalPropertyTypes = false;\n    /** Sets whether arrays should be treated as a kind of objects. The default is `false` */\n    TypeSystemPolicy.AllowArrayObject = false;\n    /** Sets whether `NaN` or `Infinity` should be treated as valid numeric values. The default is `false` */\n    TypeSystemPolicy.AllowNaN = false;\n    /** Sets whether `null` should validate for void types. The default is `false` */\n    TypeSystemPolicy.AllowNullVoid = false;\n    /** Asserts this value using the ExactOptionalPropertyTypes policy */\n    function IsExactOptionalProperty(value, key) {\n        return TypeSystemPolicy.ExactOptionalPropertyTypes ? key in value : value[key] !== undefined;\n    }\n    TypeSystemPolicy.IsExactOptionalProperty = IsExactOptionalProperty;\n    /** Asserts this value using the AllowArrayObjects policy */\n    function IsObjectLike(value) {\n        const isObject = IsObject(value);\n        return TypeSystemPolicy.AllowArrayObject ? isObject : isObject && !IsArray(value);\n    }\n    TypeSystemPolicy.IsObjectLike = IsObjectLike;\n    /** Asserts this value as a record using the AllowArrayObjects policy */\n    function IsRecordLike(value) {\n        return IsObjectLike(value) && !(value instanceof Date) && !(value instanceof Uint8Array);\n    }\n    TypeSystemPolicy.IsRecordLike = IsRecordLike;\n    /** Asserts this value using the AllowNaN policy */\n    function IsNumberLike(value) {\n        return TypeSystemPolicy.AllowNaN ? IsNumber(value) : Number.isFinite(value);\n    }\n    TypeSystemPolicy.IsNumberLike = IsNumberLike;\n    /** Asserts this value using the AllowVoidNull policy */\n    function IsVoidLike(value) {\n        const isUndefined = IsUndefined(value);\n        return TypeSystemPolicy.AllowNullVoid ? isUndefined || value === null : isUndefined;\n    }\n    TypeSystemPolicy.IsVoidLike = IsVoidLike;\n})(TypeSystemPolicy || (TypeSystemPolicy = {}));\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACO,IAAI;AACX,CAAC,SAAU,gBAAgB;IACvB,qEAAqE;IACrE,mBAAmB;IACnB,qEAAqE;IACrE,mEAAmE,GACnE,sJAAsJ,GACtJ,iBAAiB,0BAA0B,GAAG;IAC9C,uFAAuF,GACvF,iBAAiB,gBAAgB,GAAG;IACpC,uGAAuG,GACvG,iBAAiB,QAAQ,GAAG;IAC5B,+EAA+E,GAC/E,iBAAiB,aAAa,GAAG;IACjC,mEAAmE,GACnE,SAAS,wBAAwB,KAAK,EAAE,GAAG;QACvC,OAAO,iBAAiB,0BAA0B,GAAG,OAAO,QAAQ,KAAK,CAAC,IAAI,KAAK;IACvF;IACA,iBAAiB,uBAAuB,GAAG;IAC3C,0DAA0D,GAC1D,SAAS,aAAa,KAAK;QACvB,MAAM,WAAW,CAAA,GAAA,mLAAA,CAAA,WAAQ,AAAD,EAAE;QAC1B,OAAO,iBAAiB,gBAAgB,GAAG,WAAW,YAAY,CAAC,CAAA,GAAA,mLAAA,CAAA,UAAO,AAAD,EAAE;IAC/E;IACA,iBAAiB,YAAY,GAAG;IAChC,sEAAsE,GACtE,SAAS,aAAa,KAAK;QACvB,OAAO,aAAa,UAAU,CAAC,CAAC,iBAAiB,IAAI,KAAK,CAAC,CAAC,iBAAiB,UAAU;IAC3F;IACA,iBAAiB,YAAY,GAAG;IAChC,iDAAiD,GACjD,SAAS,aAAa,KAAK;QACvB,OAAO,iBAAiB,QAAQ,GAAG,CAAA,GAAA,mLAAA,CAAA,WAAQ,AAAD,EAAE,SAAS,OAAO,QAAQ,CAAC;IACzE;IACA,iBAAiB,YAAY,GAAG;IAChC,sDAAsD,GACtD,SAAS,WAAW,KAAK;QACrB,MAAM,cAAc,CAAA,GAAA,mLAAA,CAAA,cAAW,AAAD,EAAE;QAChC,OAAO,iBAAiB,aAAa,GAAG,eAAe,UAAU,OAAO;IAC5E;IACA,iBAAiB,UAAU,GAAG;AAClC,CAAC,EAAE,oBAAoB,CAAC,mBAAmB,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7286, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7312, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/system/system.mjs"],"sourcesContent":["import { TypeRegistry, FormatRegistry } from '../type/registry/index.mjs';\nimport { Unsafe } from '../type/unsafe/index.mjs';\nimport { Kind } from '../type/symbols/index.mjs';\nimport { TypeBoxError } from '../type/error/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class TypeSystemDuplicateTypeKind extends TypeBoxError {\n    constructor(kind) {\n        super(`Duplicate type kind '${kind}' detected`);\n    }\n}\nexport class TypeSystemDuplicateFormat extends TypeBoxError {\n    constructor(kind) {\n        super(`Duplicate string format '${kind}' detected`);\n    }\n}\n/** Creates user defined types and formats and provides overrides for value checking behaviours */\nexport var TypeSystem;\n(function (TypeSystem) {\n    /** Creates a new type */\n    function Type(kind, check) {\n        if (TypeRegistry.Has(kind))\n            throw new TypeSystemDuplicateTypeKind(kind);\n        TypeRegistry.Set(kind, check);\n        return (options = {}) => Unsafe({ ...options, [Kind]: kind });\n    }\n    TypeSystem.Type = Type;\n    /** Creates a new string format */\n    function Format(format, check) {\n        if (FormatRegistry.Has(format))\n            throw new TypeSystemDuplicateFormat(format);\n        FormatRegistry.Set(format, check);\n        return format;\n    }\n    TypeSystem.Format = Format;\n})(TypeSystem || (TypeSystem = {}));\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AAAA;AAHA;AACA;AACA;AAFA;;;;;AAOO,MAAM,oCAAoC,kLAAA,CAAA,eAAY;IACzD,YAAY,IAAI,CAAE;QACd,KAAK,CAAC,CAAC,qBAAqB,EAAE,KAAK,UAAU,CAAC;IAClD;AACJ;AACO,MAAM,kCAAkC,kLAAA,CAAA,eAAY;IACvD,YAAY,IAAI,CAAE;QACd,KAAK,CAAC,CAAC,yBAAyB,EAAE,KAAK,UAAU,CAAC;IACtD;AACJ;AAEO,IAAI;AACX,CAAC,SAAU,UAAU;IACjB,uBAAuB,GACvB,SAAS,KAAK,IAAI,EAAE,KAAK;QACrB,IAAI,4NAAA,CAAA,eAAY,CAAC,GAAG,CAAC,OACjB,MAAM,IAAI,4BAA4B;QAC1C,4NAAA,CAAA,eAAY,CAAC,GAAG,CAAC,MAAM;QACvB,OAAO,CAAC,UAAU,CAAC,CAAC,GAAK,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,EAAE;gBAAE,GAAG,OAAO;gBAAE,CAAC,sLAAA,CAAA,OAAI,CAAC,EAAE;YAAK;IAC/D;IACA,WAAW,IAAI,GAAG;IAClB,gCAAgC,GAChC,SAAS,OAAO,MAAM,EAAE,KAAK;QACzB,IAAI,gOAAA,CAAA,iBAAc,CAAC,GAAG,CAAC,SACnB,MAAM,IAAI,0BAA0B;QACxC,gOAAA,CAAA,iBAAc,CAAC,GAAG,CAAC,QAAQ;QAC3B,OAAO;IACX;IACA,WAAW,MAAM,GAAG;AACxB,CAAC,EAAE,cAAc,CAAC,aAAa,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 7367, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7383, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/errors/function.mjs"],"sourcesContent":["import { Kind } from '../type/symbols/index.mjs';\nimport { ValueErrorType } from './errors.mjs';\n/** Creates an error message using en-US as the default locale */\nexport function DefaultErrorFunction(error) {\n    switch (error.errorType) {\n        case ValueErrorType.ArrayContains:\n            return 'Expected array to contain at least one matching value';\n        case ValueErrorType.ArrayMaxContains:\n            return `Expected array to contain no more than ${error.schema.maxContains} matching values`;\n        case ValueErrorType.ArrayMinContains:\n            return `Expected array to contain at least ${error.schema.minContains} matching values`;\n        case ValueErrorType.ArrayMaxItems:\n            return `Expected array length to be less or equal to ${error.schema.maxItems}`;\n        case ValueErrorType.ArrayMinItems:\n            return `Expected array length to be greater or equal to ${error.schema.minItems}`;\n        case ValueErrorType.ArrayUniqueItems:\n            return 'Expected array elements to be unique';\n        case ValueErrorType.Array:\n            return 'Expected array';\n        case ValueErrorType.AsyncIterator:\n            return 'Expected AsyncIterator';\n        case ValueErrorType.BigIntExclusiveMaximum:\n            return `Expected bigint to be less than ${error.schema.exclusiveMaximum}`;\n        case ValueErrorType.BigIntExclusiveMinimum:\n            return `Expected bigint to be greater than ${error.schema.exclusiveMinimum}`;\n        case ValueErrorType.BigIntMaximum:\n            return `Expected bigint to be less or equal to ${error.schema.maximum}`;\n        case ValueErrorType.BigIntMinimum:\n            return `Expected bigint to be greater or equal to ${error.schema.minimum}`;\n        case ValueErrorType.BigIntMultipleOf:\n            return `Expected bigint to be a multiple of ${error.schema.multipleOf}`;\n        case ValueErrorType.BigInt:\n            return 'Expected bigint';\n        case ValueErrorType.Boolean:\n            return 'Expected boolean';\n        case ValueErrorType.DateExclusiveMinimumTimestamp:\n            return `Expected Date timestamp to be greater than ${error.schema.exclusiveMinimumTimestamp}`;\n        case ValueErrorType.DateExclusiveMaximumTimestamp:\n            return `Expected Date timestamp to be less than ${error.schema.exclusiveMaximumTimestamp}`;\n        case ValueErrorType.DateMinimumTimestamp:\n            return `Expected Date timestamp to be greater or equal to ${error.schema.minimumTimestamp}`;\n        case ValueErrorType.DateMaximumTimestamp:\n            return `Expected Date timestamp to be less or equal to ${error.schema.maximumTimestamp}`;\n        case ValueErrorType.DateMultipleOfTimestamp:\n            return `Expected Date timestamp to be a multiple of ${error.schema.multipleOfTimestamp}`;\n        case ValueErrorType.Date:\n            return 'Expected Date';\n        case ValueErrorType.Function:\n            return 'Expected function';\n        case ValueErrorType.IntegerExclusiveMaximum:\n            return `Expected integer to be less than ${error.schema.exclusiveMaximum}`;\n        case ValueErrorType.IntegerExclusiveMinimum:\n            return `Expected integer to be greater than ${error.schema.exclusiveMinimum}`;\n        case ValueErrorType.IntegerMaximum:\n            return `Expected integer to be less or equal to ${error.schema.maximum}`;\n        case ValueErrorType.IntegerMinimum:\n            return `Expected integer to be greater or equal to ${error.schema.minimum}`;\n        case ValueErrorType.IntegerMultipleOf:\n            return `Expected integer to be a multiple of ${error.schema.multipleOf}`;\n        case ValueErrorType.Integer:\n            return 'Expected integer';\n        case ValueErrorType.IntersectUnevaluatedProperties:\n            return 'Unexpected property';\n        case ValueErrorType.Intersect:\n            return 'Expected all values to match';\n        case ValueErrorType.Iterator:\n            return 'Expected Iterator';\n        case ValueErrorType.Literal:\n            return `Expected ${typeof error.schema.const === 'string' ? `'${error.schema.const}'` : error.schema.const}`;\n        case ValueErrorType.Never:\n            return 'Never';\n        case ValueErrorType.Not:\n            return 'Value should not match';\n        case ValueErrorType.Null:\n            return 'Expected null';\n        case ValueErrorType.NumberExclusiveMaximum:\n            return `Expected number to be less than ${error.schema.exclusiveMaximum}`;\n        case ValueErrorType.NumberExclusiveMinimum:\n            return `Expected number to be greater than ${error.schema.exclusiveMinimum}`;\n        case ValueErrorType.NumberMaximum:\n            return `Expected number to be less or equal to ${error.schema.maximum}`;\n        case ValueErrorType.NumberMinimum:\n            return `Expected number to be greater or equal to ${error.schema.minimum}`;\n        case ValueErrorType.NumberMultipleOf:\n            return `Expected number to be a multiple of ${error.schema.multipleOf}`;\n        case ValueErrorType.Number:\n            return 'Expected number';\n        case ValueErrorType.Object:\n            return 'Expected object';\n        case ValueErrorType.ObjectAdditionalProperties:\n            return 'Unexpected property';\n        case ValueErrorType.ObjectMaxProperties:\n            return `Expected object to have no more than ${error.schema.maxProperties} properties`;\n        case ValueErrorType.ObjectMinProperties:\n            return `Expected object to have at least ${error.schema.minProperties} properties`;\n        case ValueErrorType.ObjectRequiredProperty:\n            return 'Expected required property';\n        case ValueErrorType.Promise:\n            return 'Expected Promise';\n        case ValueErrorType.RegExp:\n            return 'Expected string to match regular expression';\n        case ValueErrorType.StringFormatUnknown:\n            return `Unknown format '${error.schema.format}'`;\n        case ValueErrorType.StringFormat:\n            return `Expected string to match '${error.schema.format}' format`;\n        case ValueErrorType.StringMaxLength:\n            return `Expected string length less or equal to ${error.schema.maxLength}`;\n        case ValueErrorType.StringMinLength:\n            return `Expected string length greater or equal to ${error.schema.minLength}`;\n        case ValueErrorType.StringPattern:\n            return `Expected string to match '${error.schema.pattern}'`;\n        case ValueErrorType.String:\n            return 'Expected string';\n        case ValueErrorType.Symbol:\n            return 'Expected symbol';\n        case ValueErrorType.TupleLength:\n            return `Expected tuple to have ${error.schema.maxItems || 0} elements`;\n        case ValueErrorType.Tuple:\n            return 'Expected tuple';\n        case ValueErrorType.Uint8ArrayMaxByteLength:\n            return `Expected byte length less or equal to ${error.schema.maxByteLength}`;\n        case ValueErrorType.Uint8ArrayMinByteLength:\n            return `Expected byte length greater or equal to ${error.schema.minByteLength}`;\n        case ValueErrorType.Uint8Array:\n            return 'Expected Uint8Array';\n        case ValueErrorType.Undefined:\n            return 'Expected undefined';\n        case ValueErrorType.Union:\n            return 'Expected union value';\n        case ValueErrorType.Void:\n            return 'Expected void';\n        case ValueErrorType.Kind:\n            return `Expected kind '${error.schema[Kind]}'`;\n        default:\n            return 'Unknown error type';\n    }\n}\n/** Manages error message providers */\nlet errorFunction = DefaultErrorFunction;\n/** Sets the error function used to generate error messages. */\nexport function SetErrorFunction(callback) {\n    errorFunction = callback;\n}\n/** Gets the error function used to generate error messages */\nexport function GetErrorFunction() {\n    return errorFunction;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7534, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7540, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/deref/deref.mjs"],"sourcesContent":["import { TypeBoxError } from '../../type/error/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nexport class TypeDereferenceError extends TypeBoxError {\n    constructor(schema) {\n        super(`Unable to dereference schema with $id '${schema.$id}'`);\n        this.schema = schema;\n    }\n}\nfunction Resolve(schema, references) {\n    const target = references.find((target) => target.$id === schema.$ref);\n    if (target === undefined)\n        throw new TypeDereferenceError(schema);\n    return Deref(target, references);\n}\n/** Dereferences a schema from the references array or throws if not found */\nexport function Deref(schema, references) {\n    // prettier-ignore\n    return (schema[Kind] === 'This' || schema[Kind] === 'Ref')\n        ? Resolve(schema, references)\n        : schema;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AADA;AACA;;;AACO,MAAM,6BAA6B,kLAAA,CAAA,eAAY;IAClD,YAAY,MAAM,CAAE;QAChB,KAAK,CAAC,CAAC,uCAAuC,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG;IAClB;AACJ;AACA,SAAS,QAAQ,MAAM,EAAE,UAAU;IAC/B,MAAM,SAAS,WAAW,IAAI,CAAC,CAAC,SAAW,OAAO,GAAG,KAAK,OAAO,IAAI;IACrE,IAAI,WAAW,WACX,MAAM,IAAI,qBAAqB;IACnC,OAAO,MAAM,QAAQ;AACzB;AAEO,SAAS,MAAM,MAAM,EAAE,UAAU;IACpC,kBAAkB;IAClB,OAAO,AAAC,MAAM,CAAC,sLAAA,CAAA,OAAI,CAAC,KAAK,UAAU,MAAM,CAAC,sLAAA,CAAA,OAAI,CAAC,KAAK,QAC9C,QAAQ,QAAQ,cAChB;AACV","ignoreList":[0]}},
    {"offset": {"line": 7565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7571, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 7573, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7588, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/hash/hash.mjs"],"sourcesContent":["import { IsArray, IsBoolean, IsBigInt, IsDate, IsNull, IsNumber, IsStandardObject, IsString, IsSymbol, IsUint8Array, IsUndefined } from '../guard/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueHashError extends TypeBoxError {\n    constructor(value) {\n        super(`Unable to hash value`);\n        this.value = value;\n    }\n}\n// ------------------------------------------------------------------\n// ByteMarker\n// ------------------------------------------------------------------\nvar ByteMarker;\n(function (ByteMarker) {\n    ByteMarker[ByteMarker[\"Undefined\"] = 0] = \"Undefined\";\n    ByteMarker[ByteMarker[\"Null\"] = 1] = \"Null\";\n    ByteMarker[ByteMarker[\"Boolean\"] = 2] = \"Boolean\";\n    ByteMarker[ByteMarker[\"Number\"] = 3] = \"Number\";\n    ByteMarker[ByteMarker[\"String\"] = 4] = \"String\";\n    ByteMarker[ByteMarker[\"Object\"] = 5] = \"Object\";\n    ByteMarker[ByteMarker[\"Array\"] = 6] = \"Array\";\n    ByteMarker[ByteMarker[\"Date\"] = 7] = \"Date\";\n    ByteMarker[ByteMarker[\"Uint8Array\"] = 8] = \"Uint8Array\";\n    ByteMarker[ByteMarker[\"Symbol\"] = 9] = \"Symbol\";\n    ByteMarker[ByteMarker[\"BigInt\"] = 10] = \"BigInt\";\n})(ByteMarker || (ByteMarker = {}));\n// ------------------------------------------------------------------\n// State\n// ------------------------------------------------------------------\nlet Accumulator = BigInt('14695981039346656037');\nconst [Prime, Size] = [BigInt('1099511628211'), BigInt('2') ** BigInt('64')];\nconst Bytes = Array.from({ length: 256 }).map((_, i) => BigInt(i));\nconst F64 = new Float64Array(1);\nconst F64In = new DataView(F64.buffer);\nconst F64Out = new Uint8Array(F64.buffer);\n// ------------------------------------------------------------------\n// NumberToBytes\n// ------------------------------------------------------------------\nfunction* NumberToBytes(value) {\n    const byteCount = value === 0 ? 1 : Math.ceil(Math.floor(Math.log2(value) + 1) / 8);\n    for (let i = 0; i < byteCount; i++) {\n        yield (value >> (8 * (byteCount - 1 - i))) & 0xff;\n    }\n}\n// ------------------------------------------------------------------\n// Hashing Functions\n// ------------------------------------------------------------------\nfunction ArrayType(value) {\n    FNV1A64(ByteMarker.Array);\n    for (const item of value) {\n        Visit(item);\n    }\n}\nfunction BooleanType(value) {\n    FNV1A64(ByteMarker.Boolean);\n    FNV1A64(value ? 1 : 0);\n}\nfunction BigIntType(value) {\n    FNV1A64(ByteMarker.BigInt);\n    F64In.setBigInt64(0, value);\n    for (const byte of F64Out) {\n        FNV1A64(byte);\n    }\n}\nfunction DateType(value) {\n    FNV1A64(ByteMarker.Date);\n    Visit(value.getTime());\n}\nfunction NullType(value) {\n    FNV1A64(ByteMarker.Null);\n}\nfunction NumberType(value) {\n    FNV1A64(ByteMarker.Number);\n    F64In.setFloat64(0, value);\n    for (const byte of F64Out) {\n        FNV1A64(byte);\n    }\n}\nfunction ObjectType(value) {\n    FNV1A64(ByteMarker.Object);\n    for (const key of globalThis.Object.getOwnPropertyNames(value).sort()) {\n        Visit(key);\n        Visit(value[key]);\n    }\n}\nfunction StringType(value) {\n    FNV1A64(ByteMarker.String);\n    for (let i = 0; i < value.length; i++) {\n        for (const byte of NumberToBytes(value.charCodeAt(i))) {\n            FNV1A64(byte);\n        }\n    }\n}\nfunction SymbolType(value) {\n    FNV1A64(ByteMarker.Symbol);\n    Visit(value.description);\n}\nfunction Uint8ArrayType(value) {\n    FNV1A64(ByteMarker.Uint8Array);\n    for (let i = 0; i < value.length; i++) {\n        FNV1A64(value[i]);\n    }\n}\nfunction UndefinedType(value) {\n    return FNV1A64(ByteMarker.Undefined);\n}\nfunction Visit(value) {\n    if (IsArray(value))\n        return ArrayType(value);\n    if (IsBoolean(value))\n        return BooleanType(value);\n    if (IsBigInt(value))\n        return BigIntType(value);\n    if (IsDate(value))\n        return DateType(value);\n    if (IsNull(value))\n        return NullType(value);\n    if (IsNumber(value))\n        return NumberType(value);\n    if (IsStandardObject(value))\n        return ObjectType(value);\n    if (IsString(value))\n        return StringType(value);\n    if (IsSymbol(value))\n        return SymbolType(value);\n    if (IsUint8Array(value))\n        return Uint8ArrayType(value);\n    if (IsUndefined(value))\n        return UndefinedType(value);\n    throw new ValueHashError(value);\n}\nfunction FNV1A64(byte) {\n    Accumulator = Accumulator ^ Bytes[byte];\n    Accumulator = (Accumulator * Prime) % Size;\n}\n// ------------------------------------------------------------------\n// Hash\n// ------------------------------------------------------------------\n/** Creates a FNV1A-64 non cryptographic hash of the given value */\nexport function Hash(value) {\n    Accumulator = BigInt('14695981039346656037');\n    Visit(value);\n    return Accumulator;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7729, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7735, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 7737, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7752, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/errors/errors.mjs"],"sourcesContent":["import { TypeSystemPolicy } from '../system/index.mjs';\nimport { KeyOfPattern } from '../type/keyof/index.mjs';\nimport { TypeRegistry, FormatRegistry } from '../type/registry/index.mjs';\nimport { ExtendsUndefinedCheck } from '../type/extends/extends-undefined.mjs';\nimport { GetErrorFunction } from './function.mjs';\nimport { TypeBoxError } from '../type/error/index.mjs';\nimport { Deref } from '../value/deref/index.mjs';\nimport { Hash } from '../value/hash/index.mjs';\nimport { Kind } from '../type/symbols/index.mjs';\nimport { Never } from '../type/never/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\n// prettier-ignore\nimport { IsArray, IsUint8Array, IsDate, IsPromise, IsFunction, IsAsyncIterator, IsIterator, IsBoolean, IsNumber, IsBigInt, IsString, IsSymbol, IsInteger, IsNull, IsUndefined } from '../value/guard/index.mjs';\n// ------------------------------------------------------------------\n// ValueErrorType\n// ------------------------------------------------------------------\nexport var ValueErrorType;\n(function (ValueErrorType) {\n    ValueErrorType[ValueErrorType[\"ArrayContains\"] = 0] = \"ArrayContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMaxContains\"] = 1] = \"ArrayMaxContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMaxItems\"] = 2] = \"ArrayMaxItems\";\n    ValueErrorType[ValueErrorType[\"ArrayMinContains\"] = 3] = \"ArrayMinContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMinItems\"] = 4] = \"ArrayMinItems\";\n    ValueErrorType[ValueErrorType[\"ArrayUniqueItems\"] = 5] = \"ArrayUniqueItems\";\n    ValueErrorType[ValueErrorType[\"Array\"] = 6] = \"Array\";\n    ValueErrorType[ValueErrorType[\"AsyncIterator\"] = 7] = \"AsyncIterator\";\n    ValueErrorType[ValueErrorType[\"BigIntExclusiveMaximum\"] = 8] = \"BigIntExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"BigIntExclusiveMinimum\"] = 9] = \"BigIntExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"BigIntMaximum\"] = 10] = \"BigIntMaximum\";\n    ValueErrorType[ValueErrorType[\"BigIntMinimum\"] = 11] = \"BigIntMinimum\";\n    ValueErrorType[ValueErrorType[\"BigIntMultipleOf\"] = 12] = \"BigIntMultipleOf\";\n    ValueErrorType[ValueErrorType[\"BigInt\"] = 13] = \"BigInt\";\n    ValueErrorType[ValueErrorType[\"Boolean\"] = 14] = \"Boolean\";\n    ValueErrorType[ValueErrorType[\"DateExclusiveMaximumTimestamp\"] = 15] = \"DateExclusiveMaximumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateExclusiveMinimumTimestamp\"] = 16] = \"DateExclusiveMinimumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMaximumTimestamp\"] = 17] = \"DateMaximumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMinimumTimestamp\"] = 18] = \"DateMinimumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMultipleOfTimestamp\"] = 19] = \"DateMultipleOfTimestamp\";\n    ValueErrorType[ValueErrorType[\"Date\"] = 20] = \"Date\";\n    ValueErrorType[ValueErrorType[\"Function\"] = 21] = \"Function\";\n    ValueErrorType[ValueErrorType[\"IntegerExclusiveMaximum\"] = 22] = \"IntegerExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"IntegerExclusiveMinimum\"] = 23] = \"IntegerExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"IntegerMaximum\"] = 24] = \"IntegerMaximum\";\n    ValueErrorType[ValueErrorType[\"IntegerMinimum\"] = 25] = \"IntegerMinimum\";\n    ValueErrorType[ValueErrorType[\"IntegerMultipleOf\"] = 26] = \"IntegerMultipleOf\";\n    ValueErrorType[ValueErrorType[\"Integer\"] = 27] = \"Integer\";\n    ValueErrorType[ValueErrorType[\"IntersectUnevaluatedProperties\"] = 28] = \"IntersectUnevaluatedProperties\";\n    ValueErrorType[ValueErrorType[\"Intersect\"] = 29] = \"Intersect\";\n    ValueErrorType[ValueErrorType[\"Iterator\"] = 30] = \"Iterator\";\n    ValueErrorType[ValueErrorType[\"Kind\"] = 31] = \"Kind\";\n    ValueErrorType[ValueErrorType[\"Literal\"] = 32] = \"Literal\";\n    ValueErrorType[ValueErrorType[\"Never\"] = 33] = \"Never\";\n    ValueErrorType[ValueErrorType[\"Not\"] = 34] = \"Not\";\n    ValueErrorType[ValueErrorType[\"Null\"] = 35] = \"Null\";\n    ValueErrorType[ValueErrorType[\"NumberExclusiveMaximum\"] = 36] = \"NumberExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"NumberExclusiveMinimum\"] = 37] = \"NumberExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"NumberMaximum\"] = 38] = \"NumberMaximum\";\n    ValueErrorType[ValueErrorType[\"NumberMinimum\"] = 39] = \"NumberMinimum\";\n    ValueErrorType[ValueErrorType[\"NumberMultipleOf\"] = 40] = \"NumberMultipleOf\";\n    ValueErrorType[ValueErrorType[\"Number\"] = 41] = \"Number\";\n    ValueErrorType[ValueErrorType[\"ObjectAdditionalProperties\"] = 42] = \"ObjectAdditionalProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectMaxProperties\"] = 43] = \"ObjectMaxProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectMinProperties\"] = 44] = \"ObjectMinProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectRequiredProperty\"] = 45] = \"ObjectRequiredProperty\";\n    ValueErrorType[ValueErrorType[\"Object\"] = 46] = \"Object\";\n    ValueErrorType[ValueErrorType[\"Promise\"] = 47] = \"Promise\";\n    ValueErrorType[ValueErrorType[\"RegExp\"] = 48] = \"RegExp\";\n    ValueErrorType[ValueErrorType[\"StringFormatUnknown\"] = 49] = \"StringFormatUnknown\";\n    ValueErrorType[ValueErrorType[\"StringFormat\"] = 50] = \"StringFormat\";\n    ValueErrorType[ValueErrorType[\"StringMaxLength\"] = 51] = \"StringMaxLength\";\n    ValueErrorType[ValueErrorType[\"StringMinLength\"] = 52] = \"StringMinLength\";\n    ValueErrorType[ValueErrorType[\"StringPattern\"] = 53] = \"StringPattern\";\n    ValueErrorType[ValueErrorType[\"String\"] = 54] = \"String\";\n    ValueErrorType[ValueErrorType[\"Symbol\"] = 55] = \"Symbol\";\n    ValueErrorType[ValueErrorType[\"TupleLength\"] = 56] = \"TupleLength\";\n    ValueErrorType[ValueErrorType[\"Tuple\"] = 57] = \"Tuple\";\n    ValueErrorType[ValueErrorType[\"Uint8ArrayMaxByteLength\"] = 58] = \"Uint8ArrayMaxByteLength\";\n    ValueErrorType[ValueErrorType[\"Uint8ArrayMinByteLength\"] = 59] = \"Uint8ArrayMinByteLength\";\n    ValueErrorType[ValueErrorType[\"Uint8Array\"] = 60] = \"Uint8Array\";\n    ValueErrorType[ValueErrorType[\"Undefined\"] = 61] = \"Undefined\";\n    ValueErrorType[ValueErrorType[\"Union\"] = 62] = \"Union\";\n    ValueErrorType[ValueErrorType[\"Void\"] = 63] = \"Void\";\n})(ValueErrorType || (ValueErrorType = {}));\n// ------------------------------------------------------------------\n// ValueErrors\n// ------------------------------------------------------------------\nexport class ValueErrorsUnknownTypeError extends TypeBoxError {\n    constructor(schema) {\n        super('Unknown type');\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// EscapeKey\n// ------------------------------------------------------------------\nfunction EscapeKey(key) {\n    return key.replace(/~/g, '~0').replace(/\\//g, '~1'); // RFC6901 Path\n}\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nfunction IsDefined(value) {\n    return value !== undefined;\n}\n// ------------------------------------------------------------------\n// ValueErrorIterator\n// ------------------------------------------------------------------\nexport class ValueErrorIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator;\n    }\n    /** Returns the first value error or undefined if no errors */\n    First() {\n        const next = this.iterator.next();\n        return next.done ? undefined : next.value;\n    }\n}\n// --------------------------------------------------------------------------\n// Create\n// --------------------------------------------------------------------------\nfunction Create(errorType, schema, path, value) {\n    return { type: errorType, schema, path, value, message: GetErrorFunction()({ errorType, path, schema, value }) };\n}\n// --------------------------------------------------------------------------\n// Types\n// --------------------------------------------------------------------------\nfunction* FromAny(schema, references, path, value) { }\nfunction* FromArray(schema, references, path, value) {\n    if (!IsArray(value)) {\n        return yield Create(ValueErrorType.Array, schema, path, value);\n    }\n    if (IsDefined(schema.minItems) && !(value.length >= schema.minItems)) {\n        yield Create(ValueErrorType.ArrayMinItems, schema, path, value);\n    }\n    if (IsDefined(schema.maxItems) && !(value.length <= schema.maxItems)) {\n        yield Create(ValueErrorType.ArrayMaxItems, schema, path, value);\n    }\n    for (let i = 0; i < value.length; i++) {\n        yield* Visit(schema.items, references, `${path}/${i}`, value[i]);\n    }\n    // prettier-ignore\n    if (schema.uniqueItems === true && !((function () { const set = new Set(); for (const element of value) {\n        const hashed = Hash(element);\n        if (set.has(hashed)) {\n            return false;\n        }\n        else {\n            set.add(hashed);\n        }\n    } return true; })())) {\n        yield Create(ValueErrorType.ArrayUniqueItems, schema, path, value);\n    }\n    // contains\n    if (!(IsDefined(schema.contains) || IsDefined(schema.minContains) || IsDefined(schema.maxContains))) {\n        return;\n    }\n    const containsSchema = IsDefined(schema.contains) ? schema.contains : Never();\n    const containsCount = value.reduce((acc, value, index) => (Visit(containsSchema, references, `${path}${index}`, value).next().done === true ? acc + 1 : acc), 0);\n    if (containsCount === 0) {\n        yield Create(ValueErrorType.ArrayContains, schema, path, value);\n    }\n    if (IsNumber(schema.minContains) && containsCount < schema.minContains) {\n        yield Create(ValueErrorType.ArrayMinContains, schema, path, value);\n    }\n    if (IsNumber(schema.maxContains) && containsCount > schema.maxContains) {\n        yield Create(ValueErrorType.ArrayMaxContains, schema, path, value);\n    }\n}\nfunction* FromAsyncIterator(schema, references, path, value) {\n    if (!IsAsyncIterator(value))\n        yield Create(ValueErrorType.AsyncIterator, schema, path, value);\n}\nfunction* FromBigInt(schema, references, path, value) {\n    if (!IsBigInt(value))\n        return yield Create(ValueErrorType.BigInt, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.BigIntExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.BigIntExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.BigIntMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.BigIntMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {\n        yield Create(ValueErrorType.BigIntMultipleOf, schema, path, value);\n    }\n}\nfunction* FromBoolean(schema, references, path, value) {\n    if (!IsBoolean(value))\n        yield Create(ValueErrorType.Boolean, schema, path, value);\n}\nfunction* FromConstructor(schema, references, path, value) {\n    yield* Visit(schema.returns, references, path, value.prototype);\n}\nfunction* FromDate(schema, references, path, value) {\n    if (!IsDate(value))\n        return yield Create(ValueErrorType.Date, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {\n        yield Create(ValueErrorType.DateExclusiveMaximumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {\n        yield Create(ValueErrorType.DateExclusiveMinimumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {\n        yield Create(ValueErrorType.DateMaximumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {\n        yield Create(ValueErrorType.DateMinimumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {\n        yield Create(ValueErrorType.DateMultipleOfTimestamp, schema, path, value);\n    }\n}\nfunction* FromFunction(schema, references, path, value) {\n    if (!IsFunction(value))\n        yield Create(ValueErrorType.Function, schema, path, value);\n}\nfunction* FromInteger(schema, references, path, value) {\n    if (!IsInteger(value))\n        return yield Create(ValueErrorType.Integer, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.IntegerExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.IntegerExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.IntegerMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.IntegerMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        yield Create(ValueErrorType.IntegerMultipleOf, schema, path, value);\n    }\n}\nfunction* FromIntersect(schema, references, path, value) {\n    for (const inner of schema.allOf) {\n        const next = Visit(inner, references, path, value).next();\n        if (!next.done) {\n            yield Create(ValueErrorType.Intersect, schema, path, value);\n            yield next.value;\n        }\n    }\n    if (schema.unevaluatedProperties === false) {\n        const keyCheck = new RegExp(KeyOfPattern(schema));\n        for (const valueKey of Object.getOwnPropertyNames(value)) {\n            if (!keyCheck.test(valueKey)) {\n                yield Create(ValueErrorType.IntersectUnevaluatedProperties, schema, `${path}/${valueKey}`, value);\n            }\n        }\n    }\n    if (typeof schema.unevaluatedProperties === 'object') {\n        const keyCheck = new RegExp(KeyOfPattern(schema));\n        for (const valueKey of Object.getOwnPropertyNames(value)) {\n            if (!keyCheck.test(valueKey)) {\n                const next = Visit(schema.unevaluatedProperties, references, `${path}/${valueKey}`, value[valueKey]).next();\n                if (!next.done)\n                    yield next.value; // yield interior\n            }\n        }\n    }\n}\nfunction* FromIterator(schema, references, path, value) {\n    if (!IsIterator(value))\n        yield Create(ValueErrorType.Iterator, schema, path, value);\n}\nfunction* FromLiteral(schema, references, path, value) {\n    if (!(value === schema.const))\n        yield Create(ValueErrorType.Literal, schema, path, value);\n}\nfunction* FromNever(schema, references, path, value) {\n    yield Create(ValueErrorType.Never, schema, path, value);\n}\nfunction* FromNot(schema, references, path, value) {\n    if (Visit(schema.not, references, path, value).next().done === true)\n        yield Create(ValueErrorType.Not, schema, path, value);\n}\nfunction* FromNull(schema, references, path, value) {\n    if (!IsNull(value))\n        yield Create(ValueErrorType.Null, schema, path, value);\n}\nfunction* FromNumber(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsNumberLike(value))\n        return yield Create(ValueErrorType.Number, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.NumberExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.NumberExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.NumberMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.NumberMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        yield Create(ValueErrorType.NumberMultipleOf, schema, path, value);\n    }\n}\nfunction* FromObject(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsObjectLike(value))\n        return yield Create(ValueErrorType.Object, schema, path, value);\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);\n    }\n    const requiredKeys = Array.isArray(schema.required) ? schema.required : [];\n    const knownKeys = Object.getOwnPropertyNames(schema.properties);\n    const unknownKeys = Object.getOwnPropertyNames(value);\n    for (const requiredKey of requiredKeys) {\n        if (unknownKeys.includes(requiredKey))\n            continue;\n        yield Create(ValueErrorType.ObjectRequiredProperty, schema.properties[requiredKey], `${path}/${EscapeKey(requiredKey)}`, undefined);\n    }\n    if (schema.additionalProperties === false) {\n        for (const valueKey of unknownKeys) {\n            if (!knownKeys.includes(valueKey)) {\n                yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);\n            }\n        }\n    }\n    if (typeof schema.additionalProperties === 'object') {\n        for (const valueKey of unknownKeys) {\n            if (knownKeys.includes(valueKey))\n                continue;\n            yield* Visit(schema.additionalProperties, references, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);\n        }\n    }\n    for (const knownKey of knownKeys) {\n        const property = schema.properties[knownKey];\n        if (schema.required && schema.required.includes(knownKey)) {\n            yield* Visit(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);\n            if (ExtendsUndefinedCheck(schema) && !(knownKey in value)) {\n                yield Create(ValueErrorType.ObjectRequiredProperty, property, `${path}/${EscapeKey(knownKey)}`, undefined);\n            }\n        }\n        else {\n            if (TypeSystemPolicy.IsExactOptionalProperty(value, knownKey)) {\n                yield* Visit(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);\n            }\n        }\n    }\n}\nfunction* FromPromise(schema, references, path, value) {\n    if (!IsPromise(value))\n        yield Create(ValueErrorType.Promise, schema, path, value);\n}\nfunction* FromRecord(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsRecordLike(value))\n        return yield Create(ValueErrorType.Object, schema, path, value);\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);\n    }\n    const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];\n    const regex = new RegExp(patternKey);\n    for (const [propertyKey, propertyValue] of Object.entries(value)) {\n        if (regex.test(propertyKey))\n            yield* Visit(patternSchema, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n    }\n    if (typeof schema.additionalProperties === 'object') {\n        for (const [propertyKey, propertyValue] of Object.entries(value)) {\n            if (!regex.test(propertyKey))\n                yield* Visit(schema.additionalProperties, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n        }\n    }\n    if (schema.additionalProperties === false) {\n        for (const [propertyKey, propertyValue] of Object.entries(value)) {\n            if (regex.test(propertyKey))\n                continue;\n            return yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n        }\n    }\n}\nfunction* FromRef(schema, references, path, value) {\n    yield* Visit(Deref(schema, references), references, path, value);\n}\nfunction* FromRegExp(schema, references, path, value) {\n    if (!IsString(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    if (IsDefined(schema.minLength) && !(value.length >= schema.minLength)) {\n        yield Create(ValueErrorType.StringMinLength, schema, path, value);\n    }\n    if (IsDefined(schema.maxLength) && !(value.length <= schema.maxLength)) {\n        yield Create(ValueErrorType.StringMaxLength, schema, path, value);\n    }\n    const regex = new RegExp(schema.source, schema.flags);\n    if (!regex.test(value)) {\n        return yield Create(ValueErrorType.RegExp, schema, path, value);\n    }\n}\nfunction* FromString(schema, references, path, value) {\n    if (!IsString(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    if (IsDefined(schema.minLength) && !(value.length >= schema.minLength)) {\n        yield Create(ValueErrorType.StringMinLength, schema, path, value);\n    }\n    if (IsDefined(schema.maxLength) && !(value.length <= schema.maxLength)) {\n        yield Create(ValueErrorType.StringMaxLength, schema, path, value);\n    }\n    if (IsString(schema.pattern)) {\n        const regex = new RegExp(schema.pattern);\n        if (!regex.test(value)) {\n            yield Create(ValueErrorType.StringPattern, schema, path, value);\n        }\n    }\n    if (IsString(schema.format)) {\n        if (!FormatRegistry.Has(schema.format)) {\n            yield Create(ValueErrorType.StringFormatUnknown, schema, path, value);\n        }\n        else {\n            const format = FormatRegistry.Get(schema.format);\n            if (!format(value)) {\n                yield Create(ValueErrorType.StringFormat, schema, path, value);\n            }\n        }\n    }\n}\nfunction* FromSymbol(schema, references, path, value) {\n    if (!IsSymbol(value))\n        yield Create(ValueErrorType.Symbol, schema, path, value);\n}\nfunction* FromTemplateLiteral(schema, references, path, value) {\n    if (!IsString(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    const regex = new RegExp(schema.pattern);\n    if (!regex.test(value)) {\n        yield Create(ValueErrorType.StringPattern, schema, path, value);\n    }\n}\nfunction* FromThis(schema, references, path, value) {\n    yield* Visit(Deref(schema, references), references, path, value);\n}\nfunction* FromTuple(schema, references, path, value) {\n    if (!IsArray(value))\n        return yield Create(ValueErrorType.Tuple, schema, path, value);\n    if (schema.items === undefined && !(value.length === 0)) {\n        return yield Create(ValueErrorType.TupleLength, schema, path, value);\n    }\n    if (!(value.length === schema.maxItems)) {\n        return yield Create(ValueErrorType.TupleLength, schema, path, value);\n    }\n    if (!schema.items) {\n        return;\n    }\n    for (let i = 0; i < schema.items.length; i++) {\n        yield* Visit(schema.items[i], references, `${path}/${i}`, value[i]);\n    }\n}\nfunction* FromUndefined(schema, references, path, value) {\n    if (!IsUndefined(value))\n        yield Create(ValueErrorType.Undefined, schema, path, value);\n}\nfunction* FromUnion(schema, references, path, value) {\n    let count = 0;\n    for (const subschema of schema.anyOf) {\n        const errors = [...Visit(subschema, references, path, value)];\n        if (errors.length === 0)\n            return; // matched\n        count += errors.length;\n    }\n    if (count > 0) {\n        yield Create(ValueErrorType.Union, schema, path, value);\n    }\n}\nfunction* FromUint8Array(schema, references, path, value) {\n    if (!IsUint8Array(value))\n        return yield Create(ValueErrorType.Uint8Array, schema, path, value);\n    if (IsDefined(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {\n        yield Create(ValueErrorType.Uint8ArrayMaxByteLength, schema, path, value);\n    }\n    if (IsDefined(schema.minByteLength) && !(value.length >= schema.minByteLength)) {\n        yield Create(ValueErrorType.Uint8ArrayMinByteLength, schema, path, value);\n    }\n}\nfunction* FromUnknown(schema, references, path, value) { }\nfunction* FromVoid(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsVoidLike(value))\n        yield Create(ValueErrorType.Void, schema, path, value);\n}\nfunction* FromKind(schema, references, path, value) {\n    const check = TypeRegistry.Get(schema[Kind]);\n    if (!check(schema, value))\n        yield Create(ValueErrorType.Kind, schema, path, value);\n}\nfunction* Visit(schema, references, path, value) {\n    const references_ = IsDefined(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Any':\n            return yield* FromAny(schema_, references_, path, value);\n        case 'Array':\n            return yield* FromArray(schema_, references_, path, value);\n        case 'AsyncIterator':\n            return yield* FromAsyncIterator(schema_, references_, path, value);\n        case 'BigInt':\n            return yield* FromBigInt(schema_, references_, path, value);\n        case 'Boolean':\n            return yield* FromBoolean(schema_, references_, path, value);\n        case 'Constructor':\n            return yield* FromConstructor(schema_, references_, path, value);\n        case 'Date':\n            return yield* FromDate(schema_, references_, path, value);\n        case 'Function':\n            return yield* FromFunction(schema_, references_, path, value);\n        case 'Integer':\n            return yield* FromInteger(schema_, references_, path, value);\n        case 'Intersect':\n            return yield* FromIntersect(schema_, references_, path, value);\n        case 'Iterator':\n            return yield* FromIterator(schema_, references_, path, value);\n        case 'Literal':\n            return yield* FromLiteral(schema_, references_, path, value);\n        case 'Never':\n            return yield* FromNever(schema_, references_, path, value);\n        case 'Not':\n            return yield* FromNot(schema_, references_, path, value);\n        case 'Null':\n            return yield* FromNull(schema_, references_, path, value);\n        case 'Number':\n            return yield* FromNumber(schema_, references_, path, value);\n        case 'Object':\n            return yield* FromObject(schema_, references_, path, value);\n        case 'Promise':\n            return yield* FromPromise(schema_, references_, path, value);\n        case 'Record':\n            return yield* FromRecord(schema_, references_, path, value);\n        case 'Ref':\n            return yield* FromRef(schema_, references_, path, value);\n        case 'RegExp':\n            return yield* FromRegExp(schema_, references_, path, value);\n        case 'String':\n            return yield* FromString(schema_, references_, path, value);\n        case 'Symbol':\n            return yield* FromSymbol(schema_, references_, path, value);\n        case 'TemplateLiteral':\n            return yield* FromTemplateLiteral(schema_, references_, path, value);\n        case 'This':\n            return yield* FromThis(schema_, references_, path, value);\n        case 'Tuple':\n            return yield* FromTuple(schema_, references_, path, value);\n        case 'Undefined':\n            return yield* FromUndefined(schema_, references_, path, value);\n        case 'Union':\n            return yield* FromUnion(schema_, references_, path, value);\n        case 'Uint8Array':\n            return yield* FromUint8Array(schema_, references_, path, value);\n        case 'Unknown':\n            return yield* FromUnknown(schema_, references_, path, value);\n        case 'Void':\n            return yield* FromVoid(schema_, references_, path, value);\n        default:\n            if (!TypeRegistry.Has(schema_[Kind]))\n                throw new ValueErrorsUnknownTypeError(schema);\n            return yield* FromKind(schema_, references_, path, value);\n    }\n}\n/** Returns an iterator for each error in this value. */\nexport function Errors(...args) {\n    const iterator = args.length === 3 ? Visit(args[0], args[1], '', args[2]) : Visit(args[0], [], '', args[1]);\n    return new ValueErrorIterator(iterator);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8337, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 8340, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8356, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/check/check.mjs"],"sourcesContent":["import { TypeSystemPolicy } from '../../system/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { Hash } from '../hash/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nimport { KeyOfPattern } from '../../type/keyof/index.mjs';\nimport { ExtendsUndefinedCheck } from '../../type/extends/index.mjs';\nimport { TypeRegistry, FormatRegistry } from '../../type/registry/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { Never } from '../../type/never/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsUint8Array, IsDate, IsPromise, IsFunction, IsAsyncIterator, IsIterator, IsBoolean, IsNumber, IsBigInt, IsString, IsSymbol, IsInteger, IsNull, IsUndefined } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsSchema } from '../../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueCheckUnknownTypeError extends TypeBoxError {\n    constructor(schema) {\n        super(`Unknown type`);\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// TypeGuards\n// ------------------------------------------------------------------\nfunction IsAnyOrUnknown(schema) {\n    return schema[Kind] === 'Any' || schema[Kind] === 'Unknown';\n}\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nfunction IsDefined(value) {\n    return value !== undefined;\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\nfunction FromAny(schema, references, value) {\n    return true;\n}\nfunction FromArray(schema, references, value) {\n    if (!IsArray(value))\n        return false;\n    if (IsDefined(schema.minItems) && !(value.length >= schema.minItems)) {\n        return false;\n    }\n    if (IsDefined(schema.maxItems) && !(value.length <= schema.maxItems)) {\n        return false;\n    }\n    if (!value.every((value) => Visit(schema.items, references, value))) {\n        return false;\n    }\n    // prettier-ignore\n    if (schema.uniqueItems === true && !((function () { const set = new Set(); for (const element of value) {\n        const hashed = Hash(element);\n        if (set.has(hashed)) {\n            return false;\n        }\n        else {\n            set.add(hashed);\n        }\n    } return true; })())) {\n        return false;\n    }\n    // contains\n    if (!(IsDefined(schema.contains) || IsNumber(schema.minContains) || IsNumber(schema.maxContains))) {\n        return true; // exit\n    }\n    const containsSchema = IsDefined(schema.contains) ? schema.contains : Never();\n    const containsCount = value.reduce((acc, value) => (Visit(containsSchema, references, value) ? acc + 1 : acc), 0);\n    if (containsCount === 0) {\n        return false;\n    }\n    if (IsNumber(schema.minContains) && containsCount < schema.minContains) {\n        return false;\n    }\n    if (IsNumber(schema.maxContains) && containsCount > schema.maxContains) {\n        return false;\n    }\n    return true;\n}\nfunction FromAsyncIterator(schema, references, value) {\n    return IsAsyncIterator(value);\n}\nfunction FromBigInt(schema, references, value) {\n    if (!IsBigInt(value))\n        return false;\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        return false;\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        return false;\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {\n        return false;\n    }\n    return true;\n}\nfunction FromBoolean(schema, references, value) {\n    return IsBoolean(value);\n}\nfunction FromConstructor(schema, references, value) {\n    return Visit(schema.returns, references, value.prototype);\n}\nfunction FromDate(schema, references, value) {\n    if (!IsDate(value))\n        return false;\n    if (IsDefined(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {\n        return false;\n    }\n    return true;\n}\nfunction FromFunction(schema, references, value) {\n    return IsFunction(value);\n}\nfunction FromInteger(schema, references, value) {\n    if (!IsInteger(value)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        return false;\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        return false;\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        return false;\n    }\n    return true;\n}\nfunction FromIntersect(schema, references, value) {\n    const check1 = schema.allOf.every((schema) => Visit(schema, references, value));\n    if (schema.unevaluatedProperties === false) {\n        const keyPattern = new RegExp(KeyOfPattern(schema));\n        const check2 = Object.getOwnPropertyNames(value).every((key) => keyPattern.test(key));\n        return check1 && check2;\n    }\n    else if (IsSchema(schema.unevaluatedProperties)) {\n        const keyCheck = new RegExp(KeyOfPattern(schema));\n        const check2 = Object.getOwnPropertyNames(value).every((key) => keyCheck.test(key) || Visit(schema.unevaluatedProperties, references, value[key]));\n        return check1 && check2;\n    }\n    else {\n        return check1;\n    }\n}\nfunction FromIterator(schema, references, value) {\n    return IsIterator(value);\n}\nfunction FromLiteral(schema, references, value) {\n    return value === schema.const;\n}\nfunction FromNever(schema, references, value) {\n    return false;\n}\nfunction FromNot(schema, references, value) {\n    return !Visit(schema.not, references, value);\n}\nfunction FromNull(schema, references, value) {\n    return IsNull(value);\n}\nfunction FromNumber(schema, references, value) {\n    if (!TypeSystemPolicy.IsNumberLike(value))\n        return false;\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        return false;\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        return false;\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        return false;\n    }\n    return true;\n}\nfunction FromObject(schema, references, value) {\n    if (!TypeSystemPolicy.IsObjectLike(value))\n        return false;\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        return false;\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        return false;\n    }\n    const knownKeys = Object.getOwnPropertyNames(schema.properties);\n    for (const knownKey of knownKeys) {\n        const property = schema.properties[knownKey];\n        if (schema.required && schema.required.includes(knownKey)) {\n            if (!Visit(property, references, value[knownKey])) {\n                return false;\n            }\n            if ((ExtendsUndefinedCheck(property) || IsAnyOrUnknown(property)) && !(knownKey in value)) {\n                return false;\n            }\n        }\n        else {\n            if (TypeSystemPolicy.IsExactOptionalProperty(value, knownKey) && !Visit(property, references, value[knownKey])) {\n                return false;\n            }\n        }\n    }\n    if (schema.additionalProperties === false) {\n        const valueKeys = Object.getOwnPropertyNames(value);\n        // optimization: value is valid if schemaKey length matches the valueKey length\n        if (schema.required && schema.required.length === knownKeys.length && valueKeys.length === knownKeys.length) {\n            return true;\n        }\n        else {\n            return valueKeys.every((valueKey) => knownKeys.includes(valueKey));\n        }\n    }\n    else if (typeof schema.additionalProperties === 'object') {\n        const valueKeys = Object.getOwnPropertyNames(value);\n        return valueKeys.every((key) => knownKeys.includes(key) || Visit(schema.additionalProperties, references, value[key]));\n    }\n    else {\n        return true;\n    }\n}\nfunction FromPromise(schema, references, value) {\n    return IsPromise(value);\n}\nfunction FromRecord(schema, references, value) {\n    if (!TypeSystemPolicy.IsRecordLike(value)) {\n        return false;\n    }\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        return false;\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        return false;\n    }\n    const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];\n    const regex = new RegExp(patternKey);\n    // prettier-ignore\n    const check1 = Object.entries(value).every(([key, value]) => {\n        return (regex.test(key)) ? Visit(patternSchema, references, value) : true;\n    });\n    // prettier-ignore\n    const check2 = typeof schema.additionalProperties === 'object' ? Object.entries(value).every(([key, value]) => {\n        return (!regex.test(key)) ? Visit(schema.additionalProperties, references, value) : true;\n    }) : true;\n    const check3 = schema.additionalProperties === false\n        ? Object.getOwnPropertyNames(value).every((key) => {\n            return regex.test(key);\n        })\n        : true;\n    return check1 && check2 && check3;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromRegExp(schema, references, value) {\n    const regex = new RegExp(schema.source, schema.flags);\n    if (IsDefined(schema.minLength)) {\n        if (!(value.length >= schema.minLength))\n            return false;\n    }\n    if (IsDefined(schema.maxLength)) {\n        if (!(value.length <= schema.maxLength))\n            return false;\n    }\n    return regex.test(value);\n}\nfunction FromString(schema, references, value) {\n    if (!IsString(value)) {\n        return false;\n    }\n    if (IsDefined(schema.minLength)) {\n        if (!(value.length >= schema.minLength))\n            return false;\n    }\n    if (IsDefined(schema.maxLength)) {\n        if (!(value.length <= schema.maxLength))\n            return false;\n    }\n    if (IsDefined(schema.pattern)) {\n        const regex = new RegExp(schema.pattern);\n        if (!regex.test(value))\n            return false;\n    }\n    if (IsDefined(schema.format)) {\n        if (!FormatRegistry.Has(schema.format))\n            return false;\n        const func = FormatRegistry.Get(schema.format);\n        return func(value);\n    }\n    return true;\n}\nfunction FromSymbol(schema, references, value) {\n    return IsSymbol(value);\n}\nfunction FromTemplateLiteral(schema, references, value) {\n    return IsString(value) && new RegExp(schema.pattern).test(value);\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    if (!IsArray(value)) {\n        return false;\n    }\n    if (schema.items === undefined && !(value.length === 0)) {\n        return false;\n    }\n    if (!(value.length === schema.maxItems)) {\n        return false;\n    }\n    if (!schema.items) {\n        return true;\n    }\n    for (let i = 0; i < schema.items.length; i++) {\n        if (!Visit(schema.items[i], references, value[i]))\n            return false;\n    }\n    return true;\n}\nfunction FromUndefined(schema, references, value) {\n    return IsUndefined(value);\n}\nfunction FromUnion(schema, references, value) {\n    return schema.anyOf.some((inner) => Visit(inner, references, value));\n}\nfunction FromUint8Array(schema, references, value) {\n    if (!IsUint8Array(value)) {\n        return false;\n    }\n    if (IsDefined(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {\n        return false;\n    }\n    if (IsDefined(schema.minByteLength) && !(value.length >= schema.minByteLength)) {\n        return false;\n    }\n    return true;\n}\nfunction FromUnknown(schema, references, value) {\n    return true;\n}\nfunction FromVoid(schema, references, value) {\n    return TypeSystemPolicy.IsVoidLike(value);\n}\nfunction FromKind(schema, references, value) {\n    if (!TypeRegistry.Has(schema[Kind]))\n        return false;\n    const func = TypeRegistry.Get(schema[Kind]);\n    return func(schema, value);\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsDefined(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Any':\n            return FromAny(schema_, references_, value);\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'AsyncIterator':\n            return FromAsyncIterator(schema_, references_, value);\n        case 'BigInt':\n            return FromBigInt(schema_, references_, value);\n        case 'Boolean':\n            return FromBoolean(schema_, references_, value);\n        case 'Constructor':\n            return FromConstructor(schema_, references_, value);\n        case 'Date':\n            return FromDate(schema_, references_, value);\n        case 'Function':\n            return FromFunction(schema_, references_, value);\n        case 'Integer':\n            return FromInteger(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Iterator':\n            return FromIterator(schema_, references_, value);\n        case 'Literal':\n            return FromLiteral(schema_, references_, value);\n        case 'Never':\n            return FromNever(schema_, references_, value);\n        case 'Not':\n            return FromNot(schema_, references_, value);\n        case 'Null':\n            return FromNull(schema_, references_, value);\n        case 'Number':\n            return FromNumber(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Promise':\n            return FromPromise(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'RegExp':\n            return FromRegExp(schema_, references_, value);\n        case 'String':\n            return FromString(schema_, references_, value);\n        case 'Symbol':\n            return FromSymbol(schema_, references_, value);\n        case 'TemplateLiteral':\n            return FromTemplateLiteral(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Undefined':\n            return FromUndefined(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        case 'Uint8Array':\n            return FromUint8Array(schema_, references_, value);\n        case 'Unknown':\n            return FromUnknown(schema_, references_, value);\n        case 'Void':\n            return FromVoid(schema_, references_, value);\n        default:\n            if (!TypeRegistry.Has(schema_[Kind]))\n                throw new ValueCheckUnknownTypeError(schema_);\n            return FromKind(schema_, references_, value);\n    }\n}\n/** Returns true if the value matches the given type. */\nexport function Check(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8819, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8825, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 8827, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8842, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/clone/clone.mjs"],"sourcesContent":["// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsDate, IsStandardObject, IsTypedArray, IsValueType } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Clonable\n// ------------------------------------------------------------------\nfunction ObjectType(value) {\n    const Acc = {};\n    for (const key of Object.getOwnPropertyNames(value)) {\n        Acc[key] = Clone(value[key]);\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n        Acc[key] = Clone(value[key]);\n    }\n    return Acc;\n}\nfunction ArrayType(value) {\n    return value.map((element) => Clone(element));\n}\nfunction TypedArrayType(value) {\n    return value.slice();\n}\nfunction DateType(value) {\n    return new Date(value.toISOString());\n}\nfunction ValueType(value) {\n    return value;\n}\n// ------------------------------------------------------------------\n// Clone\n// ------------------------------------------------------------------\n/** Returns a clone of the given value */\nexport function Clone(value) {\n    if (IsArray(value))\n        return ArrayType(value);\n    if (IsDate(value))\n        return DateType(value);\n    if (IsStandardObject(value))\n        return ObjectType(value);\n    if (IsTypedArray(value))\n        return TypedArrayType(value);\n    if (IsValueType(value))\n        return ValueType(value);\n    throw new Error('ValueClone: Unable to clone value');\n}\n"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,aAAa;AACb,qEAAqE;;;;AACrE;AAAA;;AACA,qEAAqE;AACrE,WAAW;AACX,qEAAqE;AACrE,SAAS,WAAW,KAAK;IACrB,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,OAAO,OAAO,mBAAmB,CAAC,OAAQ;QACjD,GAAG,CAAC,IAAI,GAAG,MAAM,KAAK,CAAC,IAAI;IAC/B;IACA,KAAK,MAAM,OAAO,OAAO,qBAAqB,CAAC,OAAQ;QACnD,GAAG,CAAC,IAAI,GAAG,MAAM,KAAK,CAAC,IAAI;IAC/B;IACA,OAAO;AACX;AACA,SAAS,UAAU,KAAK;IACpB,OAAO,MAAM,GAAG,CAAC,CAAC,UAAY,MAAM;AACxC;AACA,SAAS,eAAe,KAAK;IACzB,OAAO,MAAM,KAAK;AACtB;AACA,SAAS,SAAS,KAAK;IACnB,OAAO,IAAI,KAAK,MAAM,WAAW;AACrC;AACA,SAAS,UAAU,KAAK;IACpB,OAAO;AACX;AAKO,SAAS,MAAM,KAAK;IACvB,IAAI,CAAA,GAAA,mLAAA,CAAA,UAAO,AAAD,EAAE,QACR,OAAO,UAAU;IACrB,IAAI,CAAA,GAAA,mLAAA,CAAA,SAAM,AAAD,EAAE,QACP,OAAO,SAAS;IACpB,IAAI,CAAA,GAAA,mLAAA,CAAA,mBAAgB,AAAD,EAAE,QACjB,OAAO,WAAW;IACtB,IAAI,CAAA,GAAA,mLAAA,CAAA,eAAY,AAAD,EAAE,QACb,OAAO,eAAe;IAC1B,IAAI,CAAA,GAAA,mLAAA,CAAA,cAAW,AAAD,EAAE,QACZ,OAAO,UAAU;IACrB,MAAM,IAAI,MAAM;AACpB","ignoreList":[0]}},
    {"offset": {"line": 8884, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8890, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 8892, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8907, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/create/create.mjs"],"sourcesContent":["import { HasPropertyKey, IsString } from '../guard/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { TemplateLiteralGenerate, IsTemplateLiteralFinite } from '../../type/template-literal/index.mjs';\nimport { PatternStringExact, PatternNumberExact } from '../../type/patterns/index.mjs';\nimport { TypeRegistry } from '../../type/registry/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueCreateError extends TypeBoxError {\n    constructor(schema, message) {\n        super(message);\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// Default\n// ------------------------------------------------------------------\nfunction FromDefault(value) {\n    return typeof value === 'function' ? value : Clone(value);\n}\n// ------------------------------------------------------------------\n// Create\n// ------------------------------------------------------------------\nfunction FromAny(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return {};\n    }\n}\nfunction FromArray(schema, references) {\n    if (schema.uniqueItems === true && !HasPropertyKey(schema, 'default')) {\n        throw new ValueCreateError(schema, 'Array with the uniqueItems constraint requires a default value');\n    }\n    else if ('contains' in schema && !HasPropertyKey(schema, 'default')) {\n        throw new ValueCreateError(schema, 'Array with the contains constraint requires a default value');\n    }\n    else if ('default' in schema) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minItems !== undefined) {\n        return Array.from({ length: schema.minItems }).map((item) => {\n            return Visit(schema.items, references);\n        });\n    }\n    else {\n        return [];\n    }\n}\nfunction FromAsyncIterator(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return (async function* () { })();\n    }\n}\nfunction FromBigInt(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return BigInt(0);\n    }\n}\nfunction FromBoolean(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return false;\n    }\n}\nfunction FromConstructor(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        const value = Visit(schema.returns, references);\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            return class {\n                constructor() {\n                    for (const [key, val] of Object.entries(value)) {\n                        const self = this;\n                        self[key] = val;\n                    }\n                }\n            };\n        }\n        else {\n            return class {\n            };\n        }\n    }\n}\nfunction FromDate(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minimumTimestamp !== undefined) {\n        return new Date(schema.minimumTimestamp);\n    }\n    else {\n        return new Date();\n    }\n}\nfunction FromFunction(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return () => Visit(schema.returns, references);\n    }\n}\nfunction FromInteger(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minimum !== undefined) {\n        return schema.minimum;\n    }\n    else {\n        return 0;\n    }\n}\nfunction FromIntersect(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        // --------------------------------------------------------------\n        // Note: The best we can do here is attempt to instance each\n        // sub type and apply through object assign. For non-object\n        // sub types, we just escape the assignment and just return\n        // the value. In the latter case, this is typically going to\n        // be a consequence of an illogical intersection.\n        // --------------------------------------------------------------\n        const value = schema.allOf.reduce((acc, schema) => {\n            const next = Visit(schema, references);\n            return typeof next === 'object' ? { ...acc, ...next } : next;\n        }, {});\n        if (!Check(schema, references, value))\n            throw new ValueCreateError(schema, 'Intersect produced invalid value. Consider using a default value.');\n        return value;\n    }\n}\nfunction FromIterator(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return (function* () { })();\n    }\n}\nfunction FromLiteral(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return schema.const;\n    }\n}\nfunction FromNever(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new ValueCreateError(schema, 'Never types cannot be created. Consider using a default value.');\n    }\n}\nfunction FromNot(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new ValueCreateError(schema, 'Not types must have a default value');\n    }\n}\nfunction FromNull(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return null;\n    }\n}\nfunction FromNumber(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minimum !== undefined) {\n        return schema.minimum;\n    }\n    else {\n        return 0;\n    }\n}\nfunction FromObject(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        const required = new Set(schema.required);\n        const Acc = {};\n        for (const [key, subschema] of Object.entries(schema.properties)) {\n            if (!required.has(key))\n                continue;\n            Acc[key] = Visit(subschema, references);\n        }\n        return Acc;\n    }\n}\nfunction FromPromise(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return Promise.resolve(Visit(schema.item, references));\n    }\n}\nfunction FromRecord(schema, references) {\n    const [keyPattern, valueSchema] = Object.entries(schema.patternProperties)[0];\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (!(keyPattern === PatternStringExact || keyPattern === PatternNumberExact)) {\n        const propertyKeys = keyPattern.slice(1, keyPattern.length - 1).split('|');\n        const Acc = {};\n        for (const key of propertyKeys)\n            Acc[key] = Visit(valueSchema, references);\n        return Acc;\n    }\n    else {\n        return {};\n    }\n}\nfunction FromRef(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return Visit(Deref(schema, references), references);\n    }\n}\nfunction FromRegExp(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new ValueCreateError(schema, 'RegExp types cannot be created. Consider using a default value.');\n    }\n}\nfunction FromString(schema, references) {\n    if (schema.pattern !== undefined) {\n        if (!HasPropertyKey(schema, 'default')) {\n            throw new ValueCreateError(schema, 'String types with patterns must specify a default value');\n        }\n        else {\n            return FromDefault(schema.default);\n        }\n    }\n    else if (schema.format !== undefined) {\n        if (!HasPropertyKey(schema, 'default')) {\n            throw new ValueCreateError(schema, 'String types with formats must specify a default value');\n        }\n        else {\n            return FromDefault(schema.default);\n        }\n    }\n    else {\n        if (HasPropertyKey(schema, 'default')) {\n            return FromDefault(schema.default);\n        }\n        else if (schema.minLength !== undefined) {\n            // prettier-ignore\n            return Array.from({ length: schema.minLength }).map(() => ' ').join('');\n        }\n        else {\n            return '';\n        }\n    }\n}\nfunction FromSymbol(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if ('value' in schema) {\n        return Symbol.for(schema.value);\n    }\n    else {\n        return Symbol();\n    }\n}\nfunction FromTemplateLiteral(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    if (!IsTemplateLiteralFinite(schema))\n        throw new ValueCreateError(schema, 'Can only create template literals that produce a finite variants. Consider using a default value.');\n    const generated = TemplateLiteralGenerate(schema);\n    return generated[0];\n}\nfunction FromThis(schema, references) {\n    if (recursiveDepth++ > recursiveMaxDepth)\n        throw new ValueCreateError(schema, 'Cannot create recursive type as it appears possibly infinite. Consider using a default.');\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return Visit(Deref(schema, references), references);\n    }\n}\nfunction FromTuple(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    if (schema.items === undefined) {\n        return [];\n    }\n    else {\n        return Array.from({ length: schema.minItems }).map((_, index) => Visit(schema.items[index], references));\n    }\n}\nfunction FromUndefined(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return undefined;\n    }\n}\nfunction FromUnion(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.anyOf.length === 0) {\n        throw new Error('ValueCreate.Union: Cannot create Union with zero variants');\n    }\n    else {\n        return Visit(schema.anyOf[0], references);\n    }\n}\nfunction FromUint8Array(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minByteLength !== undefined) {\n        return new Uint8Array(schema.minByteLength);\n    }\n    else {\n        return new Uint8Array(0);\n    }\n}\nfunction FromUnknown(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return {};\n    }\n}\nfunction FromVoid(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return void 0;\n    }\n}\nfunction FromKind(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new Error('User defined types must specify a default value');\n    }\n}\nfunction Visit(schema, references) {\n    const references_ = IsString(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Any':\n            return FromAny(schema_, references_);\n        case 'Array':\n            return FromArray(schema_, references_);\n        case 'AsyncIterator':\n            return FromAsyncIterator(schema_, references_);\n        case 'BigInt':\n            return FromBigInt(schema_, references_);\n        case 'Boolean':\n            return FromBoolean(schema_, references_);\n        case 'Constructor':\n            return FromConstructor(schema_, references_);\n        case 'Date':\n            return FromDate(schema_, references_);\n        case 'Function':\n            return FromFunction(schema_, references_);\n        case 'Integer':\n            return FromInteger(schema_, references_);\n        case 'Intersect':\n            return FromIntersect(schema_, references_);\n        case 'Iterator':\n            return FromIterator(schema_, references_);\n        case 'Literal':\n            return FromLiteral(schema_, references_);\n        case 'Never':\n            return FromNever(schema_, references_);\n        case 'Not':\n            return FromNot(schema_, references_);\n        case 'Null':\n            return FromNull(schema_, references_);\n        case 'Number':\n            return FromNumber(schema_, references_);\n        case 'Object':\n            return FromObject(schema_, references_);\n        case 'Promise':\n            return FromPromise(schema_, references_);\n        case 'Record':\n            return FromRecord(schema_, references_);\n        case 'Ref':\n            return FromRef(schema_, references_);\n        case 'RegExp':\n            return FromRegExp(schema_, references_);\n        case 'String':\n            return FromString(schema_, references_);\n        case 'Symbol':\n            return FromSymbol(schema_, references_);\n        case 'TemplateLiteral':\n            return FromTemplateLiteral(schema_, references_);\n        case 'This':\n            return FromThis(schema_, references_);\n        case 'Tuple':\n            return FromTuple(schema_, references_);\n        case 'Undefined':\n            return FromUndefined(schema_, references_);\n        case 'Union':\n            return FromUnion(schema_, references_);\n        case 'Uint8Array':\n            return FromUint8Array(schema_, references_);\n        case 'Unknown':\n            return FromUnknown(schema_, references_);\n        case 'Void':\n            return FromVoid(schema_, references_);\n        default:\n            if (!TypeRegistry.Has(schema_[Kind]))\n                throw new ValueCreateError(schema_, 'Unknown type');\n            return FromKind(schema_, references_);\n    }\n}\n// ------------------------------------------------------------------\n// State\n// ------------------------------------------------------------------\nconst recursiveMaxDepth = 512;\nlet recursiveDepth = 0;\n/** Creates a value from the given schema */\nexport function Create(...args) {\n    recursiveDepth = 0;\n    return args.length === 2 ? Visit(args[0], args[1]) : Visit(args[0], []);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9349, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 9357, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9372, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/cast/cast.mjs"],"sourcesContent":["import { IsStandardObject, IsArray, IsString, IsNumber, IsNull } from '../guard/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nimport { Create } from '../create/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref } from '../deref/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueCastError extends TypeBoxError {\n    constructor(schema, message) {\n        super(message);\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// The following will score a schema against a value. For objects,\n// the score is the tally of points awarded for each property of\n// the value. Property points are (1.0 / propertyCount) to prevent\n// large property counts biasing results. Properties that match\n// literal values are maximally awarded as literals are typically\n// used as union discriminator fields.\n// ------------------------------------------------------------------\nfunction ScoreUnion(schema, references, value) {\n    if (schema[Kind] === 'Object' && typeof value === 'object' && !IsNull(value)) {\n        const object = schema;\n        const keys = Object.getOwnPropertyNames(value);\n        const entries = Object.entries(object.properties);\n        const [point, max] = [1 / entries.length, entries.length];\n        return entries.reduce((acc, [key, schema]) => {\n            const literal = schema[Kind] === 'Literal' && schema.const === value[key] ? max : 0;\n            const checks = Check(schema, references, value[key]) ? point : 0;\n            const exists = keys.includes(key) ? point : 0;\n            return acc + (literal + checks + exists);\n        }, 0);\n    }\n    else {\n        return Check(schema, references, value) ? 1 : 0;\n    }\n}\nfunction SelectUnion(union, references, value) {\n    const schemas = union.anyOf.map((schema) => Deref(schema, references));\n    let [select, best] = [schemas[0], 0];\n    for (const schema of schemas) {\n        const score = ScoreUnion(schema, references, value);\n        if (score > best) {\n            select = schema;\n            best = score;\n        }\n    }\n    return select;\n}\nfunction CastUnion(union, references, value) {\n    if ('default' in union) {\n        return typeof value === 'function' ? union.default : Clone(union.default);\n    }\n    else {\n        const schema = SelectUnion(union, references, value);\n        return Cast(schema, references, value);\n    }\n}\n// ------------------------------------------------------------------\n// Default\n// ------------------------------------------------------------------\nfunction DefaultClone(schema, references, value) {\n    return Check(schema, references, value) ? Clone(value) : Create(schema, references);\n}\nfunction Default(schema, references, value) {\n    return Check(schema, references, value) ? value : Create(schema, references);\n}\n// ------------------------------------------------------------------\n// Cast\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    if (Check(schema, references, value))\n        return Clone(value);\n    const created = IsArray(value) ? Clone(value) : Create(schema, references);\n    const minimum = IsNumber(schema.minItems) && created.length < schema.minItems ? [...created, ...Array.from({ length: schema.minItems - created.length }, () => null)] : created;\n    const maximum = IsNumber(schema.maxItems) && minimum.length > schema.maxItems ? minimum.slice(0, schema.maxItems) : minimum;\n    const casted = maximum.map((value) => Visit(schema.items, references, value));\n    if (schema.uniqueItems !== true)\n        return casted;\n    const unique = [...new Set(casted)];\n    if (!Check(schema, references, unique))\n        throw new ValueCastError(schema, 'Array cast produced invalid data due to uniqueItems constraint');\n    return unique;\n}\nfunction FromConstructor(schema, references, value) {\n    if (Check(schema, references, value))\n        return Create(schema, references);\n    const required = new Set(schema.returns.required || []);\n    const result = function () { };\n    for (const [key, property] of Object.entries(schema.returns.properties)) {\n        if (!required.has(key) && value.prototype[key] === undefined)\n            continue;\n        result.prototype[key] = Visit(property, references, value.prototype[key]);\n    }\n    return result;\n}\nfunction FromIntersect(schema, references, value) {\n    const created = Create(schema, references);\n    const mapped = IsStandardObject(created) && IsStandardObject(value) ? { ...created, ...value } : value;\n    return Check(schema, references, mapped) ? mapped : Create(schema, references);\n}\nfunction FromNever(schema, references, value) {\n    throw new ValueCastError(schema, 'Never types cannot be cast');\n}\nfunction FromObject(schema, references, value) {\n    if (Check(schema, references, value))\n        return value;\n    if (value === null || typeof value !== 'object')\n        return Create(schema, references);\n    const required = new Set(schema.required || []);\n    const result = {};\n    for (const [key, property] of Object.entries(schema.properties)) {\n        if (!required.has(key) && value[key] === undefined)\n            continue;\n        result[key] = Visit(property, references, value[key]);\n    }\n    // additional schema properties\n    if (typeof schema.additionalProperties === 'object') {\n        const propertyNames = Object.getOwnPropertyNames(schema.properties);\n        for (const propertyName of Object.getOwnPropertyNames(value)) {\n            if (propertyNames.includes(propertyName))\n                continue;\n            result[propertyName] = Visit(schema.additionalProperties, references, value[propertyName]);\n        }\n    }\n    return result;\n}\nfunction FromRecord(schema, references, value) {\n    if (Check(schema, references, value))\n        return Clone(value);\n    if (value === null || typeof value !== 'object' || Array.isArray(value) || value instanceof Date)\n        return Create(schema, references);\n    const subschemaPropertyName = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const subschema = schema.patternProperties[subschemaPropertyName];\n    const result = {};\n    for (const [propKey, propValue] of Object.entries(value)) {\n        result[propKey] = Visit(subschema, references, propValue);\n    }\n    return result;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    if (Check(schema, references, value))\n        return Clone(value);\n    if (!IsArray(value))\n        return Create(schema, references);\n    if (schema.items === undefined)\n        return [];\n    return schema.items.map((schema, index) => Visit(schema, references, value[index]));\n}\nfunction FromUnion(schema, references, value) {\n    return Check(schema, references, value) ? Clone(value) : CastUnion(schema, references, value);\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsString(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        // --------------------------------------------------------------\n        // Structural\n        // --------------------------------------------------------------\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'Constructor':\n            return FromConstructor(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Never':\n            return FromNever(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        // --------------------------------------------------------------\n        // DefaultClone\n        // --------------------------------------------------------------\n        case 'Date':\n        case 'Symbol':\n        case 'Uint8Array':\n            return DefaultClone(schema, references, value);\n        // --------------------------------------------------------------\n        // Default\n        // --------------------------------------------------------------\n        default:\n            return Default(schema_, references_, value);\n    }\n}\n/** Casts a value into a given type. The return value will retain as much information of the original value as possible. */\nexport function Cast(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9596, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9602, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 9604, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9619, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/clean/clean.mjs"],"sourcesContent":["import { KeyOfPropertyKeys } from '../../type/keyof/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\n// prettier-ignore\nimport { IsString, IsObject, IsArray, IsUndefined } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\n// prettier-ignore\nimport { IsSchema } from '../../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// IsCheckable\n// ------------------------------------------------------------------\nfunction IsCheckable(schema) {\n    return IsSchema(schema) && schema[Kind] !== 'Unsafe';\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    if (!IsArray(value))\n        return value;\n    return value.map((value) => Visit(schema.items, references, value));\n}\nfunction FromIntersect(schema, references, value) {\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    const intersections = schema.allOf.map((schema) => Visit(schema, references, Clone(value)));\n    const composite = intersections.reduce((acc, value) => (IsObject(value) ? { ...acc, ...value } : value), {});\n    if (!IsObject(value) || !IsObject(composite) || !IsSchema(unevaluatedProperties))\n        return composite;\n    const knownkeys = KeyOfPropertyKeys(schema);\n    for (const key of Object.getOwnPropertyNames(value)) {\n        if (knownkeys.includes(key))\n            continue;\n        if (Check(unevaluatedProperties, references, value[key])) {\n            composite[key] = Visit(unevaluatedProperties, references, value[key]);\n        }\n    }\n    return composite;\n}\nfunction FromObject(schema, references, value) {\n    if (!IsObject(value) || IsArray(value))\n        return value; // Check IsArray for AllowArrayObject configuration\n    const additionalProperties = schema.additionalProperties;\n    for (const key of Object.getOwnPropertyNames(value)) {\n        if (key in schema.properties) {\n            value[key] = Visit(schema.properties[key], references, value[key]);\n            continue;\n        }\n        if (IsSchema(additionalProperties) && Check(additionalProperties, references, value[key])) {\n            value[key] = Visit(additionalProperties, references, value[key]);\n            continue;\n        }\n        delete value[key];\n    }\n    return value;\n}\nfunction FromRecord(schema, references, value) {\n    if (!IsObject(value))\n        return value;\n    const additionalProperties = schema.additionalProperties;\n    const propertyKeys = Object.getOwnPropertyNames(value);\n    const [propertyKey, propertySchema] = Object.entries(schema.patternProperties)[0];\n    const propertyKeyTest = new RegExp(propertyKey);\n    for (const key of propertyKeys) {\n        if (propertyKeyTest.test(key)) {\n            value[key] = Visit(propertySchema, references, value[key]);\n            continue;\n        }\n        if (IsSchema(additionalProperties) && Check(additionalProperties, references, value[key])) {\n            value[key] = Visit(additionalProperties, references, value[key]);\n            continue;\n        }\n        delete value[key];\n    }\n    return value;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    if (!IsArray(value))\n        return value;\n    if (IsUndefined(schema.items))\n        return [];\n    const length = Math.min(value.length, schema.items.length);\n    for (let i = 0; i < length; i++) {\n        value[i] = Visit(schema.items[i], references, value[i]);\n    }\n    // prettier-ignore\n    return value.length > length\n        ? value.slice(0, length)\n        : value;\n}\nfunction FromUnion(schema, references, value) {\n    for (const inner of schema.anyOf) {\n        if (IsCheckable(inner) && Check(inner, references, value)) {\n            return Visit(inner, references, value);\n        }\n    }\n    return value;\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsString(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        default:\n            return value;\n    }\n}\n/** `[Mutable]` Removes excess properties from a value and returns the result. This function does not check the value and returns an unknown type. You should Check the result before use. Clean is a mutable operation. To avoid mutation, Clone the value first. */\nexport function Clean(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,aAAa;AACb,qEAAqE;AACrE,kBAAkB;AAClB;AACA,qEAAqE;AACrE,YAAY;AACZ,qEAAqE;AACrE,kBAAkB;AAClB;AAVA;AAKA;AAPA;AAFA;AACA;AAEA;;;;;;;;AAYA,qEAAqE;AACrE,cAAc;AACd,qEAAqE;AACrE,SAAS,YAAY,MAAM;IACvB,OAAO,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,WAAW,MAAM,CAAC,sLAAA,CAAA,OAAI,CAAC,KAAK;AAChD;AACA,qEAAqE;AACrE,QAAQ;AACR,qEAAqE;AACrE,SAAS,UAAU,MAAM,EAAE,UAAU,EAAE,KAAK;IACxC,IAAI,CAAC,CAAA,GAAA,mLAAA,CAAA,UAAO,AAAD,EAAE,QACT,OAAO;IACX,OAAO,MAAM,GAAG,CAAC,CAAC,QAAU,MAAM,OAAO,KAAK,EAAE,YAAY;AAChE;AACA,SAAS,cAAc,MAAM,EAAE,UAAU,EAAE,KAAK;IAC5C,MAAM,wBAAwB,OAAO,qBAAqB;IAC1D,MAAM,gBAAgB,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,SAAW,MAAM,QAAQ,YAAY,CAAA,GAAA,mLAAA,CAAA,QAAK,AAAD,EAAE;IACnF,MAAM,YAAY,cAAc,MAAM,CAAC,CAAC,KAAK,QAAW,CAAA,GAAA,mLAAA,CAAA,WAAQ,AAAD,EAAE,SAAS;YAAE,GAAG,GAAG;YAAE,GAAG,KAAK;QAAC,IAAI,OAAQ,CAAC;IAC1G,IAAI,CAAC,CAAA,GAAA,mLAAA,CAAA,WAAQ,AAAD,EAAE,UAAU,CAAC,CAAA,GAAA,mLAAA,CAAA,WAAQ,AAAD,EAAE,cAAc,CAAC,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,wBACtD,OAAO;IACX,MAAM,YAAY,CAAA,GAAA,sMAAA,CAAA,oBAAiB,AAAD,EAAE;IACpC,KAAK,MAAM,OAAO,OAAO,mBAAmB,CAAC,OAAQ;QACjD,IAAI,UAAU,QAAQ,CAAC,MACnB;QACJ,IAAI,CAAA,GAAA,mLAAA,CAAA,QAAK,AAAD,EAAE,uBAAuB,YAAY,KAAK,CAAC,IAAI,GAAG;YACtD,SAAS,CAAC,IAAI,GAAG,MAAM,uBAAuB,YAAY,KAAK,CAAC,IAAI;QACxE;IACJ;IACA,OAAO;AACX;AACA,SAAS,WAAW,MAAM,EAAE,UAAU,EAAE,KAAK;IACzC,IAAI,CAAC,CAAA,GAAA,mLAAA,CAAA,WAAQ,AAAD,EAAE,UAAU,CAAA,GAAA,mLAAA,CAAA,UAAO,AAAD,EAAE,QAC5B,OAAO,OAAO,mDAAmD;IACrE,MAAM,uBAAuB,OAAO,oBAAoB;IACxD,KAAK,MAAM,OAAO,OAAO,mBAAmB,CAAC,OAAQ;QACjD,IAAI,OAAO,OAAO,UAAU,EAAE;YAC1B,KAAK,CAAC,IAAI,GAAG,MAAM,OAAO,UAAU,CAAC,IAAI,EAAE,YAAY,KAAK,CAAC,IAAI;YACjE;QACJ;QACA,IAAI,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,yBAAyB,CAAA,GAAA,mLAAA,CAAA,QAAK,AAAD,EAAE,sBAAsB,YAAY,KAAK,CAAC,IAAI,GAAG;YACvF,KAAK,CAAC,IAAI,GAAG,MAAM,sBAAsB,YAAY,KAAK,CAAC,IAAI;YAC/D;QACJ;QACA,OAAO,KAAK,CAAC,IAAI;IACrB;IACA,OAAO;AACX;AACA,SAAS,WAAW,MAAM,EAAE,UAAU,EAAE,KAAK;IACzC,IAAI,CAAC,CAAA,GAAA,mLAAA,CAAA,WAAQ,AAAD,EAAE,QACV,OAAO;IACX,MAAM,uBAAuB,OAAO,oBAAoB;IACxD,MAAM,eAAe,OAAO,mBAAmB,CAAC;IAChD,MAAM,CAAC,aAAa,eAAe,GAAG,OAAO,OAAO,CAAC,OAAO,iBAAiB,CAAC,CAAC,EAAE;IACjF,MAAM,kBAAkB,IAAI,OAAO;IACnC,KAAK,MAAM,OAAO,aAAc;QAC5B,IAAI,gBAAgB,IAAI,CAAC,MAAM;YAC3B,KAAK,CAAC,IAAI,GAAG,MAAM,gBAAgB,YAAY,KAAK,CAAC,IAAI;YACzD;QACJ;QACA,IAAI,CAAA,GAAA,iLAAA,CAAA,WAAQ,AAAD,EAAE,yBAAyB,CAAA,GAAA,mLAAA,CAAA,QAAK,AAAD,EAAE,sBAAsB,YAAY,KAAK,CAAC,IAAI,GAAG;YACvF,KAAK,CAAC,IAAI,GAAG,MAAM,sBAAsB,YAAY,KAAK,CAAC,IAAI;YAC/D;QACJ;QACA,OAAO,KAAK,CAAC,IAAI;IACrB;IACA,OAAO;AACX;AACA,SAAS,QAAQ,MAAM,EAAE,UAAU,EAAE,KAAK;IACtC,OAAO,MAAM,CAAA,GAAA,mLAAA,CAAA,QAAK,AAAD,EAAE,QAAQ,aAAa,YAAY;AACxD;AACA,SAAS,SAAS,MAAM,EAAE,UAAU,EAAE,KAAK;IACvC,OAAO,MAAM,CAAA,GAAA,mLAAA,CAAA,QAAK,AAAD,EAAE,QAAQ,aAAa,YAAY;AACxD;AACA,SAAS,UAAU,MAAM,EAAE,UAAU,EAAE,KAAK;IACxC,IAAI,CAAC,CAAA,GAAA,mLAAA,CAAA,UAAO,AAAD,EAAE,QACT,OAAO;IACX,IAAI,CAAA,GAAA,mLAAA,CAAA,cAAW,AAAD,EAAE,OAAO,KAAK,GACxB,OAAO,EAAE;IACb,MAAM,SAAS,KAAK,GAAG,CAAC,MAAM,MAAM,EAAE,OAAO,KAAK,CAAC,MAAM;IACzD,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK;QAC7B,KAAK,CAAC,EAAE,GAAG,MAAM,OAAO,KAAK,CAAC,EAAE,EAAE,YAAY,KAAK,CAAC,EAAE;IAC1D;IACA,kBAAkB;IAClB,OAAO,MAAM,MAAM,GAAG,SAChB,MAAM,KAAK,CAAC,GAAG,UACf;AACV;AACA,SAAS,UAAU,MAAM,EAAE,UAAU,EAAE,KAAK;IACxC,KAAK,MAAM,SAAS,OAAO,KAAK,CAAE;QAC9B,IAAI,YAAY,UAAU,CAAA,GAAA,mLAAA,CAAA,QAAK,AAAD,EAAE,OAAO,YAAY,QAAQ;YACvD,OAAO,MAAM,OAAO,YAAY;QACpC;IACJ;IACA,OAAO;AACX;AACA,SAAS,MAAM,MAAM,EAAE,UAAU,EAAE,KAAK;IACpC,MAAM,cAAc,CAAA,GAAA,mLAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,GAAG,IAAI;WAAI;QAAY;KAAO,GAAG;IACrE,MAAM,UAAU;IAChB,OAAQ,OAAO,CAAC,sLAAA,CAAA,OAAI,CAAC;QACjB,KAAK;YACD,OAAO,UAAU,SAAS,aAAa;QAC3C,KAAK;YACD,OAAO,cAAc,SAAS,aAAa;QAC/C,KAAK;YACD,OAAO,WAAW,SAAS,aAAa;QAC5C,KAAK;YACD,OAAO,WAAW,SAAS,aAAa;QAC5C,KAAK;YACD,OAAO,QAAQ,SAAS,aAAa;QACzC,KAAK;YACD,OAAO,SAAS,SAAS,aAAa;QAC1C,KAAK;YACD,OAAO,UAAU,SAAS,aAAa;QAC3C,KAAK;YACD,OAAO,UAAU,SAAS,aAAa;QAC3C;YACI,OAAO;IACf;AACJ;AAEO,SAAS,MAAM,GAAG,IAAI;IACzB,OAAO,KAAK,MAAM,KAAK,IAAI,MAAM,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,IAAI,MAAM,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE;AAC5F","ignoreList":[0]}},
    {"offset": {"line": 9769, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9775, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 9777, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9792, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/convert/convert.mjs"],"sourcesContent":["import { Clone } from '../clone/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsObject, IsDate, IsUndefined, IsString, IsNumber, IsBoolean, IsBigInt, IsSymbol, HasPropertyKey } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Conversions\n// ------------------------------------------------------------------\nfunction IsStringNumeric(value) {\n    return IsString(value) && !isNaN(value) && !isNaN(parseFloat(value));\n}\nfunction IsValueToString(value) {\n    return IsBigInt(value) || IsBoolean(value) || IsNumber(value);\n}\nfunction IsValueTrue(value) {\n    return value === true || (IsNumber(value) && value === 1) || (IsBigInt(value) && value === BigInt('1')) || (IsString(value) && (value.toLowerCase() === 'true' || value === '1'));\n}\nfunction IsValueFalse(value) {\n    return value === false || (IsNumber(value) && (value === 0 || Object.is(value, -0))) || (IsBigInt(value) && value === BigInt('0')) || (IsString(value) && (value.toLowerCase() === 'false' || value === '0' || value === '-0'));\n}\nfunction IsTimeStringWithTimeZone(value) {\n    return IsString(value) && /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i.test(value);\n}\nfunction IsTimeStringWithoutTimeZone(value) {\n    return IsString(value) && /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)?$/i.test(value);\n}\nfunction IsDateTimeStringWithTimeZone(value) {\n    return IsString(value) && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\dt(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i.test(value);\n}\nfunction IsDateTimeStringWithoutTimeZone(value) {\n    return IsString(value) && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\dt(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)?$/i.test(value);\n}\nfunction IsDateString(value) {\n    return IsString(value) && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/i.test(value);\n}\n// ------------------------------------------------------------------\n// Convert\n// ------------------------------------------------------------------\nfunction TryConvertLiteralString(value, target) {\n    const conversion = TryConvertString(value);\n    return conversion === target ? conversion : value;\n}\nfunction TryConvertLiteralNumber(value, target) {\n    const conversion = TryConvertNumber(value);\n    return conversion === target ? conversion : value;\n}\nfunction TryConvertLiteralBoolean(value, target) {\n    const conversion = TryConvertBoolean(value);\n    return conversion === target ? conversion : value;\n}\n// prettier-ignore\nfunction TryConvertLiteral(schema, value) {\n    return (IsString(schema.const) ? TryConvertLiteralString(value, schema.const) :\n        IsNumber(schema.const) ? TryConvertLiteralNumber(value, schema.const) :\n            IsBoolean(schema.const) ? TryConvertLiteralBoolean(value, schema.const) :\n                Clone(value));\n}\nfunction TryConvertBoolean(value) {\n    return IsValueTrue(value) ? true : IsValueFalse(value) ? false : value;\n}\nfunction TryConvertBigInt(value) {\n    return IsStringNumeric(value) ? BigInt(parseInt(value)) : IsNumber(value) ? BigInt(value | 0) : IsValueFalse(value) ? BigInt(0) : IsValueTrue(value) ? BigInt(1) : value;\n}\nfunction TryConvertString(value) {\n    return IsValueToString(value) ? value.toString() : IsSymbol(value) && value.description !== undefined ? value.description.toString() : value;\n}\nfunction TryConvertNumber(value) {\n    return IsStringNumeric(value) ? parseFloat(value) : IsValueTrue(value) ? 1 : IsValueFalse(value) ? 0 : value;\n}\nfunction TryConvertInteger(value) {\n    return IsStringNumeric(value) ? parseInt(value) : IsNumber(value) ? value | 0 : IsValueTrue(value) ? 1 : IsValueFalse(value) ? 0 : value;\n}\nfunction TryConvertNull(value) {\n    return IsString(value) && value.toLowerCase() === 'null' ? null : value;\n}\nfunction TryConvertUndefined(value) {\n    return IsString(value) && value === 'undefined' ? undefined : value;\n}\n// ------------------------------------------------------------------\n// note: this function may return an invalid dates for the regex\n// tests above. Invalid dates will however be checked during the\n// casting function and will return a epoch date if invalid.\n// Consider better string parsing for the iso dates in future\n// revisions.\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction TryConvertDate(value) {\n    return (IsDate(value) ? value :\n        IsNumber(value) ? new Date(value) :\n            IsValueTrue(value) ? new Date(1) :\n                IsValueFalse(value) ? new Date(0) :\n                    IsStringNumeric(value) ? new Date(parseInt(value)) :\n                        IsTimeStringWithoutTimeZone(value) ? new Date(`1970-01-01T${value}.000Z`) :\n                            IsTimeStringWithTimeZone(value) ? new Date(`1970-01-01T${value}`) :\n                                IsDateTimeStringWithoutTimeZone(value) ? new Date(`${value}.000Z`) :\n                                    IsDateTimeStringWithTimeZone(value) ? new Date(value) :\n                                        IsDateString(value) ? new Date(`${value}T00:00:00.000Z`) :\n                                            value);\n}\n// ------------------------------------------------------------------\n// Default\n// ------------------------------------------------------------------\nfunction Default(value) {\n    return value;\n}\n// ------------------------------------------------------------------\n// Convert\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    const elements = IsArray(value) ? value : [value];\n    return elements.map((element) => Visit(schema.items, references, element));\n}\nfunction FromBigInt(schema, references, value) {\n    return TryConvertBigInt(value);\n}\nfunction FromBoolean(schema, references, value) {\n    return TryConvertBoolean(value);\n}\nfunction FromDate(schema, references, value) {\n    return TryConvertDate(value);\n}\nfunction FromInteger(schema, references, value) {\n    return TryConvertInteger(value);\n}\nfunction FromIntersect(schema, references, value) {\n    return schema.allOf.reduce((value, schema) => Visit(schema, references, value), value);\n}\nfunction FromLiteral(schema, references, value) {\n    return TryConvertLiteral(schema, value);\n}\nfunction FromNull(schema, references, value) {\n    return TryConvertNull(value);\n}\nfunction FromNumber(schema, references, value) {\n    return TryConvertNumber(value);\n}\n// prettier-ignore\nfunction FromObject(schema, references, value) {\n    const isConvertable = IsObject(value);\n    if (!isConvertable)\n        return value;\n    const result = {};\n    for (const key of Object.keys(value)) {\n        result[key] = HasPropertyKey(schema.properties, key)\n            ? Visit(schema.properties[key], references, value[key])\n            : value[key];\n    }\n    return result;\n}\nfunction FromRecord(schema, references, value) {\n    const isConvertable = IsObject(value);\n    if (!isConvertable)\n        return value;\n    const propertyKey = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const property = schema.patternProperties[propertyKey];\n    const result = {};\n    for (const [propKey, propValue] of Object.entries(value)) {\n        result[propKey] = Visit(property, references, propValue);\n    }\n    return result;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromString(schema, references, value) {\n    return TryConvertString(value);\n}\nfunction FromSymbol(schema, references, value) {\n    return IsString(value) || IsNumber(value) ? Symbol(value) : value;\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\n// prettier-ignore\nfunction FromTuple(schema, references, value) {\n    const isConvertable = IsArray(value) && !IsUndefined(schema.items);\n    if (!isConvertable)\n        return value;\n    return value.map((value, index) => {\n        return (index < schema.items.length)\n            ? Visit(schema.items[index], references, value)\n            : value;\n    });\n}\nfunction FromUndefined(schema, references, value) {\n    return TryConvertUndefined(value);\n}\nfunction FromUnion(schema, references, value) {\n    for (const subschema of schema.anyOf) {\n        const converted = Visit(subschema, references, value);\n        if (!Check(subschema, references, converted))\n            continue;\n        return converted;\n    }\n    return value;\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsString(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'BigInt':\n            return FromBigInt(schema_, references_, value);\n        case 'Boolean':\n            return FromBoolean(schema_, references_, value);\n        case 'Date':\n            return FromDate(schema_, references_, value);\n        case 'Integer':\n            return FromInteger(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Literal':\n            return FromLiteral(schema_, references_, value);\n        case 'Null':\n            return FromNull(schema_, references_, value);\n        case 'Number':\n            return FromNumber(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'String':\n            return FromString(schema_, references_, value);\n        case 'Symbol':\n            return FromSymbol(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Undefined':\n            return FromUndefined(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        default:\n            return Default(value);\n    }\n}\n/** Converts any type mismatched values to their target type if a reasonable conversion is possible. */\n// prettier-ignore\nexport function Convert(...args) {\n    return args.length === 3\n        ? Visit(args[0], args[1], args[2])\n        : Visit(args[0], [], args[1]);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10035, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10041, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 10043, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10058, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/default/default.mjs"],"sourcesContent":["import { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsString, IsObject, IsArray, IsUndefined } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsSchema } from '../../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// ValueOrDefault\n// ------------------------------------------------------------------\nfunction ValueOrDefault(schema, value) {\n    return value === undefined && 'default' in schema ? Clone(schema.default) : value;\n}\n// ------------------------------------------------------------------\n// IsCheckable\n// ------------------------------------------------------------------\nfunction IsCheckable(schema) {\n    return IsSchema(schema) && schema[Kind] !== 'Unsafe';\n}\n// ------------------------------------------------------------------\n// IsDefaultSchema\n// ------------------------------------------------------------------\nfunction IsDefaultSchema(value) {\n    return IsSchema(value) && 'default' in value;\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    if (!IsArray(defaulted))\n        return defaulted;\n    for (let i = 0; i < defaulted.length; i++) {\n        defaulted[i] = Visit(schema.items, references, defaulted[i]);\n    }\n    return defaulted;\n}\nfunction FromIntersect(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    return schema.allOf.reduce((acc, schema) => {\n        const next = Visit(schema, references, defaulted);\n        return IsObject(next) ? { ...acc, ...next } : next;\n    }, {});\n}\nfunction FromObject(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    if (!IsObject(defaulted))\n        return defaulted;\n    const additionalPropertiesSchema = schema.additionalProperties;\n    const knownPropertyKeys = Object.getOwnPropertyNames(schema.properties);\n    // properties\n    for (const key of knownPropertyKeys) {\n        if (!IsDefaultSchema(schema.properties[key]))\n            continue;\n        defaulted[key] = Visit(schema.properties[key], references, defaulted[key]);\n    }\n    // return if not additional properties\n    if (!IsDefaultSchema(additionalPropertiesSchema))\n        return defaulted;\n    // additional properties\n    for (const key of Object.getOwnPropertyNames(defaulted)) {\n        if (knownPropertyKeys.includes(key))\n            continue;\n        defaulted[key] = Visit(additionalPropertiesSchema, references, defaulted[key]);\n    }\n    return defaulted;\n}\nfunction FromRecord(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    if (!IsObject(defaulted))\n        return defaulted;\n    const additionalPropertiesSchema = schema.additionalProperties;\n    const [propertyKeyPattern, propertySchema] = Object.entries(schema.patternProperties)[0];\n    const knownPropertyKey = new RegExp(propertyKeyPattern);\n    // properties\n    for (const key of Object.getOwnPropertyNames(defaulted)) {\n        if (!(knownPropertyKey.test(key) && IsDefaultSchema(propertySchema)))\n            continue;\n        defaulted[key] = Visit(propertySchema, references, defaulted[key]);\n    }\n    // return if not additional properties\n    if (!IsDefaultSchema(additionalPropertiesSchema))\n        return defaulted;\n    // additional properties\n    for (const key of Object.getOwnPropertyNames(defaulted)) {\n        if (knownPropertyKey.test(key))\n            continue;\n        defaulted[key] = Visit(additionalPropertiesSchema, references, defaulted[key]);\n    }\n    return defaulted;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, ValueOrDefault(schema, value));\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    if (!IsArray(defaulted) || IsUndefined(schema.items))\n        return defaulted;\n    const [items, max] = [schema.items, Math.max(schema.items.length, defaulted.length)];\n    for (let i = 0; i < max; i++) {\n        if (i < items.length)\n            defaulted[i] = Visit(items[i], references, defaulted[i]);\n    }\n    return defaulted;\n}\nfunction FromUnion(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    for (const inner of schema.anyOf) {\n        const result = Visit(inner, references, defaulted);\n        if (IsCheckable(inner) && Check(inner, result)) {\n            return result;\n        }\n    }\n    return defaulted;\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsString(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        default:\n            return ValueOrDefault(schema_, value);\n    }\n}\n/** `[Mutable]` Generates missing properties on a value using default schema annotations if available. This function does not check the value and returns an unknown type. You should Check the result before use. Default is a mutable operation. To avoid mutation, Clone the value first. */\nexport function Default(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10220, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10226, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 10228, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10243, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/pointer/pointer.mjs"],"sourcesContent":["import { TypeBoxError } from '../../type/error/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValuePointerRootSetError extends TypeBoxError {\n    constructor(value, path, update) {\n        super('Cannot set root value');\n        this.value = value;\n        this.path = path;\n        this.update = update;\n    }\n}\nexport class ValuePointerRootDeleteError extends TypeBoxError {\n    constructor(value, path) {\n        super('Cannot delete root value');\n        this.value = value;\n        this.path = path;\n    }\n}\n// ------------------------------------------------------------------\n// ValuePointer\n// ------------------------------------------------------------------\n/** Provides functionality to update values through RFC6901 string pointers */\n// prettier-ignore\nfunction Escape(component) {\n    return component.indexOf('~') === -1 ? component : component.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n/** Formats the given pointer into navigable key components */\n// prettier-ignore\nexport function* Format(pointer) {\n    if (pointer === '')\n        return;\n    let [start, end] = [0, 0];\n    for (let i = 0; i < pointer.length; i++) {\n        const char = pointer.charAt(i);\n        if (char === '/') {\n            if (i === 0) {\n                start = i + 1;\n            }\n            else {\n                end = i;\n                yield Escape(pointer.slice(start, end));\n                start = i + 1;\n            }\n        }\n        else {\n            end = i;\n        }\n    }\n    yield Escape(pointer.slice(start));\n}\n/** Sets the value at the given pointer. If the value at the pointer does not exist it is created */\n// prettier-ignore\nexport function Set(value, pointer, update) {\n    if (pointer === '')\n        throw new ValuePointerRootSetError(value, pointer, update);\n    let [owner, next, key] = [null, value, ''];\n    for (const component of Format(pointer)) {\n        if (next[component] === undefined)\n            next[component] = {};\n        owner = next;\n        next = next[component];\n        key = component;\n    }\n    owner[key] = update;\n}\n/** Deletes a value at the given pointer */\n// prettier-ignore\nexport function Delete(value, pointer) {\n    if (pointer === '')\n        throw new ValuePointerRootDeleteError(value, pointer);\n    let [owner, next, key] = [null, value, ''];\n    for (const component of Format(pointer)) {\n        if (next[component] === undefined || next[component] === null)\n            return;\n        owner = next;\n        next = next[component];\n        key = component;\n    }\n    if (Array.isArray(owner)) {\n        const index = parseInt(key);\n        owner.splice(index, 1);\n    }\n    else {\n        delete owner[key];\n    }\n}\n/** Returns true if a value exists at the given pointer */\n// prettier-ignore\nexport function Has(value, pointer) {\n    if (pointer === '')\n        return true;\n    let [owner, next, key] = [null, value, ''];\n    for (const component of Format(pointer)) {\n        if (next[component] === undefined)\n            return false;\n        owner = next;\n        next = next[component];\n        key = component;\n    }\n    return Object.getOwnPropertyNames(owner).includes(key);\n}\n/** Gets the value at the given pointer */\n// prettier-ignore\nexport function Get(value, pointer) {\n    if (pointer === '')\n        return value;\n    let current = value;\n    for (const component of Format(pointer)) {\n        if (current[component] === undefined)\n            return undefined;\n        current = current[component];\n    }\n    return current;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 10366, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10391, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/delta/delta.mjs"],"sourcesContent":["import { IsStandardObject, IsArray, IsTypedArray, IsValueType, IsSymbol, IsUndefined } from '../guard/index.mjs';\nimport { ValuePointer } from '../pointer/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { Literal } from '../../type/literal/index.mjs';\nimport { Object } from '../../type/object/index.mjs';\nimport { String } from '../../type/string/index.mjs';\nimport { Unknown } from '../../type/unknown/index.mjs';\nimport { Union } from '../../type/union/index.mjs';\nexport const Insert = Object({\n    type: Literal('insert'),\n    path: String(),\n    value: Unknown(),\n});\nexport const Update = Object({\n    type: Literal('update'),\n    path: String(),\n    value: Unknown(),\n});\nexport const Delete = Object({\n    type: Literal('delete'),\n    path: String(),\n});\nexport const Edit = Union([Insert, Update, Delete]);\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueDeltaError extends TypeBoxError {\n    constructor(value, message) {\n        super(message);\n        this.value = value;\n    }\n}\nexport class ValueDeltaSymbolError extends ValueDeltaError {\n    constructor(value) {\n        super(value, 'Cannot diff objects with symbol keys');\n        this.value = value;\n    }\n}\n// ------------------------------------------------------------------\n// Command Factory\n// ------------------------------------------------------------------\nfunction CreateUpdate(path, value) {\n    return { type: 'update', path, value };\n}\nfunction CreateInsert(path, value) {\n    return { type: 'insert', path, value };\n}\nfunction CreateDelete(path) {\n    return { type: 'delete', path };\n}\n// ------------------------------------------------------------------\n// Diffing Generators\n// ------------------------------------------------------------------\nfunction* ObjectType(path, current, next) {\n    if (!IsStandardObject(next))\n        return yield CreateUpdate(path, next);\n    const currentKeys = [...globalThis.Object.keys(current), ...globalThis.Object.getOwnPropertySymbols(current)];\n    const nextKeys = [...globalThis.Object.keys(next), ...globalThis.Object.getOwnPropertySymbols(next)];\n    for (const key of currentKeys) {\n        if (IsSymbol(key))\n            throw new ValueDeltaSymbolError(key);\n        if (IsUndefined(next[key]) && nextKeys.includes(key))\n            yield CreateUpdate(`${path}/${globalThis.String(key)}`, undefined);\n    }\n    for (const key of nextKeys) {\n        if (IsUndefined(current[key]) || IsUndefined(next[key]))\n            continue;\n        if (IsSymbol(key))\n            throw new ValueDeltaSymbolError(key);\n        yield* Visit(`${path}/${globalThis.String(key)}`, current[key], next[key]);\n    }\n    for (const key of nextKeys) {\n        if (IsSymbol(key))\n            throw new ValueDeltaSymbolError(key);\n        if (IsUndefined(current[key]))\n            yield CreateInsert(`${path}/${globalThis.String(key)}`, next[key]);\n    }\n    for (const key of currentKeys.reverse()) {\n        if (IsSymbol(key))\n            throw new ValueDeltaSymbolError(key);\n        if (IsUndefined(next[key]) && !nextKeys.includes(key))\n            yield CreateDelete(`${path}/${globalThis.String(key)}`);\n    }\n}\nfunction* ArrayType(path, current, next) {\n    if (!IsArray(next))\n        return yield CreateUpdate(path, next);\n    for (let i = 0; i < Math.min(current.length, next.length); i++) {\n        yield* Visit(`${path}/${i}`, current[i], next[i]);\n    }\n    for (let i = 0; i < next.length; i++) {\n        if (i < current.length)\n            continue;\n        yield CreateInsert(`${path}/${i}`, next[i]);\n    }\n    for (let i = current.length - 1; i >= 0; i--) {\n        if (i < next.length)\n            continue;\n        yield CreateDelete(`${path}/${i}`);\n    }\n}\nfunction* TypedArrayType(path, current, next) {\n    if (!IsTypedArray(next) || current.length !== next.length || globalThis.Object.getPrototypeOf(current).constructor.name !== globalThis.Object.getPrototypeOf(next).constructor.name)\n        return yield CreateUpdate(path, next);\n    for (let i = 0; i < Math.min(current.length, next.length); i++) {\n        yield* Visit(`${path}/${i}`, current[i], next[i]);\n    }\n}\nfunction* ValueType(path, current, next) {\n    if (current === next)\n        return;\n    yield CreateUpdate(path, next);\n}\nfunction* Visit(path, current, next) {\n    if (IsStandardObject(current))\n        return yield* ObjectType(path, current, next);\n    if (IsArray(current))\n        return yield* ArrayType(path, current, next);\n    if (IsTypedArray(current))\n        return yield* TypedArrayType(path, current, next);\n    if (IsValueType(current))\n        return yield* ValueType(path, current, next);\n    throw new ValueDeltaError(current, 'Unable to create diff edits for unknown value');\n}\n// ------------------------------------------------------------------\n// Diff\n// ------------------------------------------------------------------\nexport function Diff(current, next) {\n    return [...Visit('', current, next)];\n}\n// ------------------------------------------------------------------\n// Patch\n// ------------------------------------------------------------------\nfunction IsRootUpdate(edits) {\n    return edits.length > 0 && edits[0].path === '' && edits[0].type === 'update';\n}\nfunction IsIdentity(edits) {\n    return edits.length === 0;\n}\nexport function Patch(current, edits) {\n    if (IsRootUpdate(edits)) {\n        return Clone(edits[0].value);\n    }\n    if (IsIdentity(edits)) {\n        return Clone(current);\n    }\n    const clone = Clone(current);\n    for (const edit of edits) {\n        switch (edit.type) {\n            case 'insert': {\n                ValuePointer.Set(clone, edit.path, edit.value);\n                break;\n            }\n            case 'update': {\n                ValuePointer.Set(clone, edit.path, edit.value);\n                break;\n            }\n            case 'delete': {\n                ValuePointer.Delete(clone, edit.path);\n                break;\n            }\n        }\n    }\n    return clone;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10587, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10593, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 10595, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10610, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/equal/equal.mjs"],"sourcesContent":["import { IsStandardObject, IsDate, IsArray, IsTypedArray, IsValueType } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Equality Checks\n// ------------------------------------------------------------------\nfunction ObjectType(left, right) {\n    if (!IsStandardObject(right))\n        return false;\n    const leftKeys = [...Object.keys(left), ...Object.getOwnPropertySymbols(left)];\n    const rightKeys = [...Object.keys(right), ...Object.getOwnPropertySymbols(right)];\n    if (leftKeys.length !== rightKeys.length)\n        return false;\n    return leftKeys.every((key) => Equal(left[key], right[key]));\n}\nfunction DateType(left, right) {\n    return IsDate(right) && left.getTime() === right.getTime();\n}\nfunction ArrayType(left, right) {\n    if (!IsArray(right) || left.length !== right.length)\n        return false;\n    return left.every((value, index) => Equal(value, right[index]));\n}\nfunction TypedArrayType(left, right) {\n    if (!IsTypedArray(right) || left.length !== right.length || Object.getPrototypeOf(left).constructor.name !== Object.getPrototypeOf(right).constructor.name)\n        return false;\n    return left.every((value, index) => Equal(value, right[index]));\n}\nfunction ValueType(left, right) {\n    return left === right;\n}\n// ------------------------------------------------------------------\n// Equal\n// ------------------------------------------------------------------\n/** Returns true if the left value deep-equals the right */\nexport function Equal(left, right) {\n    if (IsStandardObject(left))\n        return ObjectType(left, right);\n    if (IsDate(left))\n        return DateType(left, right);\n    if (IsTypedArray(left))\n        return TypedArrayType(left, right);\n    if (IsArray(left))\n        return ArrayType(left, right);\n    if (IsValueType(left))\n        return ValueType(left, right);\n    throw new Error('ValueEquals: Unable to compare value');\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACA,qEAAqE;AACrE,kBAAkB;AAClB,qEAAqE;AACrE,SAAS,WAAW,IAAI,EAAE,KAAK;IAC3B,IAAI,CAAC,CAAA,GAAA,mLAAA,CAAA,mBAAgB,AAAD,EAAE,QAClB,OAAO;IACX,MAAM,WAAW;WAAI,OAAO,IAAI,CAAC;WAAU,OAAO,qBAAqB,CAAC;KAAM;IAC9E,MAAM,YAAY;WAAI,OAAO,IAAI,CAAC;WAAW,OAAO,qBAAqB,CAAC;KAAO;IACjF,IAAI,SAAS,MAAM,KAAK,UAAU,MAAM,EACpC,OAAO;IACX,OAAO,SAAS,KAAK,CAAC,CAAC,MAAQ,MAAM,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI;AAC9D;AACA,SAAS,SAAS,IAAI,EAAE,KAAK;IACzB,OAAO,CAAA,GAAA,mLAAA,CAAA,SAAM,AAAD,EAAE,UAAU,KAAK,OAAO,OAAO,MAAM,OAAO;AAC5D;AACA,SAAS,UAAU,IAAI,EAAE,KAAK;IAC1B,IAAI,CAAC,CAAA,GAAA,mLAAA,CAAA,UAAO,AAAD,EAAE,UAAU,KAAK,MAAM,KAAK,MAAM,MAAM,EAC/C,OAAO;IACX,OAAO,KAAK,KAAK,CAAC,CAAC,OAAO,QAAU,MAAM,OAAO,KAAK,CAAC,MAAM;AACjE;AACA,SAAS,eAAe,IAAI,EAAE,KAAK;IAC/B,IAAI,CAAC,CAAA,GAAA,mLAAA,CAAA,eAAY,AAAD,EAAE,UAAU,KAAK,MAAM,KAAK,MAAM,MAAM,IAAI,OAAO,cAAc,CAAC,MAAM,WAAW,CAAC,IAAI,KAAK,OAAO,cAAc,CAAC,OAAO,WAAW,CAAC,IAAI,EACtJ,OAAO;IACX,OAAO,KAAK,KAAK,CAAC,CAAC,OAAO,QAAU,MAAM,OAAO,KAAK,CAAC,MAAM;AACjE;AACA,SAAS,UAAU,IAAI,EAAE,KAAK;IAC1B,OAAO,SAAS;AACpB;AAKO,SAAS,MAAM,IAAI,EAAE,KAAK;IAC7B,IAAI,CAAA,GAAA,mLAAA,CAAA,mBAAgB,AAAD,EAAE,OACjB,OAAO,WAAW,MAAM;IAC5B,IAAI,CAAA,GAAA,mLAAA,CAAA,SAAM,AAAD,EAAE,OACP,OAAO,SAAS,MAAM;IAC1B,IAAI,CAAA,GAAA,mLAAA,CAAA,eAAY,AAAD,EAAE,OACb,OAAO,eAAe,MAAM;IAChC,IAAI,CAAA,GAAA,mLAAA,CAAA,UAAO,AAAD,EAAE,OACR,OAAO,UAAU,MAAM;IAC3B,IAAI,CAAA,GAAA,mLAAA,CAAA,cAAW,AAAD,EAAE,OACZ,OAAO,UAAU,MAAM;IAC3B,MAAM,IAAI,MAAM;AACpB","ignoreList":[0]}},
    {"offset": {"line": 10654, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10660, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 10662, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10677, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/mutate/mutate.mjs"],"sourcesContent":["import { IsStandardObject, IsArray, IsTypedArray, IsValueType } from '../guard/index.mjs';\nimport { ValuePointer } from '../pointer/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueMutateError extends TypeBoxError {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction ObjectType(root, path, current, next) {\n    if (!IsStandardObject(current)) {\n        ValuePointer.Set(root, path, Clone(next));\n    }\n    else {\n        const currentKeys = Object.getOwnPropertyNames(current);\n        const nextKeys = Object.getOwnPropertyNames(next);\n        for (const currentKey of currentKeys) {\n            if (!nextKeys.includes(currentKey)) {\n                delete current[currentKey];\n            }\n        }\n        for (const nextKey of nextKeys) {\n            if (!currentKeys.includes(nextKey)) {\n                current[nextKey] = null;\n            }\n        }\n        for (const nextKey of nextKeys) {\n            Visit(root, `${path}/${nextKey}`, current[nextKey], next[nextKey]);\n        }\n    }\n}\nfunction ArrayType(root, path, current, next) {\n    if (!IsArray(current)) {\n        ValuePointer.Set(root, path, Clone(next));\n    }\n    else {\n        for (let index = 0; index < next.length; index++) {\n            Visit(root, `${path}/${index}`, current[index], next[index]);\n        }\n        current.splice(next.length);\n    }\n}\nfunction TypedArrayType(root, path, current, next) {\n    if (IsTypedArray(current) && current.length === next.length) {\n        for (let i = 0; i < current.length; i++) {\n            current[i] = next[i];\n        }\n    }\n    else {\n        ValuePointer.Set(root, path, Clone(next));\n    }\n}\nfunction ValueType(root, path, current, next) {\n    if (current === next)\n        return;\n    ValuePointer.Set(root, path, next);\n}\nfunction Visit(root, path, current, next) {\n    if (IsArray(next))\n        return ArrayType(root, path, current, next);\n    if (IsTypedArray(next))\n        return TypedArrayType(root, path, current, next);\n    if (IsStandardObject(next))\n        return ObjectType(root, path, current, next);\n    if (IsValueType(next))\n        return ValueType(root, path, current, next);\n}\n// ------------------------------------------------------------------\n// IsNonMutableValue\n// ------------------------------------------------------------------\nfunction IsNonMutableValue(value) {\n    return IsTypedArray(value) || IsValueType(value);\n}\nfunction IsMismatchedValue(current, next) {\n    // prettier-ignore\n    return ((IsStandardObject(current) && IsArray(next)) ||\n        (IsArray(current) && IsStandardObject(next)));\n}\n// ------------------------------------------------------------------\n// Mutate\n// ------------------------------------------------------------------\n/** `[Mutable]` Performs a deep mutable value assignment while retaining internal references */\nexport function Mutate(current, next) {\n    if (IsNonMutableValue(current) || IsNonMutableValue(next))\n        throw new ValueMutateError('Only object and array types can be mutated at the root level');\n    if (IsMismatchedValue(current, next))\n        throw new ValueMutateError('Cannot assign due type mismatch of assignable values');\n    Visit(current, '', current, next);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10763, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10769, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 10771, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10786, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/transform/decode.mjs"],"sourcesContent":["import { Kind, TransformKind } from '../../type/symbols/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { KeyOfPropertyKeys, KeyOfPropertyEntries } from '../../type/keyof/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { Check } from '../check/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsStandardObject, IsArray, IsValueType } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform, IsSchema } from '../../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\n// thrown externally\n// prettier-ignore\nexport class TransformDecodeCheckError extends TypeBoxError {\n    constructor(schema, value, error) {\n        super(`Unable to decode value as it does not match the expected schema`);\n        this.schema = schema;\n        this.value = value;\n        this.error = error;\n    }\n}\n// prettier-ignore\nexport class TransformDecodeError extends TypeBoxError {\n    constructor(schema, path, value, error) {\n        super(error instanceof Error ? error.message : 'Unknown error');\n        this.schema = schema;\n        this.path = path;\n        this.value = value;\n        this.error = error;\n    }\n}\n// ------------------------------------------------------------------\n// Decode\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Default(schema, path, value) {\n    try {\n        return IsTransform(schema) ? schema[TransformKind].Decode(value) : value;\n    }\n    catch (error) {\n        throw new TransformDecodeError(schema, path, value, error);\n    }\n}\n// prettier-ignore\nfunction FromArray(schema, references, path, value) {\n    return (IsArray(value))\n        ? Default(schema, path, value.map((value, index) => Visit(schema.items, references, `${path}/${index}`, value)))\n        : Default(schema, path, value);\n}\n// prettier-ignore\nfunction FromIntersect(schema, references, path, value) {\n    if (!IsStandardObject(value) || IsValueType(value))\n        return Default(schema, path, value);\n    const knownEntries = KeyOfPropertyEntries(schema);\n    const knownKeys = knownEntries.map(entry => entry[0]);\n    const knownProperties = { ...value };\n    for (const [knownKey, knownSchema] of knownEntries)\n        if (knownKey in knownProperties) {\n            knownProperties[knownKey] = Visit(knownSchema, references, `${path}/${knownKey}`, knownProperties[knownKey]);\n        }\n    if (!IsTransform(schema.unevaluatedProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    const unknownProperties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            unknownProperties[key] = Default(unevaluatedProperties, `${path}/${key}`, unknownProperties[key]);\n        }\n    return Default(schema, path, unknownProperties);\n}\nfunction FromNot(schema, references, path, value) {\n    return Default(schema, path, Visit(schema.not, references, path, value));\n}\n// prettier-ignore\nfunction FromObject(schema, references, path, value) {\n    if (!IsStandardObject(value))\n        return Default(schema, path, value);\n    const knownKeys = KeyOfPropertyKeys(schema);\n    const knownProperties = { ...value };\n    for (const key of knownKeys)\n        if (key in knownProperties) {\n            knownProperties[key] = Visit(schema.properties[key], references, `${path}/${key}`, knownProperties[key]);\n        }\n    if (!IsSchema(schema.additionalProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const unknownProperties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            unknownProperties[key] = Default(additionalProperties, `${path}/${key}`, unknownProperties[key]);\n        }\n    return Default(schema, path, unknownProperties);\n}\n// prettier-ignore\nfunction FromRecord(schema, references, path, value) {\n    if (!IsStandardObject(value))\n        return Default(schema, path, value);\n    const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const knownKeys = new RegExp(pattern);\n    const knownProperties = { ...value };\n    for (const key of Object.getOwnPropertyNames(value))\n        if (knownKeys.test(key)) {\n            knownProperties[key] = Visit(schema.patternProperties[pattern], references, `${path}/${key}`, knownProperties[key]);\n        }\n    if (!IsSchema(schema.additionalProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const unknownProperties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.test(key)) {\n            unknownProperties[key] = Default(additionalProperties, `${path}/${key}`, unknownProperties[key]);\n        }\n    return Default(schema, path, unknownProperties);\n}\n// prettier-ignore\nfunction FromRef(schema, references, path, value) {\n    const target = Deref(schema, references);\n    return Default(schema, path, Visit(target, references, path, value));\n}\n// prettier-ignore\nfunction FromThis(schema, references, path, value) {\n    const target = Deref(schema, references);\n    return Default(schema, path, Visit(target, references, path, value));\n}\n// prettier-ignore\nfunction FromTuple(schema, references, path, value) {\n    return (IsArray(value) && IsArray(schema.items))\n        ? Default(schema, path, schema.items.map((schema, index) => Visit(schema, references, `${path}/${index}`, value[index])))\n        : Default(schema, path, value);\n}\n// prettier-ignore\nfunction FromUnion(schema, references, path, value) {\n    for (const subschema of schema.anyOf) {\n        if (!Check(subschema, references, value))\n            continue;\n        // note: ensure interior is decoded first\n        const decoded = Visit(subschema, references, path, value);\n        return Default(schema, path, decoded);\n    }\n    return Default(schema, path, value);\n}\n// prettier-ignore\nfunction Visit(schema, references, path, value) {\n    const references_ = typeof schema.$id === 'string' ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, path, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, path, value);\n        case 'Not':\n            return FromNot(schema_, references_, path, value);\n        case 'Object':\n            return FromObject(schema_, references_, path, value);\n        case 'Record':\n            return FromRecord(schema_, references_, path, value);\n        case 'Ref':\n            return FromRef(schema_, references_, path, value);\n        case 'Symbol':\n            return Default(schema_, path, value);\n        case 'This':\n            return FromThis(schema_, references_, path, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, path, value);\n        case 'Union':\n            return FromUnion(schema_, references_, path, value);\n        default:\n            return Default(schema_, path, value);\n    }\n}\n/**\n * `[Internal]` Decodes the value and returns the result. This function requires that\n * the caller `Check` the value before use. Passing unchecked values may result in\n * undefined behavior. Refer to the `Value.Decode()` for implementation details.\n */\nexport function TransformDecode(schema, references, value) {\n    return Visit(schema, references, '', value);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10983, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10989, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/transform/encode.mjs"],"sourcesContent":["import { Kind, TransformKind } from '../../type/symbols/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { KeyOfPropertyKeys, KeyOfPropertyEntries } from '../../type/keyof/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { Check } from '../check/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsStandardObject, IsArray, IsValueType } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform, IsSchema } from '../../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\n// prettier-ignore\nexport class TransformEncodeCheckError extends TypeBoxError {\n    constructor(schema, value, error) {\n        super(`The encoded value does not match the expected schema`);\n        this.schema = schema;\n        this.value = value;\n        this.error = error;\n    }\n}\n// prettier-ignore\nexport class TransformEncodeError extends TypeBoxError {\n    constructor(schema, path, value, error) {\n        super(`${error instanceof Error ? error.message : 'Unknown error'}`);\n        this.schema = schema;\n        this.path = path;\n        this.value = value;\n        this.error = error;\n    }\n}\n// ------------------------------------------------------------------\n// Encode\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Default(schema, path, value) {\n    try {\n        return IsTransform(schema) ? schema[TransformKind].Encode(value) : value;\n    }\n    catch (error) {\n        throw new TransformEncodeError(schema, path, value, error);\n    }\n}\n// prettier-ignore\nfunction FromArray(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    return IsArray(defaulted)\n        ? defaulted.map((value, index) => Visit(schema.items, references, `${path}/${index}`, value))\n        : defaulted;\n}\n// prettier-ignore\nfunction FromIntersect(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    if (!IsStandardObject(value) || IsValueType(value))\n        return defaulted;\n    const knownEntries = KeyOfPropertyEntries(schema);\n    const knownKeys = knownEntries.map(entry => entry[0]);\n    const knownProperties = { ...defaulted };\n    for (const [knownKey, knownSchema] of knownEntries)\n        if (knownKey in knownProperties) {\n            knownProperties[knownKey] = Visit(knownSchema, references, `${path}/${knownKey}`, knownProperties[knownKey]);\n        }\n    if (!IsTransform(schema.unevaluatedProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    const properties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            properties[key] = Default(unevaluatedProperties, `${path}/${key}`, properties[key]);\n        }\n    return properties;\n}\n// prettier-ignore\nfunction FromNot(schema, references, path, value) {\n    return Default(schema.not, path, Default(schema, path, value));\n}\n// prettier-ignore\nfunction FromObject(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    if (!IsStandardObject(defaulted))\n        return defaulted;\n    const knownKeys = KeyOfPropertyKeys(schema);\n    const knownProperties = { ...defaulted };\n    for (const key of knownKeys)\n        if (key in knownProperties) {\n            knownProperties[key] = Visit(schema.properties[key], references, `${path}/${key}`, knownProperties[key]);\n        }\n    if (!IsSchema(schema.additionalProperties)) {\n        return knownProperties;\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const properties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            properties[key] = Default(additionalProperties, `${path}/${key}`, properties[key]);\n        }\n    return properties;\n}\n// prettier-ignore\nfunction FromRecord(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    if (!IsStandardObject(value))\n        return defaulted;\n    const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const knownKeys = new RegExp(pattern);\n    const knownProperties = { ...defaulted };\n    for (const key of Object.getOwnPropertyNames(value))\n        if (knownKeys.test(key)) {\n            knownProperties[key] = Visit(schema.patternProperties[pattern], references, `${path}/${key}`, knownProperties[key]);\n        }\n    if (!IsSchema(schema.additionalProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const properties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.test(key)) {\n            properties[key] = Default(additionalProperties, `${path}/${key}`, properties[key]);\n        }\n    return properties;\n}\n// prettier-ignore\nfunction FromRef(schema, references, path, value) {\n    const target = Deref(schema, references);\n    const resolved = Visit(target, references, path, value);\n    return Default(schema, path, resolved);\n}\n// prettier-ignore\nfunction FromThis(schema, references, path, value) {\n    const target = Deref(schema, references);\n    const resolved = Visit(target, references, path, value);\n    return Default(schema, path, resolved);\n}\n// prettier-ignore\nfunction FromTuple(schema, references, path, value) {\n    const value1 = Default(schema, path, value);\n    return IsArray(schema.items) ? schema.items.map((schema, index) => Visit(schema, references, `${path}/${index}`, value1[index])) : [];\n}\n// prettier-ignore\nfunction FromUnion(schema, references, path, value) {\n    // test value against union variants\n    for (const subschema of schema.anyOf) {\n        if (!Check(subschema, references, value))\n            continue;\n        const value1 = Visit(subschema, references, path, value);\n        return Default(schema, path, value1);\n    }\n    // test transformed value against union variants\n    for (const subschema of schema.anyOf) {\n        const value1 = Visit(subschema, references, path, value);\n        if (!Check(schema, references, value1))\n            continue;\n        return Default(schema, path, value1);\n    }\n    return Default(schema, path, value);\n}\n// prettier-ignore\nfunction Visit(schema, references, path, value) {\n    const references_ = typeof schema.$id === 'string' ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, path, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, path, value);\n        case 'Not':\n            return FromNot(schema_, references_, path, value);\n        case 'Object':\n            return FromObject(schema_, references_, path, value);\n        case 'Record':\n            return FromRecord(schema_, references_, path, value);\n        case 'Ref':\n            return FromRef(schema_, references_, path, value);\n        case 'This':\n            return FromThis(schema_, references_, path, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, path, value);\n        case 'Union':\n            return FromUnion(schema_, references_, path, value);\n        default:\n            return Default(schema_, path, value);\n    }\n}\n/**\n * `[Internal]` Encodes the value and returns the result. This function expects the\n * caller to pass a statically checked value. This function does not check the encoded\n * result, meaning the result should be passed to `Check` before use. Refer to the\n * `Value.Encode()` function for implementation details.\n */\nexport function TransformEncode(schema, references, value) {\n    return Visit(schema, references, '', value);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11204, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/transform/has.mjs"],"sourcesContent":["import { Deref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform, IsSchema } from '../../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsString, IsUndefined } from '../guard/index.mjs';\n// prettier-ignore\nfunction FromArray(schema, references) {\n    return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromAsyncIterator(schema, references) {\n    return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromConstructor(schema, references) {\n    return IsTransform(schema) || Visit(schema.returns, references) || schema.parameters.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromFunction(schema, references) {\n    return IsTransform(schema) || Visit(schema.returns, references) || schema.parameters.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromIntersect(schema, references) {\n    return IsTransform(schema) || IsTransform(schema.unevaluatedProperties) || schema.allOf.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromIterator(schema, references) {\n    return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromNot(schema, references) {\n    return IsTransform(schema) || Visit(schema.not, references);\n}\n// prettier-ignore\nfunction FromObject(schema, references) {\n    return (IsTransform(schema) ||\n        Object.values(schema.properties).some((schema) => Visit(schema, references)) ||\n        (IsSchema(schema.additionalProperties) && Visit(schema.additionalProperties, references)));\n}\n// prettier-ignore\nfunction FromPromise(schema, references) {\n    return IsTransform(schema) || Visit(schema.item, references);\n}\n// prettier-ignore\nfunction FromRecord(schema, references) {\n    const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const property = schema.patternProperties[pattern];\n    return IsTransform(schema) || Visit(property, references) || (IsSchema(schema.additionalProperties) && IsTransform(schema.additionalProperties));\n}\n// prettier-ignore\nfunction FromRef(schema, references) {\n    if (IsTransform(schema))\n        return true;\n    return Visit(Deref(schema, references), references);\n}\n// prettier-ignore\nfunction FromThis(schema, references) {\n    if (IsTransform(schema))\n        return true;\n    return Visit(Deref(schema, references), references);\n}\n// prettier-ignore\nfunction FromTuple(schema, references) {\n    return IsTransform(schema) || (!IsUndefined(schema.items) && schema.items.some((schema) => Visit(schema, references)));\n}\n// prettier-ignore\nfunction FromUnion(schema, references) {\n    return IsTransform(schema) || schema.anyOf.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction Visit(schema, references) {\n    const references_ = IsString(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    if (schema.$id && visited.has(schema.$id))\n        return false;\n    if (schema.$id)\n        visited.add(schema.$id);\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_);\n        case 'AsyncIterator':\n            return FromAsyncIterator(schema_, references_);\n        case 'Constructor':\n            return FromConstructor(schema_, references_);\n        case 'Function':\n            return FromFunction(schema_, references_);\n        case 'Intersect':\n            return FromIntersect(schema_, references_);\n        case 'Iterator':\n            return FromIterator(schema_, references_);\n        case 'Not':\n            return FromNot(schema_, references_);\n        case 'Object':\n            return FromObject(schema_, references_);\n        case 'Promise':\n            return FromPromise(schema_, references_);\n        case 'Record':\n            return FromRecord(schema_, references_);\n        case 'Ref':\n            return FromRef(schema_, references_);\n        case 'This':\n            return FromThis(schema_, references_);\n        case 'Tuple':\n            return FromTuple(schema_, references_);\n        case 'Union':\n            return FromUnion(schema_, references_);\n        default:\n            return IsTransform(schema);\n    }\n}\nconst visited = new Set();\n/** Returns true if this schema contains a transform codec */\nexport function HasTransform(schema, references) {\n    visited.clear();\n    return Visit(schema, references);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11337, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 11341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11358, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/value/value.mjs"],"sourcesContent":["import { HasTransform, TransformDecode, TransformEncode, TransformDecodeCheckError, TransformEncodeCheckError } from '../transform/index.mjs';\nimport { Mutate as MutateValue } from '../mutate/index.mjs';\nimport { Hash as HashValue } from '../hash/index.mjs';\nimport { Equal as EqualValue } from '../equal/index.mjs';\nimport { Cast as CastValue } from '../cast/index.mjs';\nimport { Clone as CloneValue } from '../clone/index.mjs';\nimport { Convert as ConvertValue } from '../convert/index.mjs';\nimport { Create as CreateValue } from '../create/index.mjs';\nimport { Clean as CleanValue } from '../clean/index.mjs';\nimport { Check as CheckValue } from '../check/index.mjs';\nimport { Default as DefaultValue } from '../default/index.mjs';\nimport { Diff as DiffValue, Patch as PatchValue } from '../delta/index.mjs';\nimport { Errors as ValueErrors } from '../../errors/index.mjs';\n/** Casts a value into a given type. The return value will retain as much information of the original value as possible. */\nexport function Cast(...args) {\n    return CastValue.apply(CastValue, args);\n}\n/** Creates a value from the given type */\nexport function Create(...args) {\n    return CreateValue.apply(CreateValue, args);\n}\n/** Returns true if the value matches the given type */\nexport function Check(...args) {\n    return CheckValue.apply(CheckValue, args);\n}\n/** `[Mutable]` Removes excess properties from a value and returns the result. This function does not check the value and returns an unknown type. You should Check the result before use. Clean is a mutable operation. To avoid mutation, Clone the value first. */\nexport function Clean(...args) {\n    return CleanValue.apply(CleanValue, args);\n}\n/** Converts any type mismatched values to their target type if a reasonable conversion is possible. */\nexport function Convert(...args) {\n    return ConvertValue.apply(ConvertValue, args);\n}\n/** Returns a structural clone of the given value */\nexport function Clone(value) {\n    return CloneValue(value);\n}\n/** Decodes a value or throws if error */\nexport function Decode(...args) {\n    const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];\n    if (!Check(schema, references, value))\n        throw new TransformDecodeCheckError(schema, value, Errors(schema, references, value).First());\n    return HasTransform(schema, references) ? TransformDecode(schema, references, value) : value;\n}\n/** `[Mutable]` Generates missing properties on a value using default schema annotations if available. This function does not check the value and returns an unknown type. You should Check the result before use. Default is a mutable operation. To avoid mutation, Clone the value first. */\nexport function Default(...args) {\n    return DefaultValue.apply(DefaultValue, args);\n}\n/** Encodes a value or throws if error */\nexport function Encode(...args) {\n    const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];\n    const encoded = HasTransform(schema, references) ? TransformEncode(schema, references, value) : value;\n    if (!Check(schema, references, encoded))\n        throw new TransformEncodeCheckError(schema, encoded, Errors(schema, references, encoded).First());\n    return encoded;\n}\n/** Returns an iterator for each error in this value. */\nexport function Errors(...args) {\n    return ValueErrors.apply(ValueErrors, args);\n}\n/** Returns true if left and right values are structurally equal */\nexport function Equal(left, right) {\n    return EqualValue(left, right);\n}\n/** Returns edits to transform the current value into the next value */\nexport function Diff(current, next) {\n    return DiffValue(current, next);\n}\n/** Returns a FNV1A-64 non cryptographic hash of the given value */\nexport function Hash(value) {\n    return HashValue(value);\n}\n/** Returns a new value with edits applied to the given value */\nexport function Patch(current, edits) {\n    return PatchValue(current, edits);\n}\n/** `[Mutable]` Performs a deep mutable value assignment while retaining internal references. */\nexport function Mutate(current, next) {\n    MutateValue(current, next);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11482, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11488, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 11490, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11505, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40sinclair/typebox/build/esm/value/index.mjs"],"sourcesContent":["// ------------------------------------------------------------------\n// Errors (re-export)\n// ------------------------------------------------------------------\nexport { ValueErrorType, ValueErrorIterator } from '../errors/index.mjs';\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nexport * from './guard/index.mjs';\n// ------------------------------------------------------------------\n// Operators\n// ------------------------------------------------------------------\nexport * from './cast/index.mjs';\nexport * from './check/index.mjs';\nexport * from './clean/index.mjs';\nexport * from './clone/index.mjs';\nexport * from './convert/index.mjs';\nexport * from './create/index.mjs';\nexport * from './default/index.mjs';\nexport * from './delta/index.mjs';\nexport * from './equal/index.mjs';\nexport * from './hash/index.mjs';\nexport * from './mutate/index.mjs';\nexport * from './pointer/index.mjs';\nexport * from './transform/index.mjs';\n// ------------------------------------------------------------------\n// Namespace\n// ------------------------------------------------------------------\nexport { Value } from './value/index.mjs';\n"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,qBAAqB;AACrB,qEAAqE","ignoreList":[0]}},
    {"offset": {"line": 11525, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}