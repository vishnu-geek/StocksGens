{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/lib/queue.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\nexport const QueueOptionsSchema = Type.Object({\n    // TODO: adds func type to json schema which is not supported\n    //_queue?: Queue;\n    concurrency: Type.Optional(Type.Number()),\n    timeout: Type.Optional(Type.Number()), // TODO\n}, {\n    additionalProperties: false,\n    title: \"QueueOptions\",\n});\nexport default class Queue {\n    constructor(opts = {}) {\n        this.concurrency = 1;\n        this._running = 0;\n        this._queue = [];\n        if (opts.concurrency)\n            this.concurrency = opts.concurrency;\n    }\n    runNext() {\n        const job = this._queue.shift();\n        if (!job)\n            return;\n        this._running++;\n        job\n            .func()\n            .then((result) => job.resolve(result))\n            .catch((error) => job.reject(error))\n            .finally(() => {\n            this._running--;\n            this.checkQueue();\n        });\n    }\n    checkQueue() {\n        if (this._running < this.concurrency)\n            this.runNext();\n    }\n    add(func) {\n        return new Promise((resolve, reject) => {\n            this._queue.push({ func, resolve, reject });\n            this.checkQueue();\n        });\n    }\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AACO,MAAM,qBAAqB,iMAAA,CAAA,OAAI,CAAC,MAAM,CAAC;IAC1C,6DAA6D;IAC7D,iBAAiB;IACjB,aAAa,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,iMAAA,CAAA,OAAI,CAAC,MAAM;IACtC,SAAS,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,iMAAA,CAAA,OAAI,CAAC,MAAM;AACtC,GAAG;IACC,sBAAsB;IACtB,OAAO;AACX;AACe,MAAM;IACjB,YAAY,OAAO,CAAC,CAAC,CAAE;QACnB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,MAAM,GAAG,EAAE;QAChB,IAAI,KAAK,WAAW,EAChB,IAAI,CAAC,WAAW,GAAG,KAAK,WAAW;IAC3C;IACA,UAAU;QACN,MAAM,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK;QAC7B,IAAI,CAAC,KACD;QACJ,IAAI,CAAC,QAAQ;QACb,IACK,IAAI,GACJ,IAAI,CAAC,CAAC,SAAW,IAAI,OAAO,CAAC,SAC7B,KAAK,CAAC,CAAC,QAAU,IAAI,MAAM,CAAC,QAC5B,OAAO,CAAC;YACT,IAAI,CAAC,QAAQ;YACb,IAAI,CAAC,UAAU;QACnB;IACJ;IACA,aAAa;QACT,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,EAChC,IAAI,CAAC,OAAO;IACpB;IACA,IAAI,IAAI,EAAE;QACN,OAAO,IAAI,QAAQ,CAAC,SAAS;YACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;gBAAE;gBAAM;gBAAS;YAAO;YACzC,IAAI,CAAC,UAAU;QACnB;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/lib/errors.js"],"sourcesContent":["// Yahoo's servers returned an HTTP 400 for this request.\nexport class BadRequestError extends Error {\n    constructor() {\n        super(...arguments);\n        this.name = \"BadRequestError\";\n    }\n}\n// Yahoo's servers returned a 'not-ok' status for this request.\n// https://developer.mozilla.org/en-US/docs/Web/API/Response/ok\nexport class HTTPError extends Error {\n    constructor() {\n        super(...arguments);\n        this.name = \"HTTPError\";\n    }\n}\n// A YahooFinance method was called with invalid options.\nexport class InvalidOptionsError extends Error {\n    constructor() {\n        super(...arguments);\n        this.name = \"InvalidOptionsError\";\n    }\n}\n// An internal method yahooFinanceFetch() was called without this._env set.\nexport class NoEnvironmentError extends Error {\n    constructor() {\n        super(...arguments);\n        this.name = \"NoEnvironmentError\";\n    }\n}\nexport class FailedYahooValidationError extends Error {\n    constructor(message, { result, errors }) {\n        super(message);\n        this.name = \"FailedYahooValidationError\";\n        this.result = result;\n        this.errors = errors;\n    }\n}\nconst errors = {\n    BadRequestError,\n    HTTPError,\n    InvalidOptionsError,\n    NoEnvironmentError,\n    FailedYahooValidationError,\n};\nexport default errors;\n"],"names":[],"mappings":"AAAA,yDAAyD;;;;;;;;;AAClD,MAAM,wBAAwB;IACjC,aAAc;QACV,KAAK,IAAI;QACT,IAAI,CAAC,IAAI,GAAG;IAChB;AACJ;AAGO,MAAM,kBAAkB;IAC3B,aAAc;QACV,KAAK,IAAI;QACT,IAAI,CAAC,IAAI,GAAG;IAChB;AACJ;AAEO,MAAM,4BAA4B;IACrC,aAAc;QACV,KAAK,IAAI;QACT,IAAI,CAAC,IAAI,GAAG;IAChB;AACJ;AAEO,MAAM,2BAA2B;IACpC,aAAc;QACV,KAAK,IAAI;QACT,IAAI,CAAC,IAAI,GAAG;IAChB;AACJ;AACO,MAAM,mCAAmC;IAC5C,YAAY,OAAO,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAE;QACrC,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,MAAM,GAAG;IAClB;AACJ;AACA,MAAM,SAAS;IACX;IACA;IACA;IACA;IACA;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/lib/cookieJar.js"],"sourcesContent":["import { Cookie, CookieJar } from \"tough-cookie\";\nexport class ExtendedCookieJar extends CookieJar {\n    async setFromSetCookieHeaders(setCookieHeader, url) {\n        let cookies;\n        // console.log(\"setFromSetCookieHeaders\", setCookieHeader);\n        if (typeof setCookieHeader === \"undefined\") {\n            // no-op\n        }\n        else if (setCookieHeader instanceof Array) {\n            cookies = setCookieHeader.map((header) => Cookie.parse(header));\n        }\n        else if (typeof setCookieHeader === \"string\") {\n            cookies = [Cookie.parse(setCookieHeader)];\n        }\n        if (cookies)\n            for (const cookie of cookies)\n                if (cookie instanceof Cookie) {\n                    // console.log(\"setCookieSync\", cookie, url);\n                    await this.setCookie(cookie, url);\n                }\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,0BAA0B,kJAAA,CAAA,YAAS;IAC5C,MAAM,wBAAwB,eAAe,EAAE,GAAG,EAAE;QAChD,IAAI;QACJ,2DAA2D;QAC3D,IAAI,OAAO,oBAAoB,aAAa;QACxC,QAAQ;QACZ,OACK,IAAI,2BAA2B,OAAO;YACvC,UAAU,gBAAgB,GAAG,CAAC,CAAC,SAAW,kJAAA,CAAA,SAAM,CAAC,KAAK,CAAC;QAC3D,OACK,IAAI,OAAO,oBAAoB,UAAU;YAC1C,UAAU;gBAAC,kJAAA,CAAA,SAAM,CAAC,KAAK,CAAC;aAAiB;QAC7C;QACA,IAAI,SACA;YAAA,KAAK,MAAM,UAAU,QACjB,IAAI,kBAAkB,kJAAA,CAAA,SAAM,EAAE;gBAC1B,6CAA6C;gBAC7C,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ;YACjC;QAAA;IACZ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/lib/options.js"],"sourcesContent":["import { ExtendedCookieJar } from \"./cookieJar.js\";\nimport { Type } from \"@sinclair/typebox\";\nimport { QueueOptionsSchema } from \"./queue.js\";\nconst LoggerSchema = Type.Object({\n    info: Type.Function([], Type.Void()),\n    warn: Type.Function([], Type.Void()),\n    error: Type.Function([], Type.Void()),\n    debug: Type.Function([], Type.Void()),\n});\nconst ValidationOptionsSchema = Type.Object({\n    logErrors: Type.Optional(Type.Boolean()),\n    logOptionsErrors: Type.Optional(Type.Boolean()),\n    _internalThrowOnAdditionalProperties: Type.Optional(Type.Boolean({\n        default: process.env.NODE_ENV === \"test\",\n        description: \"Use this property to throw when properties beyond what is explicitly specified in the schema are provided. It is an internal option and subject to change, use at your own risk\",\n    })),\n});\nexport const YahooFinanceOptionsSchema = Type.Object({\n    YF_QUERY_HOST: Type.Optional(Type.String()),\n    cookieJar: Type.Optional(Type.Any()),\n    queue: Type.Optional(QueueOptionsSchema),\n    validation: Type.Optional(ValidationOptionsSchema),\n    logger: Type.Optional(LoggerSchema),\n}, { title: \"YahooFinanceOptions\" });\nconst options = {\n    YF_QUERY_HOST: process.env.YF_QUERY_HOST || \"query2.finance.yahoo.com\",\n    cookieJar: new ExtendedCookieJar(),\n    queue: {\n        concurrency: 4, // Min: 1, Max: Infinity\n        timeout: 60,\n    },\n    validation: {\n        logErrors: true,\n        logOptionsErrors: true,\n    },\n    logger: {\n        info: (...args) => console.log(...args),\n        warn: (...args) => console.warn(...args),\n        error: (...args) => console.error(...args),\n        debug: (...args) => console.log(...args),\n    },\n};\nexport default options;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AADA;;;;AAEA,MAAM,eAAe,iMAAA,CAAA,OAAI,CAAC,MAAM,CAAC;IAC7B,MAAM,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,iMAAA,CAAA,OAAI,CAAC,IAAI;IACjC,MAAM,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,iMAAA,CAAA,OAAI,CAAC,IAAI;IACjC,OAAO,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,iMAAA,CAAA,OAAI,CAAC,IAAI;IAClC,OAAO,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,iMAAA,CAAA,OAAI,CAAC,IAAI;AACtC;AACA,MAAM,0BAA0B,iMAAA,CAAA,OAAI,CAAC,MAAM,CAAC;IACxC,WAAW,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,iMAAA,CAAA,OAAI,CAAC,OAAO;IACrC,kBAAkB,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,iMAAA,CAAA,OAAI,CAAC,OAAO;IAC5C,sCAAsC,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,iMAAA,CAAA,OAAI,CAAC,OAAO,CAAC;QAC7D,SAAS,oDAAyB;QAClC,aAAa;IACjB;AACJ;AACO,MAAM,4BAA4B,iMAAA,CAAA,OAAI,CAAC,MAAM,CAAC;IACjD,eAAe,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,iMAAA,CAAA,OAAI,CAAC,MAAM;IACxC,WAAW,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,iMAAA,CAAA,OAAI,CAAC,GAAG;IACjC,OAAO,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,yKAAA,CAAA,qBAAkB;IACvC,YAAY,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC;IAC1B,QAAQ,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC;AAC1B,GAAG;IAAE,OAAO;AAAsB;AAClC,MAAM,UAAU;IACZ,eAAe,QAAQ,GAAG,CAAC,aAAa,IAAI;IAC5C,WAAW,IAAI,6KAAA,CAAA,oBAAiB;IAChC,OAAO;QACH,aAAa;QACb,SAAS;IACb;IACA,YAAY;QACR,WAAW;QACX,kBAAkB;IACtB;IACA,QAAQ;QACJ,MAAM,CAAC,GAAG,OAAS,QAAQ,GAAG,IAAI;QAClC,MAAM,CAAC,GAAG,OAAS,QAAQ,IAAI,IAAI;QACnC,OAAO,CAAC,GAAG,OAAS,QAAQ,KAAK,IAAI;QACrC,OAAO,CAAC,GAAG,OAAS,QAAQ,GAAG,IAAI;IACvC;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/lib/notices.js"],"sourcesContent":["import options from \"./options.js\";\nconst logger = options.logger || console;\nconst notices = {\n    yahooSurvey: {\n        id: \"yahooSurvey\",\n        text: \"Please consider completing the survey at https://bit.ly/yahoo-finance-api-feedback \" +\n            \"if you haven't already; for more info see \" +\n            \"https://github.com/gadicc/node-yahoo-finance2/issues/764#issuecomment-2056623851.\",\n        onceOnly: true,\n    },\n    ripHistorical: {\n        id: \"ripHistorical\",\n        text: \"[Deprecated] historical() relies on an API that Yahoo have removed.  We'll \" +\n            \"map this request to chart() for convenience, but, please consider using \" +\n            \"chart() directly instead; for more info see \" +\n            \"https://github.com/gadicc/node-yahoo-finance2/issues/795.\",\n        level: \"warn\",\n        onceOnly: true,\n    },\n};\nexport function showNotice(id) {\n    const n = notices[id];\n    if (!n)\n        throw new Error(`Unknown notice id: ${id}`);\n    if (n.suppress)\n        return;\n    if (n.onceOnly)\n        n.suppress = true;\n    const text = n.text +\n        (n.onceOnly ? \"  This will only be shown once, but you\" : \"You\") +\n        \" can suppress this message in future with `yahooFinance.suppressNotices(['\" +\n        id +\n        \"'])`.\";\n    const level = n.level || \"info\";\n    logger[level](text);\n}\nexport function suppressNotices(noticeIds) {\n    noticeIds.forEach((id) => {\n        const n = notices[id];\n        if (!n)\n            logger.error(`Unknown notice id: ${id}`);\n        n.suppress = true;\n    });\n}\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,SAAS,2KAAA,CAAA,UAAO,CAAC,MAAM,IAAI;AACjC,MAAM,UAAU;IACZ,aAAa;QACT,IAAI;QACJ,MAAM,wFACF,+CACA;QACJ,UAAU;IACd;IACA,eAAe;QACX,IAAI;QACJ,MAAM,gFACF,6EACA,iDACA;QACJ,OAAO;QACP,UAAU;IACd;AACJ;AACO,SAAS,WAAW,EAAE;IACzB,MAAM,IAAI,OAAO,CAAC,GAAG;IACrB,IAAI,CAAC,GACD,MAAM,IAAI,MAAM,CAAC,mBAAmB,EAAE,IAAI;IAC9C,IAAI,EAAE,QAAQ,EACV;IACJ,IAAI,EAAE,QAAQ,EACV,EAAE,QAAQ,GAAG;IACjB,MAAM,OAAO,EAAE,IAAI,GACf,CAAC,EAAE,QAAQ,GAAG,4CAA4C,KAAK,IAC/D,+EACA,KACA;IACJ,MAAM,QAAQ,EAAE,KAAK,IAAI;IACzB,MAAM,CAAC,MAAM,CAAC;AAClB;AACO,SAAS,gBAAgB,SAAS;IACrC,UAAU,OAAO,CAAC,CAAC;QACf,MAAM,IAAI,OAAO,CAAC,GAAG;QACrB,IAAI,CAAC,GACD,OAAO,KAAK,CAAC,CAAC,mBAAmB,EAAE,IAAI;QAC3C,EAAE,QAAQ,GAAG;IACjB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/lib/getCrumb.js"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: we have to ignore this for csm output.\nimport pkg from \"../../package.json\" with { type: \"json\" };\nimport { Cookie } from \"tough-cookie\";\nimport { showNotice } from \"./notices.js\";\nconst CONFIG_FAKE_URL = \"http://config.yf2/\";\nlet crumb = null;\nconst parseHtmlEntities = (str) => str.replace(/&#x([0-9A-Fa-f]{1,3});/gi, (_, numStr) => String.fromCharCode(parseInt(numStr, 16)));\nexport async function _getCrumb(cookieJar, fetch, fetchOptionsBase, logger, url = \"https://finance.yahoo.com/quote/AAPL\", develOverride = \"getCrumb-quote-AAPL.json\", noCache = false) {\n    if (!crumb) {\n        const cookies = await cookieJar.getCookies(CONFIG_FAKE_URL);\n        for (const cookie of cookies) {\n            if (cookie.key === \"crumb\") {\n                crumb = cookie.value;\n                logger.debug(\"Retrieved crumb from cookie store: \" + crumb);\n                break;\n            }\n        }\n    }\n    if (crumb && !noCache) {\n        // If we still have a valid (non-expired) cookie, return the existing crumb.\n        const existingCookies = await cookieJar.getCookies(url, { expire: true });\n        if (existingCookies.length)\n            return crumb;\n    }\n    async function processSetCookieHeader(header, url) {\n        if (header) {\n            await cookieJar.setFromSetCookieHeaders(header, url);\n            return true;\n        }\n        return false;\n    }\n    logger.debug(\"Fetching crumb and cookies from \" + url + \"...\");\n    const fetchOptions = {\n        ...fetchOptionsBase,\n        headers: {\n            ...fetchOptionsBase.headers,\n            // NB, we won't get a set-cookie header back without this:\n            accept: \"text/html,application/xhtml+xml,application/xml\",\n            // This request will get our first cookies, so nothing to send.\n            // cookie: await cookieJar.getCookieString(url),\n        },\n        redirect: \"manual\",\n        devel: fetchOptionsBase.devel && develOverride,\n    };\n    const response = await fetch(url, fetchOptions);\n    await processSetCookieHeader(response.headers.getSetCookie(), url);\n    // logger.debug(response.headers.raw());\n    // logger.debug(cookieJar);\n    const location = response.headers.get(\"location\");\n    if (location) {\n        if (location.match(/guce.yahoo/)) {\n            const consentFetchOptions = {\n                ...fetchOptions,\n                headers: {\n                    ...fetchOptions.headers,\n                    // GUCS=XXXXXXXX; Max-Age=1800; Domain=.yahoo.com; Path=/; Secure\n                    cookie: await cookieJar.getCookieString(location),\n                },\n                devel: \"getCrumb-quote-AAPL-consent.html\",\n            };\n            // Returns 302 to collectConsent?sessionId=XXX\n            logger.debug(\"fetch\", location /*, consentFetchOptions */);\n            const consentResponse = await fetch(location, consentFetchOptions);\n            const consentLocation = consentResponse.headers.get(\"location\");\n            if (consentLocation) {\n                if (!consentLocation.match(/collectConsent/))\n                    throw new Error(\"Unexpected redirect to \" + consentLocation);\n                const collectConsentFetchOptions = {\n                    ...consentFetchOptions,\n                    headers: {\n                        ...fetchOptions.headers,\n                        cookie: await cookieJar.getCookieString(consentLocation),\n                    },\n                    devel: \"getCrumb-quote-AAPL-collectConsent.html\",\n                };\n                logger.debug(\"fetch\", consentLocation /*, collectConsentFetchOptions */);\n                const collectConsentResponse = await fetch(consentLocation, collectConsentFetchOptions);\n                const collectConsentBody = await collectConsentResponse.text();\n                const collectConsentResponseParams = [\n                    ...collectConsentBody.matchAll(/<input type=\"hidden\" name=\"([^\"]+)\" value=\"([^\"]+)\">/g),\n                ]\n                    .map(([, name, value]) => `${name}=${encodeURIComponent(parseHtmlEntities(value))}&`)\n                    .join(\"\") + \"agree=agree&agree=agree\";\n                const collectConsentSubmitFetchOptions = {\n                    ...consentFetchOptions,\n                    headers: {\n                        ...fetchOptions.headers,\n                        cookie: await cookieJar.getCookieString(consentLocation),\n                        \"content-type\": \"application/x-www-form-urlencoded\",\n                    },\n                    method: \"POST\",\n                    // body: \"csrfToken=XjJfOYU&sessionId=3_cc-session_bd9a3b0c-c1b4-4aa8-8c18-7a82ec68a5d5&originalDoneUrl=https%3A%2F%2Ffinance.yahoo.com%2Fquote%2FAAPL%3Fguccounter%3D1&namespace=yahoo&agree=agree&agree=agree\",\n                    body: collectConsentResponseParams,\n                    devel: \"getCrumb-quote-AAPL-collectConsentSubmit\",\n                };\n                logger.debug(\"fetch\", consentLocation /*, collectConsentSubmitFetchOptions */);\n                const collectConsentSubmitResponse = await fetch(consentLocation, collectConsentSubmitFetchOptions);\n                // Set-Cookie: CFC=AQABCAFkWkdkjEMdLwQ9&s=AQAAAClxdtC-&g=ZFj24w; Expires=Wed, 8 May 2024 01:18:54 GMT; Domain=consent.yahoo.com; Path=/; Secure\n                if (!(await processSetCookieHeader(collectConsentSubmitResponse.headers.getSetCookie(), consentLocation)))\n                    throw new Error(\"No set-cookie header on collectConsentSubmitResponse, please report.\");\n                // https://guce.yahoo.com/copyConsent?sessionId=3_cc-session_04da10ea-1025-4676-8175-60d2508bfc6c&lang=en-GB\n                const collectConsentSubmitResponseLocation = collectConsentSubmitResponse.headers.get(\"location\");\n                if (!collectConsentSubmitResponseLocation)\n                    throw new Error(\"collectConsentSubmitResponse unexpectedly did not return a Location header, please report.\");\n                const copyConsentFetchOptions = {\n                    ...consentFetchOptions,\n                    headers: {\n                        ...fetchOptions.headers,\n                        cookie: await cookieJar.getCookieString(collectConsentSubmitResponseLocation),\n                    },\n                    devel: \"getCrumb-quote-AAPL-copyConsent\",\n                };\n                logger.debug(\"fetch\", collectConsentSubmitResponseLocation /*, copyConsentFetchOptions */);\n                const copyConsentResponse = await fetch(collectConsentSubmitResponseLocation, copyConsentFetchOptions);\n                if (!(await processSetCookieHeader(copyConsentResponse.headers.getSetCookie(), collectConsentSubmitResponseLocation)))\n                    throw new Error(\"No set-cookie header on copyConsentResponse, please report.\");\n                const copyConsentResponseLocation = copyConsentResponse.headers.get(\"location\");\n                if (!copyConsentResponseLocation)\n                    throw new Error(\"collectConsentSubmitResponse unexpectedly did not return a Location header, please report.\");\n                const finalResponseFetchOptions = {\n                    ...fetchOptions,\n                    headers: {\n                        ...fetchOptions.headers,\n                        cookie: await cookieJar.getCookieString(collectConsentSubmitResponseLocation),\n                    },\n                    devel: \"getCrumb-quote-AAPL-consent-final-redirect.html\",\n                };\n                return await _getCrumb(cookieJar, fetch, finalResponseFetchOptions, logger, copyConsentResponseLocation, \"getCrumb-quote-AAPL-consent-final-redirect.html\", noCache);\n            }\n        }\n        else {\n            console.error(\"We expected a redirect to guce.yahoo.com, but got \" + location);\n            console.error(\"We'll try to continue anyway - you can safely ignore this if the request succeeds\");\n            // throw new Error(\n            // \"Unsupported redirect to \" + location + \", please report.\");\n            // )\n        }\n    }\n    const cookie = (await cookieJar.getCookies(url, { expire: true }))[0];\n    if (cookie) {\n        logger.debug(\"Success. Cookie expires on \" + cookie.expires);\n    }\n    else {\n        /*\n        logger.error(\n          \"No cookie was retreieved.  Probably the next request \" +\n            \"will fail.  Please report.\"\n        );\n        */\n        throw new Error(\"No set-cookie header present in Yahoo's response.  Something must have changed, please report.\");\n    }\n    /*\n    // This is the old way of getting the crumb, which is no longer working.\n    // Instead we make use of the code block that follows this comment, which\n    // uses the `/v1/test/getcrumb` endpoint.  However, the commented code\n    // below may still be useful in the future, so it is left here for now.\n  \n    const source = await response.text();\n  \n    // Could also match on window.YAHOO.context = { /* multi-line JSON */ /* }\n    const match = source.match(/\\nwindow.YAHOO.context = ({[\\s\\S]+\\n});\\n/);\n    if (!match) {\n      throw new Error(\n        \"Could not find window.YAHOO.context.  This is usually caused by \" +\n          \"temporary issues on Yahoo's servers that tend to resolve \" +\n          \"themselves; however, if the error persists for more than 12 \" +\n          \"hours, Yahoo's API may have changed, and you can help by reporting \" +\n          \"the issue.  Thanks :)\"\n      );\n    }\n  \n    let context;\n    try {\n      context = JSON.parse(match[1]);\n    } catch (error) {\n      logger.debug(match[1]);\n      logger.error(error);\n      throw new Error(\n        \"Could not parse window.YAHOO.context.  Yahoo's API may have changed; please report.\"\n      );\n    }\n  \n    crumb = context.crumb;\n    */\n    const GET_CRUMB_URL = \"https://query1.finance.yahoo.com/v1/test/getcrumb\";\n    const getCrumbOptions = {\n        ...fetchOptions,\n        headers: {\n            ...fetchOptions.headers,\n            // Big thanks to @nocodehummel who figured out a User-Agent that both\n            // works but still allows us to identify ourselves honestly.\n            \"User-Agent\": `Mozilla/5.0 (compatible; ${pkg.name}/${pkg.version})`,\n            cookie: await cookieJar.getCookieString(GET_CRUMB_URL),\n            origin: \"https://finance.yahoo.com\",\n            referer: url,\n            accept: \"*/*\",\n            \"accept-encoding\": \"gzip, deflate, br\",\n            \"accept-language\": \"en-US,en;q=0.9\",\n            \"content-type\": \"text/plain\",\n        },\n        devel: \"getCrumb-getcrumb\",\n    };\n    logger.debug(\"fetch\", GET_CRUMB_URL /*, getCrumbOptions */);\n    const getCrumbResponse = await fetch(GET_CRUMB_URL, getCrumbOptions);\n    if (getCrumbResponse.status !== 200) {\n        throw new Error(\"Failed to get crumb, status \" +\n            getCrumbResponse.status +\n            \", statusText: \" +\n            getCrumbResponse.statusText);\n    }\n    const crumbFromGetCrumb = await getCrumbResponse.text();\n    crumb = crumbFromGetCrumb;\n    if (!crumb)\n        throw new Error(\"Could not find crumb.  Yahoo's API may have changed; please report.\");\n    logger.debug(\"New crumb: \" + crumb);\n    await cookieJar.setCookie(new Cookie({\n        key: \"crumb\",\n        value: crumb,\n    }), CONFIG_FAKE_URL);\n    promise = null;\n    return crumb;\n}\nlet promise = null;\nexport async function getCrumbClear(cookieJar) {\n    crumb = null;\n    promise = null;\n    await cookieJar.removeAllCookies();\n}\nexport default function getCrumb(cookieJar, fetch, fetchOptionsBase, logger, url = \"https://finance.yahoo.com/quote/AAPL\", __getCrumb = _getCrumb) {\n    showNotice(\"yahooSurvey\");\n    if (!promise)\n        promise = __getCrumb(cookieJar, fetch, fetchOptionsBase, logger, url);\n    return promise;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 480, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/lib/yahooFinanceFetch.js"],"sourcesContent":["import Queue from \"./queue.js\";\nimport errors from \"./errors.js\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: we have to ignore this for csm output.assert\nimport pkg from \"../../package.json\" with { type: \"json\" };\nimport getCrumb from \"./getCrumb.js\";\nconst userAgent = `${pkg.name}/${pkg.version} (+${pkg.repository})`;\nconst _queue = new Queue();\nfunction assertQueueOptions(queue, opts) {\n    opts; //?\n    if (typeof opts.concurrency === \"number\" &&\n        queue.concurrency !== opts.concurrency)\n        queue.concurrency = opts.concurrency;\n    if (typeof opts.timeout === \"number\" && queue.timeout !== opts.timeout)\n        queue.timeout = opts.timeout;\n}\nfunction substituteVariables(urlBase) {\n    return urlBase.replace(/\\$\\{([^}]+)\\}/g, (match, varName) => {\n        if (varName === \"YF_QUERY_HOST\") {\n            // const hosts = [\"query1.finance.yahoo.com\", \"query2.finance.yahoo.com\"];\n            // return hosts[Math.floor(Math.random() * hosts.length)];\n            return this._opts.YF_QUERY_HOST || \"query2.finance.yahoo.com\";\n        }\n        else {\n            // i.e. return unsubstituted original variable expression ${VAR}\n            return match;\n        }\n    });\n}\nasync function yahooFinanceFetch(urlBase, params = {}, moduleOpts = {}, func = \"json\", needsCrumb = false) {\n    var _a;\n    if (!(this && this._env))\n        throw new errors.NoEnvironmentError(\"yahooFinanceFetch called without this._env set\");\n    // TODO: adds func type to json schema which is not supported\n    //const queue = moduleOpts.queue?._queue || _queue;\n    const queue = _queue;\n    assertQueueOptions(queue, { ...this._opts.queue, ...moduleOpts.queue });\n    const { URLSearchParams, fetch, fetchDevel } = this._env;\n    /* istanbul ignore next */\n    // no need to force coverage on real network request.\n    const fetchFunc = moduleOpts.devel ? await fetchDevel() : fetch;\n    const fetchOptionsBase = {\n        ...moduleOpts.fetchOptions,\n        devel: moduleOpts.devel,\n        headers: {\n            \"User-Agent\": userAgent,\n            ...(_a = moduleOpts.fetchOptions) === null || _a === void 0 ? void 0 : _a.headers,\n        },\n    };\n    if (needsCrumb) {\n        if (!this._opts.cookieJar)\n            throw new Error(\"No cookieJar set\");\n        if (!this._opts.logger)\n            throw new Error(\"Logger was unset.\");\n        const crumb = await getCrumb(this._opts.cookieJar, fetchFunc, fetchOptionsBase, this._opts.logger);\n        if (crumb)\n            params.crumb = crumb;\n    }\n    // @ts-expect-error: TODO copy interface? @types lib?\n    const urlSearchParams = new URLSearchParams(params);\n    const url = substituteVariables.call(this, urlBase) + \"?\" + urlSearchParams.toString();\n    // console.log(url);\n    // console.log(cookieJar.serializeSync());\n    if (!this._opts.cookieJar)\n        throw new Error(\"No cookieJar set\");\n    const fetchOptions = {\n        ...fetchOptionsBase,\n        headers: {\n            ...fetchOptionsBase.headers,\n            cookie: await this._opts.cookieJar.getCookieString(url, {\n                allPaths: true,\n            }),\n        },\n    };\n    // console.log(\"fetch\", url, fetchOptions);\n    // used in moduleExec.ts\n    if (func === \"csv\")\n        func = \"text\";\n    const response = (await queue.add(() => fetchFunc(url, fetchOptions)));\n    const setCookieHeaders = response.headers.getSetCookie();\n    if (setCookieHeaders) {\n        if (!this._opts.cookieJar)\n            throw new Error(\"No cookieJar set\");\n        this._opts.cookieJar.setFromSetCookieHeaders(setCookieHeaders, url);\n    }\n    const result = await response[func]();\n    /*\n      {\n        finance: {  // or quoteSummary, or any other single key\n          result: null,\n          error: {\n            code: 'Bad Request',\n            description: 'Missing required query parameter=q'\n          }\n        }\n      }\n     */\n    if (func === \"json\") {\n        const keys = Object.keys(result);\n        if (keys.length === 1) {\n            const errorObj = result[keys[0]].error;\n            if (errorObj) {\n                const errorName = errorObj.code.replace(/ /g, \"\") + \"Error\";\n                const ErrorClass = errors[errorName] || Error;\n                throw new ErrorClass(errorObj.description);\n            }\n        }\n    }\n    // We do this last as it generally contains less information (e.g. no desc).\n    if (!response.ok) {\n        console.error(url);\n        const error = new errors.HTTPError(response.statusText);\n        error.code = response.status;\n        throw error;\n    }\n    return result;\n}\nexport { substituteVariables };\nexport default yahooFinanceFetch;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 603, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 609, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/lib/validateAndCoerceTypes.js"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: we have to ignore this for csm output.\nimport pkg from \"../../package.json\" with { type: \"json\" };\nimport { FailedYahooValidationError, InvalidOptionsError } from \"./errors.js\";\nimport { TransformDecodeCheckError, TransformDecodeError, Value, } from \"@sinclair/typebox/value\";\nfunction logRelevantErrorInfo(e) {\n    const { /* schema, */ error /* , value */ } = e;\n    console.log(JSON.stringify(error, null, 2));\n}\nconst handleResultError = (e, options) => {\n    const title = e.schema.title;\n    if (options.logErrors) {\n        logRelevantErrorInfo(e);\n        console.log(`\n    This may happen intermittently and you should catch errors appropriately.\n    However:  1) if this recently started happening on every request for a symbol\n    that used to work, Yahoo may have changed their API.  2) If this happens on\n    every request for a symbol you've never used before, but not for other\n    symbols, you've found an edge-case (OR, we may just be protecting you from\n    \"bad\" data sometimes stored for e.g. misspelt symbols on Yahoo's side).\n    Please see if anyone has reported this previously:\n    \n      ${pkg.repository}/issues?q=is%3Aissue+${title}\n    \n    or open a new issue (and mention the symbol):  ${pkg.name} v${pkg.version}\n    \n      ${pkg.repository}/issues/new?labels=bug%2C+validation&template=validation.md&title=${title}\n    \n    For information on how to turn off the above logging or skip these errors,\n    see https://github.com/gadicc/node-yahoo-finance2/tree/devel/docs/validation.md.\n    \n    At the end of the doc, there's also a section on how to\n    [Help Fix Validation Errors](https://github.com/gadicc/node-yahoo-finance2/blob/devel/docs/validation.md#help-fix)\n    in case you'd like to contribute to the project.  Most of the time, these\n    fixes are very quick and easy; it's just hard for our small core team to keep up,\n    so help is always appreciated!\n    `);\n    }\n    throw new FailedYahooValidationError(\"Failed Yahoo Schema validation\", {\n        result: e.value,\n        errors: [e],\n    });\n};\nconst handleOptionsError = (e, { logOptionsErrors }) => {\n    if (logOptionsErrors) {\n        console.error(`[yahooFinance] Invalid options (\"${JSON.stringify(e.error, null, 2)}\")`);\n    }\n    throw new InvalidOptionsError(\"Validation called with invalid options\");\n};\nexport const validateAndCoerceTypebox = ({ type, data, schema, options, }) => {\n    try {\n        const validationSchema = options._internalThrowOnAdditionalProperties\n            ? { ...schema, additionalProperties: false }\n            : schema;\n        return Value.Decode(validationSchema, data);\n    }\n    catch (e) {\n        if (e instanceof TransformDecodeError ||\n            e instanceof TransformDecodeCheckError) {\n            // TODO: The existing implementation of 'validate' assumes that the `type` parameter may not be provided\n            // and defaults to validating the options if it is not.\n            // We should probably explore validating this further up in the call chain.\n            // It'd be nice to do this in the body of a module (e.g. search) so that we can avoid\n            // polluting core code with type checks and edge cases\n            type === \"result\"\n                ? handleResultError(e, options)\n                : handleOptionsError(e, options);\n        }\n        throw e;\n    }\n};\nexport default validateAndCoerceTypebox;\n"],"names":[],"mappings":"AAAA,6DAA6D;AAC7D,qDAAqD;;;;;AACrD;AACA;AACA;AAAA;AAAA;;;;AACA,SAAS,qBAAqB,CAAC;IAC3B,MAAM,EAAgB,KAAK,AAAC,WAAW,KAAI,GAAG;IAC9C,QAAQ,GAAG,CAAC,KAAK,SAAS,CAAC,OAAO,MAAM;AAC5C;AACA,MAAM,oBAAoB,CAAC,GAAG;IAC1B,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;IAC5B,IAAI,QAAQ,SAAS,EAAE;QACnB,qBAAqB;QACrB,QAAQ,GAAG,CAAC,CAAC;;;;;;;;;MASf,EAAE,mIAAA,CAAA,UAAG,CAAC,UAAU,CAAC,qBAAqB,EAAE,MAAM;;mDAED,EAAE,mIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,EAAE,EAAE,mIAAA,CAAA,UAAG,CAAC,OAAO,CAAC;;MAExE,EAAE,mIAAA,CAAA,UAAG,CAAC,UAAU,CAAC,kEAAkE,EAAE,MAAM;;;;;;;;;;IAU7F,CAAC;IACD;IACA,MAAM,IAAI,0KAAA,CAAA,6BAA0B,CAAC,kCAAkC;QACnE,QAAQ,EAAE,KAAK;QACf,QAAQ;YAAC;SAAE;IACf;AACJ;AACA,MAAM,qBAAqB,CAAC,GAAG,EAAE,gBAAgB,EAAE;IAC/C,IAAI,kBAAkB;QAClB,QAAQ,KAAK,CAAC,CAAC,iCAAiC,EAAE,KAAK,SAAS,CAAC,EAAE,KAAK,EAAE,MAAM,GAAG,EAAE,CAAC;IAC1F;IACA,MAAM,IAAI,0KAAA,CAAA,sBAAmB,CAAC;AAClC;AACO,MAAM,2BAA2B,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAG;IACrE,IAAI;QACA,MAAM,mBAAmB,QAAQ,oCAAoC,GAC/D;YAAE,GAAG,MAAM;YAAE,sBAAsB;QAAM,IACzC;QACN,OAAO,oNAAA,CAAA,QAAK,CAAC,MAAM,CAAC,kBAAkB;IAC1C,EACA,OAAO,GAAG;QACN,IAAI,aAAa,wLAAA,CAAA,uBAAoB,IACjC,aAAa,wLAAA,CAAA,4BAAyB,EAAE;YACxC,wGAAwG;YACxG,uDAAuD;YACvD,2EAA2E;YAC3E,qFAAqF;YACrF,sDAAsD;YACtD,SAAS,WACH,kBAAkB,GAAG,WACrB,mBAAmB,GAAG;QAChC;QACA,MAAM;IACV;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 689, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 695, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/lib/setGlobalConfig.js"],"sourcesContent":["import { YahooFinanceOptionsSchema, } from \"./options.js\";\nimport validateAndCoerceTypes from \"./validateAndCoerceTypes.js\";\nimport { ExtendedCookieJar } from \"./cookieJar.js\";\nexport default function setGlobalConfig(_config) {\n    const parsed = validateAndCoerceTypes({\n        data: _config,\n        type: \"options\",\n        options: this._opts.validation,\n        schema: YahooFinanceOptionsSchema,\n    });\n    // Instances (e.g. cookieJar) don't validate well :)\n    const { cookieJar, ...config } = parsed;\n    mergeObjects(this._opts, config);\n    if (cookieJar) {\n        if (!(cookieJar instanceof ExtendedCookieJar))\n            throw new Error(\"cookieJar must be an instance of ExtendedCookieJar\");\n        this._opts.cookieJar = cookieJar;\n    }\n}\nfunction mergeObjects(original, objToMerge) {\n    const ownKeys = Reflect.ownKeys(objToMerge);\n    for (const key of ownKeys) {\n        if (typeof objToMerge[key] === \"object\") {\n            mergeObjects(original[key], objToMerge[key]);\n        }\n        else {\n            original[key] = objToMerge[key];\n        }\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACe,SAAS,gBAAgB,OAAO;IAC3C,MAAM,SAAS,CAAA,GAAA,0LAAA,CAAA,UAAsB,AAAD,EAAE;QAClC,MAAM;QACN,MAAM;QACN,SAAS,IAAI,CAAC,KAAK,CAAC,UAAU;QAC9B,QAAQ,2KAAA,CAAA,4BAAyB;IACrC;IACA,oDAAoD;IACpD,MAAM,EAAE,SAAS,EAAE,GAAG,QAAQ,GAAG;IACjC,aAAa,IAAI,CAAC,KAAK,EAAE;IACzB,IAAI,WAAW;QACX,IAAI,CAAC,CAAC,qBAAqB,6KAAA,CAAA,oBAAiB,GACxC,MAAM,IAAI,MAAM;QACpB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG;IAC3B;AACJ;AACA,SAAS,aAAa,QAAQ,EAAE,UAAU;IACtC,MAAM,UAAU,QAAQ,OAAO,CAAC;IAChC,KAAK,MAAM,OAAO,QAAS;QACvB,IAAI,OAAO,UAAU,CAAC,IAAI,KAAK,UAAU;YACrC,aAAa,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI;QAC/C,OACK;YACD,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI;QACnC;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 729, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 735, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/lib/csv2json.js"],"sourcesContent":["// Partial implementation that covers everything we need\nconst DELIMITER = \",\";\nfunction camelize(str) {\n    return str\n        .split(\" \")\n        .map((str, i) => i === 0\n        ? str.toLowerCase()\n        : str[0].toUpperCase() + str.substr(1).toLowerCase())\n        .join(\"\");\n}\nfunction convert(input) {\n    if (input.match(/\\d{4,4}-\\d{2,2}-\\d{2,2}/))\n        return new Date(input);\n    if (input.match(/^[0-9\\.]+$/))\n        return parseFloat(input);\n    if (input === \"null\")\n        return null;\n    return input;\n}\nexport default function csv2json(csv) {\n    const lines = csv.split(\"\\n\");\n    // Actually we should handle this case, i.e. headers but no data.\n    // if (lines.length === 1)\n    //  throw new Error(\"No newlines in: \" + csv);\n    const headers = lines.shift().split(DELIMITER).map(camelize);\n    const out = new Array(lines.length);\n    for (let i = 0; i < lines.length; i++) {\n        const inRow = lines[i].split(DELIMITER);\n        const outRow = (out[i] = {});\n        for (let j = 0; j < inRow.length; j++) {\n            outRow[headers[j]] = convert(inRow[j]);\n        }\n    }\n    return out;\n}\n"],"names":[],"mappings":"AAAA,wDAAwD;;;;AACxD,MAAM,YAAY;AAClB,SAAS,SAAS,GAAG;IACjB,OAAO,IACF,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,KAAK,IAAM,MAAM,IACrB,IAAI,WAAW,KACf,GAAG,CAAC,EAAE,CAAC,WAAW,KAAK,IAAI,MAAM,CAAC,GAAG,WAAW,IACjD,IAAI,CAAC;AACd;AACA,SAAS,QAAQ,KAAK;IAClB,IAAI,MAAM,KAAK,CAAC,4BACZ,OAAO,IAAI,KAAK;IACpB,IAAI,MAAM,KAAK,CAAC,eACZ,OAAO,WAAW;IACtB,IAAI,UAAU,QACV,OAAO;IACX,OAAO;AACX;AACe,SAAS,SAAS,GAAG;IAChC,MAAM,QAAQ,IAAI,KAAK,CAAC;IACxB,iEAAiE;IACjE,0BAA0B;IAC1B,8CAA8C;IAC9C,MAAM,UAAU,MAAM,KAAK,GAAG,KAAK,CAAC,WAAW,GAAG,CAAC;IACnD,MAAM,MAAM,IAAI,MAAM,MAAM,MAAM;IAClC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QACnC,MAAM,QAAQ,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC;QAC7B,MAAM,SAAU,GAAG,CAAC,EAAE,GAAG,CAAC;QAC1B,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACnC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,QAAQ,KAAK,CAAC,EAAE;QACzC;IACJ;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 765, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 771, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/lib/moduleExec.js"],"sourcesContent":["/*\n * moduleExec(options: ModuleExecOptions)\n *\n * 1. Query Stage\n *   1. Validate user-supplied module params, e.g. { period: '1d' }\n *   2. Merge query params: (module defaults, user-supplied overrides, etc)\n *   3. Optionally transform query params\n *\n * 2. Call lib/yahooFinanceFetch\n *\n * 3. Result Stage\n *   1. Optional transform the result\n *   2. Validate the result and coerce types\n *\n * Further info below, inline.\n */\nimport { validateAndCoerceTypebox } from \"./validateAndCoerceTypes.js\";\nimport csv2json from \"./csv2json.js\";\nasync function moduleExec(opts) {\n    var _a, _b;\n    const queryOpts = opts.query;\n    const moduleOpts = opts.moduleOptions;\n    const moduleName = opts.moduleName;\n    const resultOpts = opts.result;\n    if (queryOpts.assertSymbol) {\n        const symbol = queryOpts.assertSymbol;\n        if (typeof symbol !== \"string\")\n            throw new Error(`yahooFinance.${moduleName}() expects a single string symbol as its ` +\n                `query, not a(n) ${typeof symbol}: ${JSON.stringify(symbol)}`);\n    }\n    // Check that query options passed by the user are valid for this module\n    validateAndCoerceTypebox({\n        type: \"options\",\n        data: (_a = queryOpts.overrides) !== null && _a !== void 0 ? _a : {},\n        schema: queryOpts.schema,\n        options: this._opts.validation,\n    });\n    let queryOptions = {\n        ...queryOpts.defaults, // Module defaults e.g. { period: '1wk', lang: 'en' }\n        ...queryOpts.runtime, // Runtime params e.g. { q: query }\n        ...queryOpts.overrides, // User supplied options that override above\n    };\n    /*\n     * Called with the merged (defaults,runtime,overrides) before running\n     * the query.  Useful to transform options we allow but not Yahoo, e.g.\n     * allow a \"2020-01-01\" date but transform this to a UNIX epoch.\n     */\n    if (queryOpts.transformWith) {\n        queryOptions = queryOpts.transformWith(queryOptions);\n    }\n    // this._fetch is lib/yahooFinanceFetch\n    let result = await this._fetch(queryOpts.url, queryOptions, moduleOpts, queryOpts.fetchType, (_b = queryOpts.needsCrumb) !== null && _b !== void 0 ? _b : false);\n    if (queryOpts.fetchType === \"csv\") {\n        result = csv2json(result);\n    }\n    /*\n     * Mutate the Yahoo result *before* validating and coercion.  Mostly used\n     * to e.g. throw if no (result.returnField) and return result.returnField.\n     */\n    if (resultOpts.transformWith) {\n        result = resultOpts.transformWith(result);\n    }\n    const validateResult = !moduleOpts ||\n        moduleOpts.validateResult === undefined ||\n        moduleOpts.validateResult === true;\n    const validationOpts = {\n        ...this._opts.validation,\n        // Set logErrors=false if validateResult=false\n        logErrors: validateResult ? this._opts.validation.logErrors : false,\n    };\n    /*\n     * Validate the returned result (after transforming, above) and coerce types.\n     *\n     * The coersion works as follows: if we're expecting a \"Date\" type, but Yahoo\n     * gives us { raw: 1231421524, fmt: \"2020-01-01\" }, we'll return that as\n     * `new Date(1231421524 * 1000)`.\n     *\n     * Beyond that, ensures that user won't process unexpected data, in two\n     * cases:\n     *\n     * a) Missing required properties or unexpected additional properties\n     * b) A total new change in format that we really have no idea what to do\n     *    with, e.g. a new kind of Date that we've never seen before and\n     *\n     * The idea is that if you receive a result, it's safe to use / store in\n     * database, etc.  Otherwise you'll receive an error.\n     */\n    try {\n        return validateAndCoerceTypebox({\n            type: \"result\",\n            data: result,\n            schema: resultOpts.schema,\n            options: validationOpts,\n        });\n    }\n    catch (error) {\n        if (validateResult)\n            throw error;\n    }\n    return result;\n}\nexport default moduleExec;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;CAeC;;;AACD;AACA;;;AACA,eAAe,WAAW,IAAI;IAC1B,IAAI,IAAI;IACR,MAAM,YAAY,KAAK,KAAK;IAC5B,MAAM,aAAa,KAAK,aAAa;IACrC,MAAM,aAAa,KAAK,UAAU;IAClC,MAAM,aAAa,KAAK,MAAM;IAC9B,IAAI,UAAU,YAAY,EAAE;QACxB,MAAM,SAAS,UAAU,YAAY;QACrC,IAAI,OAAO,WAAW,UAClB,MAAM,IAAI,MAAM,CAAC,aAAa,EAAE,WAAW,yCAAyC,CAAC,GACjF,CAAC,gBAAgB,EAAE,OAAO,OAAO,EAAE,EAAE,KAAK,SAAS,CAAC,SAAS;IACzE;IACA,wEAAwE;IACxE,CAAA,GAAA,0LAAA,CAAA,2BAAwB,AAAD,EAAE;QACrB,MAAM;QACN,MAAM,CAAC,KAAK,UAAU,SAAS,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,CAAC;QACnE,QAAQ,UAAU,MAAM;QACxB,SAAS,IAAI,CAAC,KAAK,CAAC,UAAU;IAClC;IACA,IAAI,eAAe;QACf,GAAG,UAAU,QAAQ;QACrB,GAAG,UAAU,OAAO;QACpB,GAAG,UAAU,SAAS;IAC1B;IACA;;;;KAIC,GACD,IAAI,UAAU,aAAa,EAAE;QACzB,eAAe,UAAU,aAAa,CAAC;IAC3C;IACA,uCAAuC;IACvC,IAAI,SAAS,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE,cAAc,YAAY,UAAU,SAAS,EAAE,CAAC,KAAK,UAAU,UAAU,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;IAC1J,IAAI,UAAU,SAAS,KAAK,OAAO;QAC/B,SAAS,CAAA,GAAA,4KAAA,CAAA,UAAQ,AAAD,EAAE;IACtB;IACA;;;KAGC,GACD,IAAI,WAAW,aAAa,EAAE;QAC1B,SAAS,WAAW,aAAa,CAAC;IACtC;IACA,MAAM,iBAAiB,CAAC,cACpB,WAAW,cAAc,KAAK,aAC9B,WAAW,cAAc,KAAK;IAClC,MAAM,iBAAiB;QACnB,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU;QACxB,8CAA8C;QAC9C,WAAW,iBAAiB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,GAAG;IAClE;IACA;;;;;;;;;;;;;;;;KAgBC,GACD,IAAI;QACA,OAAO,CAAA,GAAA,0LAAA,CAAA,2BAAwB,AAAD,EAAE;YAC5B,MAAM;YACN,MAAM;YACN,QAAQ,WAAW,MAAM;YACzB,SAAS;QACb;IACJ,EACA,OAAO,OAAO;QACV,IAAI,gBACA,MAAM;IACd;IACA,OAAO;AACX;uCACe","ignoreList":[0]}},
    {"offset": {"line": 868, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 874, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/modules/autoc.js"],"sourcesContent":["export default async function autoc() {\n    throw new Error(\"Yahoo decomissioned their autoc server sometime before 20 Nov 2021 \" +\n        \"(see https://github.com/gadicc/node-yahoo-finance2/issues/337])). \" +\n        \"Use `search` instead (just like they do).\");\n}\n"],"names":[],"mappings":";;;AAAe,eAAe;IAC1B,MAAM,IAAI,MAAM,wEACZ,uEACA;AACR","ignoreList":[0]}},
    {"offset": {"line": 880, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 886, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/lib/datetime.js"],"sourcesContent":["/*\nThe contents of this file are copied from:\n* https://github.com/sinclairzx81/typebox/blob/7a42aeef5bb989c07bbfc9acdbd9d74b3febed05/example/formats/date.ts\n* https://github.com/sinclairzx81/typebox/blob/7a42aeef5bb989c07bbfc9acdbd9d74b3febed05/example/formats/date-time.ts\n* https://github.com/sinclairzx81/typebox/blob/7a42aeef5bb989c07bbfc9acdbd9d74b3febed05/example/formats/time.ts\n*\n* License info:\n*\n* The MIT License (MIT)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nconst YEAR = /^(\\d\\d\\d\\d)$/;\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d(?:\\.\\d+)?)(z|([+-])(\\d\\d)(?::?(\\d\\d))?)?$/i;\nconst DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction IsLeapYear(year) {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nexport const isYear = (value) => {\n    const matches = YEAR.exec(value);\n    return !!matches;\n};\n/**\n * `[ajv-formats]` ISO8601 Date component\n * @example `2020-12-12`\n */\nexport const isDate = (value) => {\n    const matches = DATE.exec(value);\n    if (!matches)\n        return false;\n    const year = +matches[1];\n    const month = +matches[2];\n    const day = +matches[3];\n    return (month >= 1 &&\n        month <= 12 &&\n        day >= 1 &&\n        day <= (month === 2 && IsLeapYear(year) ? 29 : DAYS[month]));\n};\n/**\n * `[ajv-formats]` ISO8601 Time component\n * @example `20:20:39+00:00`\n */\nexport const isTime = (value, strictTimeZone) => {\n    const matches = TIME.exec(value);\n    if (!matches)\n        return false;\n    const hr = +matches[1];\n    const min = +matches[2];\n    const sec = +matches[3];\n    const tz = matches[4];\n    const tzSign = matches[5] === \"-\" ? -1 : 1;\n    const tzH = +(matches[6] || 0);\n    const tzM = +(matches[7] || 0);\n    if (tzH > 23 || tzM > 59 || (strictTimeZone && !tz))\n        return false;\n    if (hr <= 23 && min <= 59 && sec < 60)\n        return true;\n    const utcMin = min - tzM * tzSign;\n    const utcHr = hr - tzH * tzSign - (utcMin < 0 ? 1 : 0);\n    return ((utcHr === 23 || utcHr === -1) &&\n        (utcMin === 59 || utcMin === -1) &&\n        sec < 61);\n};\n/**\n * `[ajv-formats]` ISO8601 DateTime\n * @example `2020-12-12T20:20:40+00:00`\n */\nexport const isDateTime = (value, strictTimeZone) => {\n    const dateTime = value.split(DATE_TIME_SEPARATOR);\n    return (dateTime.length === 2 &&\n        isDate(dateTime[0]) &&\n        isTime(dateTime[1], strictTimeZone));\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;;;;;AACA,MAAM,OAAO;IAAC;IAAG;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;CAAG;AAChE,MAAM,OAAO;AACb,MAAM,OAAO;AACb,MAAM,OAAO;AACb,MAAM,sBAAsB;AAC5B,SAAS,WAAW,IAAI;IACpB,OAAO,OAAO,MAAM,KAAK,CAAC,OAAO,QAAQ,KAAK,OAAO,QAAQ,CAAC;AAClE;AACO,MAAM,SAAS,CAAC;IACnB,MAAM,UAAU,KAAK,IAAI,CAAC;IAC1B,OAAO,CAAC,CAAC;AACb;AAKO,MAAM,SAAS,CAAC;IACnB,MAAM,UAAU,KAAK,IAAI,CAAC;IAC1B,IAAI,CAAC,SACD,OAAO;IACX,MAAM,OAAO,CAAC,OAAO,CAAC,EAAE;IACxB,MAAM,QAAQ,CAAC,OAAO,CAAC,EAAE;IACzB,MAAM,MAAM,CAAC,OAAO,CAAC,EAAE;IACvB,OAAQ,SAAS,KACb,SAAS,MACT,OAAO,KACP,OAAO,CAAC,UAAU,KAAK,WAAW,QAAQ,KAAK,IAAI,CAAC,MAAM;AAClE;AAKO,MAAM,SAAS,CAAC,OAAO;IAC1B,MAAM,UAAU,KAAK,IAAI,CAAC;IAC1B,IAAI,CAAC,SACD,OAAO;IACX,MAAM,KAAK,CAAC,OAAO,CAAC,EAAE;IACtB,MAAM,MAAM,CAAC,OAAO,CAAC,EAAE;IACvB,MAAM,MAAM,CAAC,OAAO,CAAC,EAAE;IACvB,MAAM,KAAK,OAAO,CAAC,EAAE;IACrB,MAAM,SAAS,OAAO,CAAC,EAAE,KAAK,MAAM,CAAC,IAAI;IACzC,MAAM,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC;IAC7B,MAAM,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC;IAC7B,IAAI,MAAM,MAAM,MAAM,MAAO,kBAAkB,CAAC,IAC5C,OAAO;IACX,IAAI,MAAM,MAAM,OAAO,MAAM,MAAM,IAC/B,OAAO;IACX,MAAM,SAAS,MAAM,MAAM;IAC3B,MAAM,QAAQ,KAAK,MAAM,SAAS,CAAC,SAAS,IAAI,IAAI,CAAC;IACrD,OAAQ,CAAC,UAAU,MAAM,UAAU,CAAC,CAAC,KACjC,CAAC,WAAW,MAAM,WAAW,CAAC,CAAC,KAC/B,MAAM;AACd;AAKO,MAAM,aAAa,CAAC,OAAO;IAC9B,MAAM,WAAW,MAAM,KAAK,CAAC;IAC7B,OAAQ,SAAS,MAAM,KAAK,KACxB,OAAO,QAAQ,CAAC,EAAE,KAClB,OAAO,QAAQ,CAAC,EAAE,EAAE;AAC5B","ignoreList":[0]}},
    {"offset": {"line": 973, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 979, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/lib/yahooFinanceTypes.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\nimport { Value } from \"@sinclair/typebox/value\";\nimport { FormatRegistry } from \"@sinclair/typebox\";\nimport { isDate, isDateTime, isYear } from \"./datetime.js\";\nFormatRegistry.Set(\"date\", isDate);\nFormatRegistry.Set(\"date-time\", isDateTime);\nFormatRegistry.Set(\"year\", isYear);\n// Strictly must be empty\nexport const EmptyObjectCoerceToNull = Type.Transform(Type.Object({}, { maxProperties: 0, title: \"EmptyObjectCoerceToNull\" }))\n    .Decode(() => null)\n    .Encode(() => ({}));\n// Technically this will also contain a string 'fmt' key but we don't care because we don't use it\nexport const RawNumber = Type.Transform(Type.Object({\n    raw: Type.Number(),\n}, {\n    title: \"RawNumber\",\n}))\n    .Decode((v) => v.raw)\n    .Encode((v) => ({ raw: v }));\nexport const TwoNumberRangeString = Type.Transform(Type.RegExp(/^(-?\\d+(?:\\.\\d+)?) - (-?\\d+(?:\\.\\d+)?)$/g, {\n    title: \"TwoNumberRangeString\",\n}))\n    .Decode((value) => {\n    // Split the two numbers allowing for negatives on either side\n    const validatedNumbers = value.match(/-?\\d+(?:\\.\\d+)?/g);\n    if (!validatedNumbers) {\n        throw new Error(`Unable to decode number range from: ${value}`);\n    }\n    const [low, high] = validatedNumbers.map((number) => parseFloat(number));\n    if (isNaN(low) || isNaN(high)) {\n        throw new Error(`Unable to decode number range from: ${value}. Decoded value for low is: ${low}, decoded value for high is: ${high}`);\n    }\n    return { low, high };\n})\n    .Encode(({ low, high }) => `${low} - ${high}`);\nconst TwoNumberRange = Type.Object({\n    low: Type.Number(),\n    high: Type.Number(),\n}, { title: \"TwoNumberRange\" });\nexport const EpochTimestamp = Type.Transform(Type.Number())\n    .Decode((v) => new Date(v * 1000))\n    .Encode((v) => +v / 1000);\nexport const RawDateObject = Type.Transform(Type.Object({\n    raw: EpochTimestamp,\n}, { title: \"RawDateObject\" }))\n    .Decode((v) => v.raw)\n    .Encode((v) => ({\n    raw: Value.Encode(EpochTimestamp, v),\n}));\nexport const ISOStringDate = Type.Transform(Type.Union([\n    Type.String({ format: \"date\" }),\n    Type.String({ format: \"year\" }),\n    Type.String({ format: \"date-time\" }),\n], { title: \"ISOStringDate\" }))\n    .Decode((v) => new Date(v))\n    .Encode((v) => v.toISOString());\nexport const YahooFinanceDate = Type.Union([Type.Date(), EpochTimestamp, RawDateObject, ISOStringDate], { title: \"YahooFinanceDate\" });\n/**\n * Validates and decodes all nullable date representations produced by Yahoo\n * e.g. accepted inputs include:\n * - 1612313997\n * - { raw: 1612313997 }\n * - \"2024-02-29\"\n * - \"2024-05-04T13:24:41.100Z\"\n * - {} (coerces to null)\n */\nexport const NullableYahooFinanceDate = Type.Union([YahooFinanceDate, Type.Null(), EmptyObjectCoerceToNull], {\n    title: \"NullableYahooFinanceDate\",\n});\n/**\n * Validates and decodes all number types and coerces to a number\n * e.g. accepted inputs include:\n * - 10.54\n * - {raw: 10.54, fmt: \"%6f\"}\n */\nexport const YahooNumber = Type.Union([RawNumber, Type.Number()], {\n    title: \"YahooNumber\",\n});\n/**\n * Validates and decodes dates represented as milliseconds since the unix epoch to Date objects\n * e.g. accepted inputs include:\n * - 1612313997000\n */\nexport const YahooDateInMs = Type.Transform(Type.Number({ title: \"YahooDateInMs\" }))\n    .Decode((v) => new Date(v))\n    .Encode((v) => +v);\n/**\n * Validates and decodes all nullable number types and coerces to a number or null\n * e.g. accepted inputs include:\n * - 10.54\n * - {raw: 10.54, fmt: \"%6f\"}\n * - null\n * - {} (coerces to null)\n */\nexport const NullableYahooNumber = Type.Union([RawNumber, EmptyObjectCoerceToNull, Type.Number(), Type.Null()], {\n    title: \"NullableYahooNumber\",\n});\n/**\n * Validates and decodes 2 number ranges to a consistent object format of { low: <number>, high: <number> }\n * e.g. accepted inputs include:\n * - { low: 103, high: 10043 }\n * - \"-32432 - 453\"\n */\nexport const YahooTwoNumberRange = Type.Union([TwoNumberRange, TwoNumberRangeString], {\n    title: \"YahooTwoNumberRange\",\n});\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1099, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1105, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/modules/chart.js"],"sourcesContent":["// Co-authored by @gadicc, @PythonCreator27 and @huned.\nimport { Type } from \"@sinclair/typebox\";\nimport { YahooFinanceDate, YahooNumber } from \"../lib/yahooFinanceTypes.js\";\nconst ChartMetaTradingPeriod = Type.Object({\n    timezone: Type.String(), // \"EST\",\n    start: YahooFinanceDate, // new Date(1637355600 * 1000),\n    end: YahooFinanceDate, // new Date(1637370000 * 10000),\n    gmtoffset: YahooNumber, // -18000\n}, {\n    additionalProperties: Type.Any(),\n    title: \"ChartMetaTradingPeriod\",\n});\nconst ChartMetaTradingPeriods = Type.Object({\n    pre: Type.Optional(Type.Array(Type.Array(ChartMetaTradingPeriod))),\n    post: Type.Optional(Type.Array(Type.Array(ChartMetaTradingPeriod))),\n    regular: Type.Optional(Type.Array(Type.Array(ChartMetaTradingPeriod))),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"ChartMetaTradingPeriods\",\n});\nconst ChartResultArrayQuote = Type.Object({\n    date: YahooFinanceDate,\n    high: Type.Union([YahooNumber, Type.Null()]),\n    low: Type.Union([YahooNumber, Type.Null()]),\n    open: Type.Union([YahooNumber, Type.Null()]),\n    close: Type.Union([YahooNumber, Type.Null()]),\n    volume: Type.Union([YahooNumber, Type.Null()]),\n    adjclose: Type.Optional(Type.Union([YahooNumber, Type.Null()])),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"ChartResultArrayQuote\",\n});\nconst ChartEventDividend = Type.Object({\n    amount: YahooNumber,\n    date: YahooFinanceDate,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"ChartEventDividend\",\n});\nconst ChartEventDividends = Type.Object({}, {\n    additionalProperties: ChartEventDividend,\n    title: \"ChartEventDividends\",\n});\nconst ChartEventSplit = Type.Object({\n    date: YahooFinanceDate, // new Date(1598880600 * 1000)\n    numerator: YahooNumber, // 4\n    denominator: YahooNumber, // 1\n    splitRatio: Type.String(), // \"4:1\"\n}, {\n    additionalProperties: Type.Any(),\n});\nconst ChartEventsArray = Type.Object({\n    dividends: Type.Optional(Type.Array(ChartEventDividend)),\n    splits: Type.Optional(Type.Array(ChartEventSplit)),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"ChartEventsArray\",\n});\nconst ChartMeta = Type.Object({\n    currency: Type.String(), // \"USD\"\n    symbol: Type.String(), // \"AAPL\",\n    exchangeName: Type.String(), // \"NMS\",\n    instrumentType: Type.String(), // \"EQUITY\",\n    firstTradeDate: Type.Union([YahooFinanceDate, Type.Null()]), // new Date(345479400 * 1000); null in e.g. \"APS.AX\"\n    regularMarketTime: YahooFinanceDate, // new Date(1637355602 * 1000),\n    gmtoffset: YahooNumber, // -18000,\n    timezone: Type.String(), /// \"EST\",\n    exchangeTimezoneName: Type.String(), // \"America/New_York\",\n    regularMarketPrice: YahooNumber, // 160.55,\n    chartPreviousClose: Type.Optional(YahooNumber), // 79.75; missing in e.g. \"APS.AX\"\n    previousClose: Type.Optional(YahooNumber), // 1137.06\n    scale: Type.Optional(YahooNumber), // 3,\n    priceHint: YahooNumber, // 2,\n    currentTradingPeriod: Type.Object({\n        pre: ChartMetaTradingPeriod,\n        regular: ChartMetaTradingPeriod,\n        post: ChartMetaTradingPeriod,\n    }, {\n        additionalProperties: Type.Any(),\n    }),\n    tradingPeriods: Type.Optional(\n    // TODO, would be great to use correct type as a generic based on\n    // `includePrePost` and `interval`, see #812.\n    Type.Union([\n        ChartMetaTradingPeriods,\n        Type.Array(Type.Array(ChartMetaTradingPeriod)),\n    ])),\n    dataGranularity: Type.String(), // \"1d\",\n    range: Type.String(), // \"\"\n    validRanges: Type.Array(Type.String()), // [\"1d\", \"5d\", \"1mo\", \"3mo\", \"6mo\", \"1y\", \"2y\", \"5y\", \"10y\", \"ytd\", \"max\"]\n}, {\n    additionalProperties: Type.Any(),\n    title: \"ChartMeta\",\n});\nconst ChartResultArraySchema = Type.Object({\n    meta: ChartMeta,\n    events: Type.Optional(ChartEventsArray),\n    quotes: Type.Array(ChartResultArrayQuote),\n}, { title: \"ChartResultArray\" });\nconst ChartEventSplits = Type.Object({}, {\n    additionalProperties: ChartEventSplit,\n    title: \"ChartEventSplits\",\n});\nconst ChartIndicatorQuote = Type.Object({\n    high: Type.Array(Type.Union([YahooNumber, Type.Null()])),\n    low: Type.Array(Type.Union([YahooNumber, Type.Null()])),\n    open: Type.Array(Type.Union([YahooNumber, Type.Null()])),\n    close: Type.Array(Type.Union([YahooNumber, Type.Null()])),\n    volume: Type.Array(Type.Union([YahooNumber, Type.Null()])),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"ChartIndicatorQuote\",\n});\nconst ChartIndicatorAdjclose = Type.Object({\n    adjclose: Type.Optional(Type.Array(Type.Union([YahooNumber, Type.Null()]))), // Missing in e.g. \"APS.AX\"\n}, {\n    additionalProperties: Type.Any(),\n    title: \"ChartIndicatorAdjClose\",\n});\nconst ChartEventsObject = Type.Object({\n    dividends: Type.Optional(ChartEventDividends),\n    splits: Type.Optional(ChartEventSplits),\n}, {\n    additionalProperties: Type.Any(),\n});\nconst ChartIndicatorsObject = Type.Object({\n    quote: Type.Array(ChartIndicatorQuote),\n    adjclose: Type.Optional(Type.Array(ChartIndicatorAdjclose)),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"ChartIndicatorObject\",\n});\nconst ChartResultObjectSchema = Type.Object({\n    meta: ChartMeta,\n    timestamp: Type.Optional(Type.Array(YahooNumber)),\n    events: Type.Optional(ChartEventsObject),\n    indicators: ChartIndicatorsObject,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"ChartResultObject\",\n});\nexport const ChartOptionsSchema = Type.Object({\n    period1: Type.Union([Type.Date(), Type.String(), YahooNumber]),\n    period2: Type.Optional(Type.Union([Type.Date(), Type.String(), YahooNumber])),\n    useYfid: Type.Optional(Type.Boolean()), // true\n    interval: Type.Optional(Type.Union([\n        Type.Literal(\"1m\"),\n        Type.Literal(\"2m\"),\n        Type.Literal(\"5m\"),\n        Type.Literal(\"15m\"),\n        Type.Literal(\"30m\"),\n        Type.Literal(\"60m\"),\n        Type.Literal(\"90m\"),\n        Type.Literal(\"1h\"),\n        Type.Literal(\"1d\"),\n        Type.Literal(\"5d\"),\n        Type.Literal(\"1wk\"),\n        Type.Literal(\"1mo\"),\n        Type.Literal(\"3mo\"),\n    ])),\n    includePrePost: Type.Optional(Type.Boolean()), // true\n    events: Type.Optional(Type.String()), // 'history',\n    lang: Type.Optional(Type.String()), // \"en-US\"\n    return: Type.Optional(Type.Union([Type.Literal(\"array\"), Type.Literal(\"object\")])),\n}, {\n    title: \"ChartOptions\",\n});\nconst ChartOptionsWithReturnArraySchema = Type.Composite([\n    ChartOptionsSchema,\n    Type.Object({\n        return: Type.Optional(Type.Literal(\"array\")),\n    }),\n], {\n    title: \"ChartOptionsWithReturnArray\",\n});\nconst ChartOptionsWithReturnObjectSchema = Type.Composite([\n    ChartOptionsSchema,\n    Type.Object({\n        return: Type.Literal(\"object\"),\n    }),\n], {\n    title: \"ChartOptionsWithReturnObject\",\n});\nconst queryOptionsDefaults = {\n    useYfid: true,\n    interval: \"1d\",\n    includePrePost: true,\n    events: \"div|split|earn\",\n    lang: \"en-US\",\n    return: \"array\",\n};\n/* --- array input, typed output, honor \"return\" param --- */\n// TODO: make this a deprecration passthrough\nexport const _chart = chart;\nexport default async function chart(symbol, queryOptionsOverrides, moduleOptions) {\n    var _a, _b, _c;\n    const returnAs = (queryOptionsOverrides === null || queryOptionsOverrides === void 0 ? void 0 : queryOptionsOverrides.return) || \"array\";\n    const result = (await this._moduleExec({\n        moduleName: \"chart\",\n        query: {\n            assertSymbol: symbol,\n            url: \"https://${YF_QUERY_HOST}/v8/finance/chart/\" + symbol,\n            schema: ChartOptionsSchema,\n            defaults: queryOptionsDefaults,\n            overrides: queryOptionsOverrides,\n            transformWith(queryOptions) {\n                if (!queryOptions.period2)\n                    queryOptions.period2 = new Date();\n                const dates = [\"period1\", \"period2\"];\n                for (const fieldName of dates) {\n                    const value = queryOptions[fieldName];\n                    if (value instanceof Date) {\n                        queryOptions[fieldName] = Math.floor(value.getTime() / 1000);\n                    }\n                    else if (typeof value === \"string\") {\n                        const timestamp = new Date(value).getTime();\n                        if (isNaN(timestamp))\n                            throw new Error(\"yahooFinance.chart() option '\" +\n                                fieldName +\n                                \"' invalid date provided: '\" +\n                                value +\n                                \"'\");\n                        queryOptions[fieldName] = Math.floor(timestamp / 1000);\n                    }\n                }\n                if (queryOptions.period1 === queryOptions.period2) {\n                    throw new Error(\"yahooFinance.chart() options `period1` and `period2` \" +\n                        \"cannot share the same value.\");\n                }\n                // Don't pass this on to Yahoo\n                delete queryOptions.return;\n                return queryOptions;\n            },\n        },\n        result: {\n            schema: ChartResultObjectSchema,\n            transformWith(result) {\n                if (!result.chart)\n                    throw new Error(\"Unexpected result: \" + JSON.stringify(result));\n                const chart = result.chart.result[0];\n                // If there are no quotes, chart.timestamp will be empty, but Yahoo also\n                // gives us chart.indicators.quotes = [{}].  Let's clean that up and\n                // deliver an empty array rather than an invalid ChartIndicatorQuote/\n                if (!chart.timestamp) {\n                    if (chart.indicators.quote.length !== 1)\n                        throw new Error(\"No timestamp with quotes.length !== 1, please report with your query\");\n                    if (Object.keys(chart.indicators.quote[0]).length !== 0)\n                        // i.e. {}\n                        throw new Error(\"No timestamp with unexpected quote, please report with your query\" +\n                            JSON.stringify(chart.indicators.quote[0]));\n                    chart.indicators.quote.pop();\n                }\n                return chart;\n            },\n        },\n        moduleOptions,\n    }));\n    if (returnAs === \"object\") {\n        return result;\n    }\n    else if (returnAs === \"array\") {\n        const timestamp = result.timestamp;\n        /*\n        seems as though yahoo inserts extra quotes at the event times, so no need.\n        if (result.events) {\n          for (let event of [\"dividends\", \"splits\"]) {\n            // @ts-ignore\n            if (result.events[event])\n              // @ts-ignore\n              timestamp = timestamp.filter((ts) => !result.events[event][ts]);\n          }\n        }\n        */\n        // istanbul ignore next\n        if (timestamp &&\n            ((_a = result === null || result === void 0 ? void 0 : result.indicators) === null || _a === void 0 ? void 0 : _a.quote) &&\n            result.indicators.quote[0].high.length !== timestamp.length) {\n            console.log({\n                origTimestampSize: result.timestamp && result.timestamp.length,\n                filteredSize: timestamp.length,\n                quoteSize: result.indicators.quote[0].high.length,\n            });\n            throw new Error(\"Timestamp count mismatch, please report this with the query you used\");\n        }\n        const result2 = {\n            meta: result.meta,\n            quotes: timestamp ? new Array(timestamp.length) : [],\n        };\n        const adjclose = (_c = (_b = result === null || result === void 0 ? void 0 : result.indicators) === null || _b === void 0 ? void 0 : _b.adjclose) === null || _c === void 0 ? void 0 : _c[0].adjclose;\n        if (timestamp)\n            for (let i = 0; i < timestamp.length; i++) {\n                result2.quotes[i] = {\n                    date: new Date(timestamp[i] * 1000),\n                    high: result.indicators.quote[0].high[i],\n                    volume: result.indicators.quote[0].volume[i],\n                    open: result.indicators.quote[0].open[i],\n                    low: result.indicators.quote[0].low[i],\n                    close: result.indicators.quote[0].close[i],\n                };\n                if (adjclose)\n                    result2.quotes[i].adjclose = adjclose[i];\n            }\n        if (result.events) {\n            result2.events = {};\n            for (const event of [\"dividends\", \"splits\"]) {\n                // @ts-expect-error (eatkinson): Fix up type in follow up\n                if (result.events[event])\n                    // @ts-expect-error (eatkinson): Fix up type in follow up\n                    result2.events[event] = Object.values(result.events[event]);\n            }\n        }\n        return result2;\n    }\n    // TypeScript runtime validation ensures no other values for\n    // \"returnAs\" are possible.\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1471, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/modules/historical.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\nimport { Value } from \"@sinclair/typebox/value\";\nimport { YahooFinanceDate, YahooNumber } from \"../lib/yahooFinanceTypes.js\";\nimport { ChartOptionsSchema } from \"./chart.js\";\nimport validateAndCoerceTypebox from \"../lib/validateAndCoerceTypes.js\";\nimport { showNotice } from \"../lib/notices.js\";\nconst HistoricalRowHistorySchema = Type.Object({\n    date: YahooFinanceDate,\n    open: YahooNumber,\n    high: YahooNumber,\n    low: YahooNumber,\n    close: YahooNumber,\n    adjClose: Type.Optional(YahooNumber),\n    volume: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"HistoricalRowHistory\",\n});\nconst HistoricalRowDividendSchema = Type.Object({\n    date: YahooFinanceDate,\n    dividends: YahooNumber,\n}, { title: \"HistoricalRowDividend\" });\nconst HistoricalRowStockSplitSchema = Type.Object({\n    date: YahooFinanceDate,\n    stockSplits: Type.String(),\n}, { title: \"HistoricalRowStockSplit\" });\nconst HistoricalOptionsSchema = Type.Object({\n    period1: Type.Union([Type.Date(), Type.String(), Type.Number()]),\n    period2: Type.Optional(Type.Union([Type.Date(), Type.String(), Type.Number()])),\n    interval: Type.Optional(Type.Union([\n        Type.Literal(\"1d\"),\n        Type.Literal(\"1wk\"),\n        Type.Literal(\"1mo\"),\n    ])),\n    // events: Type.Optional(Type.String()),\n    events: Type.Optional(Type.Union([\n        Type.Literal(\"history\"),\n        Type.Literal(\"dividends\"),\n        Type.Literal(\"split\"),\n    ])),\n    includeAdjustedClose: Type.Optional(Type.Boolean()),\n}, { title: \"HistoricalOptions\" });\nconst HistoricalOptionsEventsHistorySchema = Type.Composite([\n    HistoricalOptionsSchema,\n    Type.Object({\n        events: Type.Optional(Type.Literal(\"history\")),\n    }),\n], { title: \"HistoricalOptionsEventsHistory\" });\nconst HistoricalOptionsEventsDividendsSchema = Type.Composite([\n    HistoricalOptionsSchema,\n    Type.Object({\n        events: Type.Literal(\"dividends\"),\n    }),\n], { title: \"HistoricalOptionsEventsDividends\" });\nconst HistoricalOptionsEventsSplitSchema = Type.Composite([\n    HistoricalOptionsSchema,\n    Type.Object({\n        events: Type.Literal(\"split\"),\n    }),\n], { title: \"HistoricalOptionsEventsSplit\" });\nconst HistoricalHistoryResultSchema = Type.Array(HistoricalRowHistorySchema, {\n    title: \"HistoricalHistoryResult\",\n});\nconst HistoricalDividendsResultSchema = Type.Array(HistoricalRowDividendSchema, {\n    title: \"HistoricalDividendsResult\",\n});\nconst HistoricalStockSplitsResultSchema = Type.Array(HistoricalRowStockSplitSchema, {\n    title: \"HistoricalRowStockSplit\",\n});\nconst queryOptionsDefaults = {\n    interval: \"1d\",\n    events: \"history\",\n    includeAdjustedClose: true,\n};\n// Count number of null values in object (1-level deep)\nfunction nullFieldCount(object) {\n    if (object == null) {\n        return;\n    }\n    let nullCount = 0;\n    for (const val of Object.values(object))\n        if (val === null)\n            nullCount++;\n    return nullCount;\n}\nexport default async function historical(symbol, queryOptionsOverrides, moduleOptions) {\n    var _a, _b, _c, _d, _e;\n    showNotice(\"ripHistorical\");\n    validateAndCoerceTypebox({\n        type: \"options\",\n        data: queryOptionsOverrides !== null && queryOptionsOverrides !== void 0 ? queryOptionsOverrides : {},\n        schema: HistoricalOptionsSchema,\n        options: this._opts.validation,\n    });\n    let schema;\n    if (!queryOptionsOverrides.events ||\n        queryOptionsOverrides.events === \"history\")\n        schema = HistoricalHistoryResultSchema;\n    else if (queryOptionsOverrides.events === \"dividends\")\n        schema = HistoricalDividendsResultSchema;\n    else if (queryOptionsOverrides.events === \"split\")\n        schema = HistoricalStockSplitsResultSchema;\n    else\n        throw new Error(\"No such event type:\" + queryOptionsOverrides.events);\n    const queryOpts = { ...queryOptionsDefaults, ...queryOptionsOverrides };\n    if (!Value.Check(HistoricalOptionsSchema, queryOpts))\n        throw new Error(\"Internal error, please report.  Overrides validated but not defaults?\");\n    // Don't forget that queryOpts are already validated and safe-safe.\n    const eventsMap = { history: \"\", dividends: \"div\", split: \"split\" };\n    const chartQueryOpts = {\n        period1: queryOpts.period1,\n        period2: queryOpts.period2,\n        interval: queryOpts.interval,\n        events: eventsMap[queryOpts.events || \"history\"],\n    };\n    if (!Value.Check(ChartOptionsSchema, chartQueryOpts))\n        throw new Error(\"Internal error, please report.  historical() provided invalid chart() query options.\");\n    // TODO: do we even care?\n    if (queryOpts.includeAdjustedClose === false) {\n        /* */\n    }\n    const result = await this.chart(symbol, chartQueryOpts, {\n        ...moduleOptions,\n        validateResult: true,\n    });\n    let out;\n    if (queryOpts.events === \"dividends\") {\n        out = ((_b = (_a = result.events) === null || _a === void 0 ? void 0 : _a.dividends) !== null && _b !== void 0 ? _b : []).map((d) => ({\n            date: d.date,\n            dividends: d.amount,\n        }));\n    }\n    else if (queryOpts.events === \"split\") {\n        out = ((_d = (_c = result.events) === null || _c === void 0 ? void 0 : _c.splits) !== null && _d !== void 0 ? _d : []).map((s) => ({\n            date: s.date,\n            stockSplits: s.splitRatio,\n        }));\n    }\n    else {\n        out = ((_e = result.quotes) !== null && _e !== void 0 ? _e : [])\n            .filter((quote) => {\n            const fieldCount = Object.keys(quote).length;\n            const nullCount = nullFieldCount(quote);\n            if (nullCount === 0) {\n                // No nulls is a legit (regular) result\n                return true;\n            }\n            else if (nullCount !== fieldCount - 1 /* skip \"date\" */) {\n                // Unhandled case: some but not all values are null.\n                // Note: no need to check for null \"date\", validation does it for us\n                console.error(nullCount, quote);\n                throw new Error(\"Historical returned a result with SOME (but not \" +\n                    \"all) null values.  Please report this, and provide the \" +\n                    \"query that caused it.\");\n            }\n            else {\n                // All fields (except \"date\") are null\n                return false;\n            }\n        })\n            .map((quote) => {\n            if (!quote.adjclose)\n                return quote;\n            const { adjclose, ...rest } = quote;\n            return { ...rest, adjClose: adjclose };\n        });\n    }\n    const validateResult = !moduleOptions ||\n        moduleOptions.validateResult === undefined ||\n        moduleOptions.validateResult === true;\n    const validationOpts = {\n        ...this._opts.validation,\n        // Set logErrors=false if validateResult=false\n        logErrors: validateResult ? this._opts.validation.logErrors : false,\n    };\n    try {\n        return validateAndCoerceTypebox({\n            type: \"result\",\n            data: out,\n            schema,\n            options: validationOpts,\n        });\n    }\n    catch (error) {\n        if (validateResult)\n            throw error;\n    }\n    return out;\n    /*\n    // Original historical() retrieval code when Yahoo API still existed.\n    return this._moduleExec({\n      moduleName: \"historical\",\n  \n      query: {\n        assertSymbol: symbol,\n        url: \"https://${YF_QUERY_HOST}/v7/finance/download/\" + symbol,\n        schema: HistoricalOptionsSchema,\n        defaults: queryOptionsDefaults,\n        overrides: queryOptionsOverrides,\n        fetchType: \"csv\",\n        transformWith(queryOptions: HistoricalOptions) {\n          if (!queryOptions.period2) queryOptions.period2 = new Date();\n  \n          const dates = [\"period1\", \"period2\"] as const;\n          for (const fieldName of dates) {\n            const value = queryOptions[fieldName];\n            if (value instanceof Date)\n              queryOptions[fieldName] = Math.floor(value.getTime() / 1000);\n            else if (typeof value === \"string\") {\n              const timestamp = new Date(value as string).getTime();\n  \n              if (isNaN(timestamp))\n                throw new Error(\n                  \"yahooFinance.historical() option '\" +\n                    fieldName +\n                    \"' invalid date provided: '\" +\n                    value +\n                    \"'\",\n                );\n  \n              queryOptions[fieldName] = Math.floor(timestamp / 1000);\n            }\n          }\n  \n          if (queryOptions.period1 === queryOptions.period2) {\n            throw new Error(\n              \"yahooFinance.historical() options `period1` and `period2` \" +\n                \"cannot share the same value.\",\n            );\n          }\n  \n          return queryOptions;\n        },\n      },\n  \n      result: {\n        schema,\n        transformWith(result: any) {\n          if (result.length === 0) return result;\n  \n          const filteredResults = [];\n          const fieldCount = Object.keys(result[0]).length;\n  \n          // Count number of null values in object (1-level deep)\n          function nullFieldCount(object: unknown) {\n            if (object == null) {\n              return;\n            }\n            let nullCount = 0;\n            for (const val of Object.values(object))\n              if (val === null) nullCount++;\n            return nullCount;\n          }\n  \n          for (const row of result) {\n            const nullCount = nullFieldCount(row);\n  \n            if (nullCount === 0) {\n              // No nulls is a legit (regular) result\n              filteredResults.push(row);\n            } else if (nullCount !== fieldCount - 1 /* skip \"date\" */ /*) {\n      // Unhandled case: some but not all values are null.\n      // Note: no need to check for null \"date\", validation does it for us\n      console.error(nullCount, row);\n      throw new Error(\n        \"Historical returned a result with SOME (but not \" +\n          \"all) null values.  Please report this, and provide the \" +\n          \"query that caused it.\",\n      );\n    } else {\n      // All fields (except \"date\") are null: silently skip (no-op)\n    }\n  }\n\n  /*\n   * We may consider, for future optimization, to count rows and create\n   * new array in advance, and skip consecutive blocks of null results.\n   * Of doubtful utility.\n   */ /*\n   return filteredResults;\n },\n},\n\nmoduleOptions,\n});\n*/\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1775, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1781, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/modules/insights.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\nimport { YahooDateInMs, YahooFinanceDate, YahooNumber, } from \"../lib/yahooFinanceTypes.js\";\nconst InsightsDirection = Type.Union([Type.Literal(\"Bearish\"), Type.Literal(\"Bullish\"), Type.Literal(\"Neutral\")], { title: \"InsightsDirection\" });\nconst InsightsOutlookSchema = Type.Object({\n    stateDescription: Type.String(),\n    direction: InsightsDirection,\n    score: YahooNumber,\n    scoreDescription: Type.String(),\n    sectorDirection: Type.Optional(InsightsDirection),\n    sectorScore: Type.Optional(YahooNumber),\n    sectorScoreDescription: Type.Optional(Type.String()),\n    indexDirection: InsightsDirection,\n    indexScore: YahooNumber,\n    indexScoreDescription: Type.String(),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"InsightsOutlook\",\n});\nconst InsightsInstrumentInfo = Type.Object({\n    keyTechnicals: Type.Object({\n        provider: Type.String(),\n        support: Type.Optional(YahooNumber),\n        resistance: Type.Optional(YahooNumber),\n        stopLoss: Type.Optional(YahooNumber),\n    }, {\n        additionalProperties: Type.Any(),\n    }),\n    technicalEvents: Type.Object({\n        provider: Type.String(),\n        sector: Type.Optional(Type.String()),\n        shortTermOutlook: InsightsOutlookSchema,\n        intermediateTermOutlook: InsightsOutlookSchema,\n        longTermOutlook: InsightsOutlookSchema,\n    }, {\n        additionalProperties: Type.Any(),\n    }),\n    valuation: Type.Object({\n        color: Type.Optional(YahooNumber),\n        description: Type.Optional(Type.String()),\n        discount: Type.Optional(Type.String()),\n        provider: Type.String(),\n        relativeValue: Type.Optional(Type.String()),\n    }, {\n        additionalProperties: Type.Any(),\n    }),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"InsightsInstrumentInfo\",\n});\nconst InsightsCompanySnapshot = Type.Object({\n    sectorInfo: Type.Optional(Type.String()),\n    company: Type.Object({\n        innovativeness: Type.Optional(YahooNumber),\n        hiring: Type.Optional(YahooNumber),\n        sustainability: Type.Optional(YahooNumber),\n        insiderSentiments: Type.Optional(YahooNumber),\n        earningsReports: Type.Optional(YahooNumber),\n        dividends: Type.Optional(YahooNumber),\n    }, {\n        additionalProperties: Type.Any(),\n    }),\n    sector: Type.Object({\n        innovativeness: YahooNumber,\n        hiring: YahooNumber,\n        sustainability: Type.Optional(YahooNumber),\n        insiderSentiments: YahooNumber,\n        earningsReports: Type.Optional(YahooNumber),\n        dividends: YahooNumber,\n    }, {\n        additionalProperties: Type.Any(),\n    }),\n}, { title: \"InsightsCompanySnapshot\", additionalProperties: Type.Any() });\nconst InsightsEventSchema = Type.Object({\n    eventType: Type.String(),\n    pricePeriod: Type.String(),\n    tradingHorizon: Type.String(),\n    tradeType: Type.String(),\n    imageUrl: Type.String(),\n    startDate: YahooFinanceDate,\n    endDate: YahooFinanceDate,\n}, { title: \"InsightsEvent\", additionalProperties: Type.Any() });\nconst InsightsReport = Type.Object({\n    id: Type.String(),\n    headHtml: Type.String(),\n    provider: Type.String(),\n    reportDate: YahooFinanceDate,\n    reportTitle: Type.String(),\n    reportType: Type.String(),\n    targetPrice: Type.Optional(YahooNumber),\n    targetPriceStatus: Type.Optional(Type.Union([\n        Type.Literal(\"Increased\"),\n        Type.Literal(\"Maintained\"),\n        Type.Literal(\"Decreased\"),\n        Type.Literal(\"-\"),\n    ])),\n    investmentRating: Type.Optional(Type.Union([\n        Type.Literal(\"Bullish\"),\n        Type.Literal(\"Neutral\"),\n        Type.Literal(\"Bearish\"),\n    ])),\n    tickers: Type.Optional(Type.Array(Type.String())),\n}, { title: \"InsightsReport\", additionalProperties: Type.Any() });\nconst InsightsSigDev = Type.Object({\n    headline: Type.String(),\n    date: YahooFinanceDate,\n}, { title: \"InsightsSigDev\", additionalProperties: Type.Any() });\nconst InsightsUpsell = Type.Object({\n    msBullishSummary: Type.Optional(Type.Array(Type.String())),\n    msBearishSummary: Type.Optional(Type.Array(Type.String())),\n    msBullishBearishSummariesPublishDate: Type.Optional(YahooDateInMs),\n    companyName: Type.Optional(Type.String()),\n    upsellReportType: Type.Optional(Type.String()),\n}, { title: \"InsightsUpsell\", additionalProperties: Type.Any() });\nconst InsightsResearchReport = Type.Object({\n    reportId: Type.String(),\n    provider: Type.String(),\n    title: Type.String(),\n    reportDate: YahooFinanceDate,\n    summary: Type.String(),\n    investmentRating: Type.Optional(Type.Union([\n        Type.Literal(\"Bullish\"),\n        Type.Literal(\"Neutral\"),\n        Type.Literal(\"Bearish\"),\n    ])),\n}, { title: \"InsightsResearchReport\" });\nconst InsightsSecReport = Type.Object({\n    id: Type.String(),\n    type: Type.String(),\n    title: Type.String(),\n    description: Type.String(),\n    filingDate: YahooDateInMs,\n    snapshotUrl: Type.String(),\n    formType: Type.String(),\n}, {\n    title: \"InsightsSecReport\",\n    additionalProperties: Type.Any(),\n});\nconst InsightsResultSchema = Type.Object({\n    symbol: Type.String(),\n    instrumentInfo: Type.Optional(InsightsInstrumentInfo),\n    companySnapshot: Type.Optional(InsightsCompanySnapshot),\n    recommendation: Type.Optional(Type.Object({\n        targetPrice: Type.Optional(YahooNumber),\n        provider: Type.String(),\n        rating: Type.Union([\n            Type.Literal(\"BUY\"),\n            Type.Literal(\"SELL\"),\n            Type.Literal(\"HOLD\"),\n        ]),\n    })),\n    events: Type.Optional(Type.Array(InsightsEventSchema)),\n    reports: Type.Optional(Type.Array(InsightsReport)),\n    sigDevs: Type.Optional(Type.Array(InsightsSigDev)),\n    upsell: Type.Optional(InsightsUpsell),\n    upsellSearchDD: Type.Optional(Type.Object({\n        researchReports: InsightsResearchReport,\n    })),\n    secReports: Type.Optional(Type.Array(InsightsSecReport)),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"InsightsResult\",\n});\nconst InsightsOptionsSchema = Type.Object({\n    lang: Type.Optional(Type.String()),\n    region: Type.Optional(Type.String()),\n    reportsCount: Type.Optional(YahooNumber),\n}, { title: \"InsightsOptions\" });\nconst queryOptionsDefaults = {\n    lang: \"en-US\",\n    region: \"US\",\n    getAllResearchReports: true,\n    reportsCount: 2,\n};\nexport default function trendingSymbols(symbol, queryOptionsOverrides, moduleOptions) {\n    return this._moduleExec({\n        moduleName: \"insights\",\n        query: {\n            assertSymbol: symbol,\n            url: \"https://${YF_QUERY_HOST}/ws/insights/v2/finance/insights\",\n            schema: InsightsOptionsSchema,\n            defaults: queryOptionsDefaults,\n            overrides: queryOptionsOverrides,\n            runtime: { symbol },\n        },\n        result: {\n            schema: InsightsResultSchema,\n            transformWith(result) {\n                if (!result.finance)\n                    throw new Error(\"Unexpected result: \" + JSON.stringify(result));\n                return result.finance.result;\n            },\n        },\n        moduleOptions,\n    });\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2008, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2014, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/modules/quote.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\nimport { YahooDateInMs, YahooFinanceDate, YahooNumber, YahooTwoNumberRange, } from \"../lib/yahooFinanceTypes.js\";\nexport const QuoteBase = Type.Object({\n    language: Type.String(), // \"en-US\",\n    region: Type.String(), // \"US\",\n    quoteType: Type.String(), // \"EQUITY\" | \"ETF\" | \"MUTUALFUND\";\n    typeDisp: Type.Optional(Type.String()), // \"Equity\", not always present.\n    quoteSourceName: Type.Optional(Type.String()), // \"Delayed Quote\",\n    triggerable: Type.Boolean(), // true,\n    currency: Type.Optional(Type.String()), // \"USD\",\n    // Seems to appear / disappear based not on symbol but network load (#445)\n    customPriceAlertConfidence: Type.Optional(Type.String()), // \"HIGH\" | \"LOW\"; TODO: anything else?\n    marketState: Type.Union([\n        Type.Literal(\"REGULAR\"),\n        Type.Literal(\"CLOSED\"),\n        Type.Literal(\"PRE\"),\n        Type.Literal(\"PREPRE\"),\n        Type.Literal(\"POST\"),\n        Type.Literal(\"POSTPOST\"),\n    ]),\n    tradeable: Type.Boolean(), // false,\n    cryptoTradeable: Type.Optional(Type.Boolean()), // false\n    exchange: Type.String(), // \"NMS\",\n    shortName: Type.Optional(Type.String()), // \"NVIDIA Corporation\",\n    longName: Type.Optional(Type.String()), // \"NVIDIA Corporation\",\n    messageBoardId: Type.Optional(Type.String()), // \"finmb_32307\",\n    exchangeTimezoneName: Type.String(), // \"America/New_York\",\n    exchangeTimezoneShortName: Type.String(), // \"EST\",\n    gmtOffSetMilliseconds: YahooNumber, // -18000000,\n    market: Type.String(), // \"us_market\",\n    esgPopulated: Type.Boolean(), // false,\n    fiftyTwoWeekLowChange: Type.Optional(YahooNumber), // 362.96002,\n    fiftyTwoWeekLowChangePercent: Type.Optional(YahooNumber), // 2.0088556,\n    fiftyTwoWeekRange: Type.Optional(YahooTwoNumberRange), // \"180.68 - 589.07\" -> { low, high }\n    fiftyTwoWeekHighChange: Type.Optional(YahooNumber), // -45.429993,\n    fiftyTwoWeekHighChangePercent: Type.Optional(YahooNumber), // -0.07712155,\n    fiftyTwoWeekLow: Type.Optional(YahooNumber), // 180.68,\n    fiftyTwoWeekHigh: Type.Optional(YahooNumber), // 589.07,\n    fiftyTwoWeekChangePercent: Type.Optional(YahooNumber), // 22.604025\n    dividendDate: Type.Optional(YahooFinanceDate), // 1609200000,\n    // maybe always present on EQUITY?\n    earningsTimestamp: Type.Optional(YahooFinanceDate), // 1614200400,\n    earningsTimestampStart: Type.Optional(YahooFinanceDate), // 1614200400,\n    earningsTimestampEnd: Type.Optional(YahooFinanceDate), // 1614200400,\n    trailingAnnualDividendRate: Type.Optional(YahooNumber), // 0.64,\n    trailingPE: Type.Optional(YahooNumber), // 88.873634,\n    trailingAnnualDividendYield: Type.Optional(YahooNumber), // 0.0011709387,\n    epsTrailingTwelveMonths: Type.Optional(YahooNumber), // 6.117,\n    epsForward: Type.Optional(YahooNumber), // 11.68,\n    epsCurrentYear: Type.Optional(YahooNumber), // 9.72,\n    priceEpsCurrentYear: Type.Optional(YahooNumber), // 55.930042,\n    sharesOutstanding: Type.Optional(YahooNumber), // 619000000,\n    bookValue: Type.Optional(YahooNumber), // 24.772,\n    fiftyDayAverage: Type.Optional(YahooNumber), // 530.8828,\n    fiftyDayAverageChange: Type.Optional(YahooNumber), // 12.757202,\n    fiftyDayAverageChangePercent: Type.Optional(YahooNumber), // 0.024030166,\n    twoHundredDayAverage: Type.Optional(YahooNumber), // 515.8518,\n    twoHundredDayAverageChange: Type.Optional(YahooNumber), // 27.788208,\n    twoHundredDayAverageChangePercent: Type.Optional(YahooNumber), // 0.053868588,\n    marketCap: Type.Optional(YahooNumber), // 336513171456,\n    forwardPE: Type.Optional(YahooNumber), // 46.54452,\n    priceToBook: Type.Optional(YahooNumber), // 21.945745,\n    sourceInterval: YahooNumber, // 15,\n    exchangeDataDelayedBy: YahooNumber, // 0,\n    firstTradeDateMilliseconds: Type.Optional(YahooDateInMs), // 917015400000 -> Date\n    priceHint: YahooNumber, // 2,\n    postMarketChangePercent: Type.Optional(YahooNumber), // 0.093813874,\n    postMarketTime: Type.Optional(YahooFinanceDate), // 1612573179 -> new Date()\n    postMarketPrice: Type.Optional(YahooNumber), // 544.15,\n    postMarketChange: Type.Optional(YahooNumber), // 0.51000977,\n    regularMarketChange: Type.Optional(YahooNumber), // -2.9299927,\n    regularMarketChangePercent: Type.Optional(YahooNumber), // -0.53606904,\n    regularMarketTime: Type.Optional(YahooFinanceDate), // 1612558802 -> new Date()\n    regularMarketPrice: Type.Optional(YahooNumber), // 543.64,\n    regularMarketDayHigh: Type.Optional(YahooNumber), // 549.19,\n    regularMarketDayRange: Type.Optional(YahooTwoNumberRange), // \"541.867 - 549.19\" -> { low, high }\n    regularMarketDayLow: Type.Optional(YahooNumber), // 541.867,\n    regularMarketVolume: Type.Optional(YahooNumber), // 4228841,\n    regularMarketPreviousClose: Type.Optional(YahooNumber), // 546.57,\n    preMarketChange: Type.Optional(YahooNumber), // -2.9299927,\n    preMarketChangePercent: Type.Optional(YahooNumber), // -0.53606904,\n    preMarketTime: Type.Optional(YahooFinanceDate), // 1612558802 -> new Date()\n    preMarketPrice: Type.Optional(YahooNumber), // 543.64,\n    bid: Type.Optional(YahooNumber), // 543.84,\n    ask: Type.Optional(YahooNumber), // 544.15,\n    bidSize: Type.Optional(YahooNumber), // 18,\n    askSize: Type.Optional(YahooNumber), // 8,\n    fullExchangeName: Type.String(), // \"NasdaqGS\",\n    financialCurrency: Type.Optional(Type.String()), // \"USD\",\n    regularMarketOpen: Type.Optional(YahooNumber), // 549.0,\n    averageDailyVolume3Month: Type.Optional(YahooNumber), // 7475022,\n    averageDailyVolume10Day: Type.Optional(YahooNumber), // 5546385,\n    displayName: Type.Optional(Type.String()), // \"NVIDIA\",\n    symbol: Type.String(), // \"NVDA\"\n    underlyingSymbol: Type.Optional(Type.String()), // \"LD.MI\" (for LDO.MI, #363)\n    // only on ETF?  not on EQUITY?\n    ytdReturn: Type.Optional(YahooNumber), // 0.31\n    trailingThreeMonthReturns: Type.Optional(YahooNumber), // 16.98\n    trailingThreeMonthNavReturns: Type.Optional(YahooNumber), // 17.08\n    ipoExpectedDate: Type.Optional(YahooFinanceDate), // \"2020-08-13\",\n    newListingDate: Type.Optional(YahooFinanceDate), // \"2021-02-16\",\n    nameChangeDate: Type.Optional(YahooFinanceDate),\n    prevName: Type.Optional(Type.String()),\n    averageAnalystRating: Type.Optional(Type.String()),\n    pageViewGrowthWeekly: Type.Optional(YahooNumber), // Since 2021-11-11 (#326)\n    openInterest: Type.Optional(YahooNumber), // SOHO (#248)\n    beta: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n});\n/*\n * [TODO] Fields seen in a query but not in this module yet:\n *\n *   - extendedMarketChange\n *   - extendedMarketChangePercent\n *   - extendedMarketPrice\n *   - extendedMarketTime\n *   - dayHigh (separate to regularMarketDayHigh, etc)\n *   - dayLow (separate to regularMarketDayLow, etc)\n *   - volume (separaet to regularMarketVolume, etc)\n *\n * i.e. on yahoo site, with ?fields=dayHigh,dayLow,etc.\n */\n/*\n * Guaranteed fields, even we don't ask for them\n */\nconst QuoteCryptoCurrency = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"CRYPTOCURRENCY\"),\n        circulatingSupply: YahooNumber,\n        fromCurrency: Type.String(), // 'BTC'\n        toCurrency: Type.String(), // 'USD=X'\n        lastMarket: Type.String(), // 'CoinMarketCap'\n        coinImageUrl: Type.Optional(Type.String()), // 'https://s.yimg.com/uc/fin/img/reports-thumbnails/1.png'\n        volume24Hr: Type.Optional(YahooNumber), // 62631043072\n        volumeAllCurrencies: Type.Optional(YahooNumber), // 62631043072\n        startDate: Type.Optional(YahooFinanceDate), // new Date(1367103600 * 1000)\n    }),\n]);\nconst QuoteCurrency = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"CURRENCY\"),\n    }),\n]);\nconst QuoteEtf = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"ETF\"),\n    }),\n]);\nconst QuoteEquity = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"EQUITY\"),\n        dividendRate: Type.Optional(Type.Number()),\n        dividendYield: Type.Optional(Type.Number()),\n    }),\n]);\nconst QuoteFuture = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"FUTURE\"),\n        headSymbolAsString: Type.String(),\n        contractSymbol: Type.Boolean(),\n        underlyingExchangeSymbol: Type.String(),\n        expireDate: YahooFinanceDate,\n        expireIsoDate: YahooFinanceDate,\n    }),\n]);\nconst QuoteIndex = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"INDEX\"),\n    }),\n]);\nconst QuoteOption = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"OPTION\"),\n        strike: YahooNumber,\n        openInterest: YahooNumber,\n        expireDate: YahooNumber,\n        expireIsoDate: YahooNumber,\n        underlyingSymbol: Type.String(),\n    }),\n]);\nconst QuoteMutualfund = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"MUTUALFUND\"),\n    }),\n]);\nconst QuoteSchema = Type.Union([\n    QuoteCryptoCurrency,\n    QuoteCurrency,\n    QuoteEtf,\n    QuoteEquity,\n    QuoteFuture,\n    QuoteIndex,\n    QuoteMutualfund,\n    QuoteOption,\n]);\nconst QuoteFieldSchema = Type.KeyOf(QuoteSchema);\nconst ResultType = Type.Union([\n    Type.Literal(\"array\"),\n    Type.Literal(\"object\"),\n    Type.Literal(\"map\"),\n]);\nconst QuoteResponseArraySchema = Type.Array(QuoteSchema);\nexport const QuoteOptionsSchema = Type.Object({\n    fields: Type.Optional(Type.Array(QuoteFieldSchema)),\n    return: Type.Optional(ResultType),\n});\nconst QuoteOptionsWithReturnArraySchema = Type.Composite([\n    QuoteOptionsSchema,\n    Type.Object({\n        return: Type.Optional(Type.Literal(\"array\")),\n    }),\n]);\nconst QuoteOptionsWithReturnMapSchema = Type.Composite([\n    QuoteOptionsSchema,\n    Type.Object({\n        return: Type.Literal(\"map\"),\n    }),\n]);\nconst QuoteOptionsWithReturnObjectSchema = Type.Composite([\n    QuoteOptionsSchema,\n    Type.Object({\n        return: Type.Literal(\"object\"),\n    }),\n]);\nconst queryOptionsDefaults = {};\nexport default async function quote(query, queryOptionsOverrides, moduleOptions) {\n    const symbols = typeof query === \"string\" ? query : query.join(\",\");\n    const returnAs = queryOptionsOverrides && queryOptionsOverrides.return;\n    const results = await this._moduleExec({\n        moduleName: \"quote\",\n        query: {\n            url: \"https://${YF_QUERY_HOST}/v7/finance/quote\",\n            needsCrumb: true,\n            schema: QuoteOptionsSchema,\n            defaults: queryOptionsDefaults,\n            runtime: { symbols },\n            overrides: queryOptionsOverrides,\n            transformWith(queryOptions) {\n                // Options validation ensures this is a string[]\n                if (queryOptions.fields)\n                    queryOptions.fields.join(\",\");\n                // Don't pass this on to Yahoo\n                delete queryOptions.return;\n                return queryOptions;\n            },\n        },\n        result: {\n            schema: QuoteResponseArraySchema,\n            transformWith(rawResult) {\n                var _a;\n                // console.log({ rawResult: JSON.stringify(rawResult, null, 2) });\n                let results = (_a = rawResult === null || rawResult === void 0 ? void 0 : rawResult.quoteResponse) === null || _a === void 0 ? void 0 : _a.result;\n                if (!results || !Array.isArray(results))\n                    throw new Error(\"Unexpected result: \" + JSON.stringify(rawResult));\n                // Filter out quoteType==='NONE'\n                // So that delisted stocks will be undefined just like symbol-not-found\n                results = results.filter((quote) => (quote === null || quote === void 0 ? void 0 : quote.quoteType) !== \"NONE\");\n                return results;\n            },\n        },\n        moduleOptions,\n    });\n    if (returnAs) {\n        switch (returnAs) {\n            case \"array\":\n                return results;\n            case \"object\": {\n                const object = {};\n                for (const result of results)\n                    object[result.symbol] = result;\n                return object; // TODO: type\n            }\n            case \"map\": {\n                const map = new Map();\n                for (const result of results)\n                    map.set(result.symbol, result);\n                return map; // TODO: type\n            }\n        }\n    }\n    else {\n        // By default, match the query input shape (string or string[]).\n        return typeof query === \"string\"\n            ? results[0]\n            : results;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2319, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/modules/options.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\nimport { YahooFinanceDate, YahooNumber } from \"../lib/yahooFinanceTypes.js\";\nimport { QuoteBase } from \"./quote.js\";\nimport { Value } from \"@sinclair/typebox/value\";\n/*\n * [TODO] Fields seen in a query but not in this module yet:\n *\n *   - extendedMarketChange\n *   - extendedMarketChangePercent\n *   - extendedMarketPrice\n *   - extendedMarketTime\n *   - dayHigh (separate to regularMarketDayHigh, etc)\n *   - dayLow (separate to regularMarketDayLow, etc)\n *   - volume (separate to regularMarketVolume, etc)\n *\n * i.e. on yahoo site, with ?fields=dayHigh,dayLow,etc.\n */\n/*\n * Guaranteed fields, even we don't ask for them\n */\nconst QuoteCryptoCurrencySchema = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"CRYPTOCURRENCY\"),\n        circulatingSupply: YahooNumber,\n        fromCurrency: Type.String(), // 'BTC'\n        toCurrency: Type.String(), // 'USD=X'\n        lastMarket: Type.String(), // 'CoinMarketCap'\n        coinImageUrl: Type.Optional(Type.String()), // 'https://s.yimg.com/uc/fin/img/reports-thumbnails/1.png'\n        volume24Hr: Type.Optional(YahooNumber), // 62631043072\n        volumeAllCurrencies: Type.Optional(YahooNumber), // 62631043072\n        startDate: Type.Optional(YahooFinanceDate), // new Date(1367103600 * 1000)\n    }),\n], { title: \"QuoteCryptoCurrency\" });\nconst QuoteCurrencySchema = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"CURRENCY\"),\n    }),\n], { title: \"QuoteCurrency\" });\nconst QuoteEtfSchema = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"ETF\"),\n    }),\n]);\nconst QuoteEquitySchema = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"EQUITY\"),\n        dividendRate: Type.Optional(Type.Number()),\n        dividendYield: Type.Optional(Type.Number()),\n    }),\n], { title: \"QuoteEquity\" });\nconst QuoteFutureSchema = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"FUTURE\"),\n        headSymbolAsString: Type.String(),\n        contractSymbol: Type.Boolean(),\n        underlyingExchangeSymbol: Type.String(),\n        expireDate: YahooFinanceDate,\n        expireIsoDate: YahooFinanceDate,\n    }),\n], {\n    title: \"QuoteFuture\",\n});\nconst QuoteIndexSchema = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"INDEX\"),\n    }),\n], {\n    title: \"QuoteIndex\",\n});\nconst QuoteOptionSchema = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"OPTION\"),\n        strike: YahooNumber,\n        openInterest: YahooNumber,\n        expireDate: YahooNumber,\n        expireIsoDate: YahooNumber,\n        underlyingSymbol: Type.String(),\n    }),\n], {\n    title: \"QuoteOption\",\n});\nconst QuoteMutualfundSchema = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"MUTUALFUND\"),\n    }),\n], {\n    title: \"QuoteMutualFund\",\n});\nconst QuoteSchema = Type.Union([\n    QuoteCryptoCurrencySchema,\n    QuoteCurrencySchema,\n    QuoteEtfSchema,\n    QuoteEquitySchema,\n    QuoteFutureSchema,\n    QuoteIndexSchema,\n    QuoteMutualfundSchema,\n    QuoteOptionSchema,\n], {\n    title: \"Quote\",\n});\nconst CallOrPutSchema = Type.Object({\n    contractSymbol: Type.String(),\n    strike: YahooNumber,\n    currency: Type.Optional(Type.String()),\n    lastPrice: YahooNumber,\n    change: YahooNumber,\n    percentChange: Type.Optional(YahooNumber),\n    volume: Type.Optional(YahooNumber),\n    openInterest: Type.Optional(YahooNumber),\n    bid: Type.Optional(YahooNumber),\n    ask: Type.Optional(YahooNumber),\n    contractSize: Type.Literal(\"REGULAR\"),\n    expiration: YahooFinanceDate,\n    lastTradeDate: YahooFinanceDate,\n    impliedVolatility: YahooNumber,\n    inTheMoney: Type.Boolean(),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"CallOrPut\",\n});\nconst OptionSchema = Type.Object({\n    expirationDate: YahooFinanceDate,\n    hasMiniOptions: Type.Boolean(),\n    calls: Type.Array(CallOrPutSchema),\n    puts: Type.Array(CallOrPutSchema),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"Option\",\n});\nconst OptionsResultSchema = Type.Object({\n    underlyingSymbol: Type.String(),\n    expirationDates: Type.Array(YahooFinanceDate),\n    strikes: Type.Array(YahooNumber),\n    hasMiniOptions: Type.Boolean(),\n    quote: QuoteSchema,\n    options: Type.Array(OptionSchema),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"OptionsResult\",\n});\nconst OptionsOptionsSchema = Type.Object({\n    formatted: Type.Optional(Type.Boolean()),\n    lang: Type.Optional(Type.String()),\n    region: Type.Optional(Type.String()),\n    date: Type.Optional(YahooFinanceDate),\n}, {\n    title: \"OptionsOptions\",\n});\nconst queryOptionsDefaults = {\n    formatted: false,\n    lang: \"en-US\",\n    region: \"US\",\n};\nexport default function options(symbol, queryOptionsOverrides, moduleOptions) {\n    return this._moduleExec({\n        moduleName: \"options\",\n        query: {\n            assertSymbol: symbol,\n            url: \"https://${YF_QUERY_HOST}/v7/finance/options/\" + symbol,\n            needsCrumb: true,\n            schema: OptionsOptionsSchema,\n            defaults: queryOptionsDefaults,\n            overrides: queryOptionsOverrides,\n            transformWith(queryOptions) {\n                // This is honestly the easiest way to coerce the date properly\n                const parsed = Value.Decode(OptionsOptionsSchema, queryOptions);\n                const transformed = parsed.date\n                    ? {\n                        ...parsed,\n                        date: Math.floor(parsed.date.getTime() / 1000),\n                    }\n                    : parsed;\n                return transformed;\n            },\n        },\n        result: {\n            schema: OptionsResultSchema,\n            transformWith(result) {\n                if (!result.optionChain)\n                    throw new Error(\"Unexpected result: \" + JSON.stringify(result));\n                return result.optionChain.result[0];\n            },\n        },\n        moduleOptions,\n    });\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2523, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2529, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/modules/quoteSummary-iface.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\nimport { NullableYahooFinanceDate, NullableYahooNumber, YahooFinanceDate, YahooNumber, } from \"../lib/yahooFinanceTypes.js\";\n/*\n * To generate the initial file, we took the output of all submodules for\n * 'AAPL', 'OCDO.L', '0700.HK' and '^IXIC' and ran the results through\n * the awesome https://app.quicktype.io/\n * and then the smashing https://sinclairzx81.github.io/typebox-workbench\n *\n * Manual cleanup afterwards:\n *\n *  1) Spaces: 4 to 2\n *  ~~2) Wrapped in a module~~ <--- undid this after tooling issues.\n *  3) Alphabeticalize QuoteSummaryResult\n */\nvar EnumGrade;\n(function (EnumGrade) {\n    EnumGrade[\"Accumulate\"] = \"Accumulate\";\n    EnumGrade[\"Add\"] = \"Add\";\n    EnumGrade[\"Average\"] = \"Average\";\n    EnumGrade[\"BelowAverage\"] = \"Below Average\";\n    EnumGrade[\"Buy\"] = \"Buy\";\n    EnumGrade[\"ConvictionBuy\"] = \"Conviction Buy\";\n    EnumGrade[\"Empty\"] = \"\";\n    EnumGrade[\"EqualWeight\"] = \"Equal-Weight\";\n    EnumGrade[\"FairValue\"] = \"Fair Value\";\n    EnumGrade[\"GradeEqualWeight\"] = \"Equal-weight\";\n    EnumGrade[\"GradeLongTermBuy\"] = \"Long-term Buy\";\n    EnumGrade[\"Hold\"] = \"Hold\";\n    EnumGrade[\"LongTermBuy\"] = \"Long-Term Buy\";\n    EnumGrade[\"MarketOutperform\"] = \"Market Outperform\";\n    EnumGrade[\"MarketPerform\"] = \"Market Perform\";\n    EnumGrade[\"Mixed\"] = \"Mixed\";\n    EnumGrade[\"Negative\"] = \"Negative\";\n    EnumGrade[\"Neutral\"] = \"Neutral\";\n    EnumGrade[\"InLine\"] = \"In-Line\";\n    EnumGrade[\"Outperform\"] = \"Outperform\";\n    EnumGrade[\"Overweight\"] = \"Overweight\";\n    EnumGrade[\"PeerPerform\"] = \"Peer Perform\";\n    EnumGrade[\"Perform\"] = \"Perform\";\n    EnumGrade[\"Positive\"] = \"Positive\";\n    EnumGrade[\"Reduce\"] = \"Reduce\";\n    EnumGrade[\"SectorOutperform\"] = \"Sector Outperform\";\n    EnumGrade[\"SectorPerform\"] = \"Sector Perform\";\n    EnumGrade[\"SectorWeight\"] = \"Sector Weight\";\n    EnumGrade[\"Sell\"] = \"Sell\";\n    EnumGrade[\"StrongBuy\"] = \"Strong Buy\";\n    EnumGrade[\"TopPick\"] = \"Top Pick\";\n    EnumGrade[\"Underperform\"] = \"Underperform\";\n    EnumGrade[\"Underperformer\"] = \"Underperformer\";\n    EnumGrade[\"Underweight\"] = \"Underweight\";\n    EnumGrade[\"Trim\"] = \"Trim\";\n    EnumGrade[\"AboveAverage\"] = \"Above Average\";\n    EnumGrade[\"Inline\"] = \"In-line\";\n    EnumGrade[\"Outperformer\"] = \"Outperformer\";\n    EnumGrade[\"OVerweight\"] = \"OVerweight\";\n    EnumGrade[\"Cautious\"] = \"Cautious\";\n    EnumGrade[\"MarketWeight\"] = \"Market Weight\";\n    EnumGrade[\"SectorUnderperform\"] = \"Sector Underperform\";\n    EnumGrade[\"MarketUnderperform\"] = \"Market Underperform\";\n    EnumGrade[\"Peerperform\"] = \"Peer perform\";\n    EnumGrade[\"GraduallyAccumulate\"] = \"Gradually Accumulate\";\n    EnumGrade[\"ActionListBuy\"] = \"Action List Buy\";\n    EnumGrade[\"Performer\"] = \"Performer\";\n    EnumGrade[\"SectorPerformer\"] = \"Sector Performer\";\n    EnumGrade[\"SpeculativeBuy\"] = \"Speculative Buy\";\n    EnumGrade[\"StrongSell\"] = \"Strong Sell\";\n    EnumGrade[\"SpeculativeHold\"] = \"Speculative Hold\";\n    EnumGrade[\"NotRated\"] = \"Not Rated\";\n    EnumGrade[\"HoldNeutral\"] = \"Hold Neutral\";\n    EnumGrade[\"Developing\"] = \"Developing\";\n    EnumGrade[\"buy\"] = \"buy\";\n    EnumGrade[\"HOld\"] = \"HOld\";\n    EnumGrade[\"TradingSell\"] = \"Trading Sell\";\n    EnumGrade[\"Tender\"] = \"Tender\";\n    EnumGrade[\"marketperform\"] = \"market perform\";\n    EnumGrade[\"BUy\"] = \"BUy\";\n})(EnumGrade || (EnumGrade = {}));\nvar Action;\n(function (Action) {\n    Action[\"Down\"] = \"down\";\n    Action[\"Init\"] = \"init\";\n    Action[\"Main\"] = \"main\";\n    Action[\"Reit\"] = \"reit\";\n    Action[\"Up\"] = \"up\";\n})(Action || (Action = {}));\nconst Grade = Type.Enum(EnumGrade, { title: \"QuoteSummaryEnumGrade\" });\nconst ActionSchema = Type.Enum(Action, { title: \"QuoteSummaryAction\" });\nconst UpgradeDowngradeHistoryHistorySchema = Type.Object({\n    epochGradeDate: YahooFinanceDate,\n    firm: Type.String(),\n    toGrade: Grade,\n    fromGrade: Type.Optional(Grade),\n    action: ActionSchema,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryUpgradeDowngradeHistoryHistory\",\n});\nconst UpgradeDowngradeHistorySchema = Type.Object({\n    history: Type.Array(UpgradeDowngradeHistoryHistorySchema),\n    maxAge: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryUpgradeDowngradeHistory\",\n});\nconst TopHoldingsSectorWeightingSchema = Type.Object({\n    realestate: Type.Optional(YahooNumber),\n    consumer_cyclical: Type.Optional(YahooNumber),\n    basic_materials: Type.Optional(YahooNumber),\n    consumer_defensive: Type.Optional(YahooNumber),\n    technology: Type.Optional(YahooNumber),\n    communication_services: Type.Optional(YahooNumber),\n    financial_services: Type.Optional(YahooNumber),\n    utilities: Type.Optional(YahooNumber),\n    industrials: Type.Optional(YahooNumber),\n    energy: Type.Optional(YahooNumber),\n    healthcare: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryTopHoldingsSectorWeighting\",\n});\nconst TopHoldingsBondRatingSchema = Type.Object({\n    a: Type.Optional(YahooNumber),\n    aa: Type.Optional(YahooNumber),\n    aaa: Type.Optional(YahooNumber),\n    other: Type.Optional(YahooNumber),\n    b: Type.Optional(YahooNumber),\n    bb: Type.Optional(YahooNumber),\n    bbb: Type.Optional(YahooNumber),\n    below_b: Type.Optional(YahooNumber),\n    us_government: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryTopHoldingsBondRating\",\n});\nconst TopHoldingsEquityHoldingsSchema = Type.Object({\n    medianMarketCap: Type.Optional(YahooNumber),\n    medianMarketCapCat: Type.Optional(YahooNumber),\n    priceToBook: YahooNumber,\n    priceToBookCat: Type.Optional(YahooNumber),\n    priceToCashflow: YahooNumber,\n    priceToCashflowCat: Type.Optional(YahooNumber),\n    priceToEarnings: YahooNumber,\n    priceToEarningsCat: Type.Optional(YahooNumber),\n    priceToSales: YahooNumber,\n    priceToSalesCat: Type.Optional(YahooNumber),\n    threeYearEarningsGrowth: Type.Optional(YahooNumber),\n    threeYearEarningsGrowthCat: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryTopHoldingsEquityHoldings\",\n});\nconst TopHoldingsHoldingSchema = Type.Object({\n    symbol: Type.String(),\n    holdingName: Type.String(),\n    holdingPercent: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryTopHoldingsHolding\",\n});\nconst TopHoldingsSchema = Type.Object({\n    maxAge: YahooNumber,\n    stockPosition: Type.Optional(YahooNumber),\n    bondPosition: Type.Optional(YahooNumber),\n    holdings: Type.Array(TopHoldingsHoldingSchema),\n    equityHoldings: TopHoldingsEquityHoldingsSchema,\n    bondHoldings: Type.Object({}),\n    bondRatings: Type.Array(TopHoldingsBondRatingSchema),\n    sectorWeightings: Type.Array(TopHoldingsSectorWeightingSchema),\n    cashPosition: Type.Optional(YahooNumber),\n    otherPosition: Type.Optional(YahooNumber),\n    preferredPosition: Type.Optional(YahooNumber),\n    convertiblePosition: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryTopHoldings\",\n});\nconst SummaryProfileSchema = Type.Object({\n    address1: Type.Optional(Type.String()),\n    address2: Type.Optional(Type.String()),\n    address3: Type.Optional(Type.String()),\n    city: Type.Optional(Type.String()),\n    state: Type.Optional(Type.String()),\n    zip: Type.Optional(Type.String()),\n    country: Type.Optional(Type.String()),\n    phone: Type.Optional(Type.String()),\n    fax: Type.Optional(Type.String()),\n    website: Type.Optional(Type.String()),\n    industry: Type.Optional(Type.String()),\n    industryDisp: Type.Optional(Type.String()),\n    sector: Type.Optional(Type.String()),\n    sectorDisp: Type.Optional(Type.String()),\n    longBusinessSummary: Type.Optional(Type.String()),\n    fullTimeEmployees: Type.Optional(YahooNumber),\n    companyOfficers: Type.Array(Type.Any()),\n    maxAge: YahooNumber,\n    twitter: Type.Optional(Type.String()), // in e.g. \"ADA-USD\" (#418)\n    // seems like for cryptocurency only\n    // TODO: how does this relate to Quote type.  Common base?\n    name: Type.Optional(Type.String()), // 'Bitcoin'\n    startDate: Type.Optional(YahooFinanceDate), // new Date('2013-04-28')\n    description: Type.Optional(Type.String()), // 'Bitcoin (BTC) is a cryptocurrency...'\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummarySummaryProfile\",\n});\nconst SummaryDetailSchema = Type.Object({\n    maxAge: YahooNumber,\n    priceHint: YahooNumber,\n    previousClose: Type.Optional(YahooNumber), // missing in e.g. \"APS.AX\"\n    open: Type.Optional(YahooNumber),\n    dayLow: Type.Optional(YahooNumber),\n    dayHigh: Type.Optional(YahooNumber),\n    regularMarketPreviousClose: Type.Optional(YahooNumber), // missing in e.g. \"APS.AX\"\n    regularMarketOpen: Type.Optional(YahooNumber),\n    regularMarketDayLow: Type.Optional(YahooNumber),\n    regularMarketDayHigh: Type.Optional(YahooNumber),\n    regularMarketVolume: Type.Optional(YahooNumber),\n    dividendRate: Type.Optional(YahooNumber),\n    dividendYield: Type.Optional(YahooNumber),\n    exDividendDate: Type.Optional(YahooFinanceDate),\n    payoutRatio: Type.Optional(YahooNumber),\n    fiveYearAvgDividendYield: Type.Optional(YahooNumber),\n    beta: Type.Optional(YahooNumber),\n    trailingPE: Type.Optional(YahooNumber),\n    forwardPE: Type.Optional(YahooNumber),\n    volume: Type.Optional(YahooNumber),\n    averageVolume: Type.Optional(YahooNumber),\n    averageVolume10days: Type.Optional(YahooNumber),\n    averageDailyVolume10Day: Type.Optional(YahooNumber),\n    bid: Type.Optional(YahooNumber),\n    ask: Type.Optional(YahooNumber),\n    bidSize: Type.Optional(YahooNumber),\n    askSize: Type.Optional(YahooNumber),\n    marketCap: Type.Optional(YahooNumber),\n    fiftyDayAverage: Type.Optional(YahooNumber),\n    fiftyTwoWeekLow: Type.Optional(YahooNumber),\n    fiftyTwoWeekHigh: Type.Optional(YahooNumber),\n    twoHundredDayAverage: Type.Optional(YahooNumber),\n    priceToSalesTrailing12Months: Type.Optional(YahooNumber),\n    trailingAnnualDividendRate: Type.Optional(YahooNumber),\n    trailingAnnualDividendYield: Type.Optional(YahooNumber),\n    currency: Type.String(),\n    algorithm: Type.Null(),\n    tradeable: Type.Boolean(),\n    yield: Type.Optional(YahooNumber),\n    totalAssets: Type.Optional(YahooNumber),\n    navPrice: Type.Optional(YahooNumber),\n    ytdReturn: Type.Optional(YahooNumber),\n    // crypto only (optional, or null in other types)\n    // TODO: how does Price / SummaryDetail compare? common base?\n    fromCurrency: Type.Union([Type.String(), Type.Null()]), // 'BTC'\n    toCurrency: Type.Optional(Type.Union([Type.String(), Type.Null()])), // 'USD-X'\n    lastMarket: Type.Union([Type.String(), Type.Null()]), // 'CoinMarketCap'\n    volume24Hr: Type.Optional(YahooNumber), // 62650314752\n    volumeAllCurrencies: Type.Optional(YahooNumber), // 62650314752\n    circulatingSupply: Type.Optional(YahooNumber), // 18638932\n    startDate: Type.Optional(YahooFinanceDate), // new Date(1367107200 * 1000)\n    coinMarketCapLink: Type.Optional(Type.Union([Type.String(), Type.Null()])), // \"https://coinmarketcap.com/currencies/cardano\"\n    // futures\n    expireDate: Type.Optional(YahooFinanceDate), // 1656374400,\n    openInterest: Type.Optional(YahooNumber), // 444411,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummarySummaryDetail\",\n});\n// May consider switching this to string, as we keep finding more and more.\nconst FilingType = Type.Union([\n    Type.Literal(\"10-K\"),\n    Type.Literal(\"10-Q\"),\n    Type.Literal(\"8-K\"),\n    Type.Literal(\"8-K/A\"),\n    Type.Literal(\"10-K/A\"),\n    Type.Literal(\"10-Q/A\"),\n    Type.Literal(\"SD\"),\n    Type.Literal(\"PX14A6G\"),\n    Type.Literal(\"SC 13G/A\"),\n    Type.Literal(\"DEFA14A\"),\n    Type.Literal(\"25-NSE\"),\n    Type.Literal(\"S-8 POS\"),\n    Type.Literal(\"6-K\"),\n    Type.Literal(\"F-3ASR\"),\n    Type.Literal(\"SC 13D/A\"),\n    Type.Literal(\"20-F\"),\n    Type.Literal(\"425\"),\n    Type.Literal(\"SC14D9C\"),\n    Type.Literal(\"SC 13G\"),\n    Type.Literal(\"S-8\"),\n    Type.Literal(\"DEF 14A\"),\n    Type.Literal(\"F-10\"),\n], {\n    title: \"QuoteSummaryFilingType\",\n});\nconst FilingSchema = Type.Object({\n    date: Type.String(),\n    epochDate: YahooFinanceDate,\n    type: FilingType,\n    title: Type.String(),\n    edgarUrl: Type.String(),\n    maxAge: YahooNumber,\n    url: Type.Optional(Type.String()),\n    exhibits: Type.Optional(Type.Array(Type.Object({\n        type: Type.String(),\n        url: Type.String(),\n        downloadUrl: Type.Optional(Type.String()),\n    }))),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryFiling\",\n});\nconst SECFilingsSchema = Type.Object({\n    filings: Type.Array(FilingSchema),\n    maxAge: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummarySECFilings\",\n});\nconst RecommendationTrendTrendSchema = Type.Object({\n    period: Type.String(),\n    strongBuy: YahooNumber,\n    buy: YahooNumber,\n    hold: YahooNumber,\n    sell: YahooNumber,\n    strongSell: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryRecommendationTrendTrend\",\n});\nconst RecommendationTrendSchema = Type.Object({\n    trend: Type.Array(RecommendationTrendTrendSchema),\n    maxAge: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryRecommendationTrend\",\n});\nconst QuoteTypeSchema = Type.Object({\n    exchange: Type.String(),\n    quoteType: Type.String(),\n    symbol: Type.String(),\n    underlyingSymbol: Type.String(),\n    shortName: Type.Union([Type.Null(), Type.String()]),\n    longName: Type.Union([Type.Null(), Type.String()]),\n    firstTradeDateEpochUtc: NullableYahooFinanceDate,\n    timeZoneFullName: Type.String(),\n    timeZoneShortName: Type.String(),\n    uuid: Type.String(),\n    messageBoardId: Type.Optional(Type.Union([Type.Null(), Type.String()])),\n    gmtOffSetMilliseconds: YahooNumber,\n    maxAge: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryQuoteType\",\n});\nconst PriceSchema = Type.Object({\n    averageDailyVolume10Day: Type.Optional(YahooNumber),\n    averageDailyVolume3Month: Type.Optional(YahooNumber),\n    exchange: Type.Optional(Type.String()),\n    exchangeName: Type.Optional(Type.String()),\n    exchangeDataDelayedBy: Type.Optional(YahooNumber),\n    maxAge: YahooNumber,\n    postMarketChangePercent: Type.Optional(YahooNumber),\n    postMarketChange: Type.Optional(YahooNumber),\n    postMarketTime: Type.Optional(YahooFinanceDate),\n    postMarketPrice: Type.Optional(YahooNumber),\n    postMarketSource: Type.Optional(Type.String()),\n    preMarketChangePercent: Type.Optional(YahooNumber),\n    preMarketChange: Type.Optional(YahooNumber),\n    preMarketTime: Type.Optional(YahooFinanceDate),\n    preMarketPrice: Type.Optional(YahooNumber),\n    preMarketSource: Type.Optional(Type.String()),\n    priceHint: YahooNumber,\n    regularMarketChangePercent: Type.Optional(YahooNumber),\n    regularMarketChange: Type.Optional(YahooNumber),\n    regularMarketTime: Type.Optional(YahooFinanceDate),\n    regularMarketPrice: Type.Optional(YahooNumber),\n    regularMarketDayHigh: Type.Optional(YahooNumber),\n    regularMarketDayLow: Type.Optional(YahooNumber),\n    regularMarketVolume: Type.Optional(YahooNumber),\n    regularMarketPreviousClose: Type.Optional(YahooNumber),\n    regularMarketSource: Type.Optional(Type.String()),\n    regularMarketOpen: Type.Optional(YahooNumber),\n    quoteSourceName: Type.Optional(Type.String()),\n    quoteType: Type.String(),\n    symbol: Type.String(),\n    underlyingSymbol: Type.Union([Type.Null(), Type.String()]),\n    shortName: Type.Union([Type.Null(), Type.String()]),\n    longName: Type.Union([Type.Null(), Type.String()]),\n    lastMarket: Type.Union([Type.Null(), Type.String()]),\n    marketState: Type.Optional(Type.String()),\n    marketCap: Type.Optional(YahooNumber),\n    currency: Type.Optional(Type.String()),\n    currencySymbol: Type.Optional(Type.String()),\n    fromCurrency: Type.Union([Type.String(), Type.Null()]),\n    toCurrency: Type.Optional(Type.Union([Type.String(), Type.Null()])),\n    volume24Hr: Type.Optional(YahooNumber),\n    volumeAllCurrencies: Type.Optional(YahooNumber),\n    circulatingSupply: Type.Optional(YahooNumber),\n    expireDate: Type.Optional(YahooFinanceDate),\n    openInterest: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryPrice\",\n});\nconst NetSharePurchaseActivitySchema = Type.Object({\n    maxAge: YahooNumber,\n    period: Type.String(),\n    buyInfoCount: YahooNumber,\n    buyInfoShares: YahooNumber,\n    buyPercentInsiderShares: Type.Optional(YahooNumber),\n    sellInfoCount: YahooNumber,\n    sellInfoShares: Type.Optional(YahooNumber),\n    sellPercentInsiderShares: Type.Optional(YahooNumber),\n    netInfoCount: YahooNumber,\n    netInfoShares: YahooNumber,\n    netPercentInsiderShares: Type.Optional(YahooNumber),\n    totalInsiderShares: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryNetSharePurchaseActivity\",\n});\nconst MajorHoldersBreakdownSchema = Type.Object({\n    maxAge: YahooNumber,\n    insidersPercentHeld: Type.Optional(YahooNumber),\n    institutionsPercentHeld: Type.Optional(YahooNumber),\n    institutionsFloatPercentHeld: Type.Optional(YahooNumber),\n    institutionsCount: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryMajorHoldersBreakdown\",\n});\nvar EnumOwnership;\n(function (EnumOwnership) {\n    EnumOwnership[\"D\"] = \"D\";\n    EnumOwnership[\"I\"] = \"I\";\n})(EnumOwnership || (EnumOwnership = {}));\nvar EnumRelation;\n(function (EnumRelation) {\n    EnumRelation[\"ChairmanOfTheBoard\"] = \"Chairman of the Board\";\n    EnumRelation[\"ChiefExecutiveOfficer\"] = \"Chief Executive Officer\";\n    EnumRelation[\"ChiefFinancialOfficer\"] = \"Chief Financial Officer\";\n    EnumRelation[\"ChiefOperatingOfficer\"] = \"Chief Operating Officer\";\n    EnumRelation[\"ChiefTechnologyOfficer\"] = \"Chief Technology Officer\";\n    EnumRelation[\"Director\"] = \"Director\";\n    EnumRelation[\"DirectorIndependent\"] = \"Director (Independent)\";\n    EnumRelation[\"Empty\"] = \"\";\n    EnumRelation[\"GeneralCounsel\"] = \"General Counsel\";\n    EnumRelation[\"IndependentNonExecutiveDirector\"] = \"Independent Non-Executive Director\";\n    EnumRelation[\"Officer\"] = \"Officer\";\n    EnumRelation[\"President\"] = \"President\";\n})(EnumRelation || (EnumRelation = {}));\nconst Relation = Type.Enum(EnumRelation, { title: \"QuoteSummaryRelation\" });\nconst OwnershipEnumSchema = Type.Enum(EnumOwnership, {\n    title: \"QuoteSummaryOwnershipEnum\",\n});\nconst TransactionSchema = Type.Object({\n    maxAge: YahooNumber,\n    shares: YahooNumber,\n    filerUrl: Type.String(),\n    transactionText: Type.String(),\n    filerName: Type.String(),\n    filerRelation: Type.Union([Relation, Type.String()]),\n    moneyText: Type.String(),\n    startDate: YahooFinanceDate,\n    ownership: Type.Union([OwnershipEnumSchema, Type.String()]),\n    value: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryTransaction\",\n});\nconst InsiderTransactionsSchema = Type.Object({\n    transactions: Type.Array(TransactionSchema),\n    maxAge: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryInsiderTransactions\",\n});\nconst HolderSchema = Type.Object({\n    maxAge: YahooNumber,\n    name: Type.String(),\n    relation: Type.Union([Relation, Type.String()]),\n    url: Type.String(),\n    transactionDescription: Type.String(),\n    latestTransDate: YahooFinanceDate,\n    positionDirect: Type.Optional(YahooNumber),\n    positionDirectDate: Type.Optional(YahooFinanceDate),\n    positionIndirect: Type.Optional(YahooNumber),\n    positionIndirectDate: Type.Optional(YahooFinanceDate),\n    positionSummaryDate: Type.Optional(YahooFinanceDate),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryHolder\",\n});\nconst HoldersSchema = Type.Object({\n    holders: Type.Array(HolderSchema),\n    maxAge: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryHolders\",\n});\nconst TrendSchema = Type.Object({\n    maxAge: YahooNumber,\n    symbol: Type.Null(),\n    estimates: Type.Array(Type.Any()),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryTrend\",\n});\nconst EstimateSchema = Type.Object({\n    period: Type.String(),\n    growth: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryEstimate\",\n});\nconst IndexTrendSchema = Type.Object({\n    maxAge: YahooNumber,\n    symbol: Type.String(),\n    peRatio: YahooNumber,\n    pegRatio: YahooNumber,\n    estimates: Type.Array(EstimateSchema),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryIndexTrend\",\n});\nconst IncomeStatementHistoryElementSchema = Type.Object({\n    maxAge: NullableYahooNumber,\n    endDate: YahooFinanceDate,\n    totalRevenue: NullableYahooNumber,\n    costOfRevenue: NullableYahooNumber,\n    grossProfit: NullableYahooNumber,\n    researchDevelopment: NullableYahooNumber,\n    sellingGeneralAdministrative: NullableYahooNumber,\n    nonRecurring: NullableYahooNumber,\n    otherOperatingExpenses: NullableYahooNumber,\n    totalOperatingExpenses: NullableYahooNumber,\n    operatingIncome: NullableYahooNumber,\n    totalOtherIncomeExpenseNet: NullableYahooNumber,\n    ebit: NullableYahooNumber,\n    interestExpense: NullableYahooNumber,\n    incomeBeforeTax: NullableYahooNumber,\n    incomeTaxExpense: NullableYahooNumber,\n    minorityInterest: NullableYahooNumber,\n    netIncomeFromContinuingOps: NullableYahooNumber,\n    discontinuedOperations: NullableYahooNumber,\n    extraordinaryItems: NullableYahooNumber,\n    effectOfAccountingCharges: NullableYahooNumber,\n    otherItems: NullableYahooNumber,\n    netIncome: NullableYahooNumber,\n    netIncomeApplicableToCommonShares: NullableYahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryIncomeStatementHistoryElement\",\n});\nconst IncomeStatementHistorySchema = Type.Object({\n    incomeStatementHistory: Type.Array(IncomeStatementHistoryElementSchema),\n    maxAge: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryIncomeStatementHistory\",\n});\nconst FundProfileBrokerageSchema = Type.Object({}, {\n    title: \"QuoteSummaryFundProfileBrokerage\",\n});\nconst FundProfileFeesExpensesInvestmentSchema = Type.Object({\n    annualHoldingsTurnover: Type.Optional(YahooNumber),\n    annualReportExpenseRatio: Type.Optional(YahooNumber),\n    grossExpRatio: Type.Optional(YahooNumber),\n    netExpRatio: Type.Optional(YahooNumber),\n    projectionValues: Type.Object({}),\n    totalNetAssets: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryFundProfileFeesExpensesInvestment\",\n});\nconst FundProfileFeesExpensesInvestmentCatSchema = Type.Composite([\n    Type.Omit(FundProfileFeesExpensesInvestmentSchema, [\"projectionValues\"]),\n    Type.Object({\n        projectionValuesCat: Type.Object({}),\n    }),\n], {\n    title: \"QuoteSummaryFundProfileFeesExpensesInvestmentCat\",\n    additionalProperties: Type.Any(),\n});\nconst FundProfileManagementInfoSchema = Type.Object({\n    managerName: Type.Union([Type.Null(), Type.String()]),\n    managerBio: Type.Union([Type.Null(), Type.String()]),\n    startdate: Type.Optional(YahooFinanceDate),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryFundProfileManagementInfo\",\n});\nconst FundProfileSchema = Type.Object({\n    maxAge: YahooNumber,\n    styleBoxUrl: Type.Optional(Type.Union([Type.Null(), Type.String()])),\n    family: Type.Union([Type.Null(), Type.String()]),\n    categoryName: Type.Union([Type.Null(), Type.String()]),\n    legalType: Type.Union([Type.Null(), Type.String()]),\n    managementInfo: Type.Optional(FundProfileManagementInfoSchema),\n    feesExpensesInvestment: Type.Optional(FundProfileFeesExpensesInvestmentSchema),\n    feesExpensesInvestmentCat: Type.Optional(FundProfileFeesExpensesInvestmentCatSchema),\n    brokerages: Type.Optional(Type.Array(FundProfileBrokerageSchema)),\n    initInvestment: Type.Optional(YahooNumber),\n    initIraInvestment: Type.Optional(YahooNumber),\n    initAipInvestment: Type.Optional(YahooNumber),\n    subseqInvestment: Type.Optional(YahooNumber),\n    subseqIraInvestment: Type.Optional(YahooNumber),\n    subseqAipInvestment: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryFundProfile\",\n});\nconst FundPerformanceRiskOverviewStatsRowSchema = Type.Object({\n    year: Type.String(), // \"5y\" | \"3y\" | \"10y\" | anything else?\n    alpha: YahooNumber, // 7.76\n    beta: YahooNumber, // 1.04\n    meanAnnualReturn: YahooNumber, // 2.05\n    rSquared: YahooNumber, // 84.03\n    stdDev: Type.Optional(YahooNumber), // 17.12\n    sharpeRatio: YahooNumber, // 1.37\n    treynorRatio: YahooNumber, // 23.61\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryFundPerformanceRiskOverviewStatsRow\",\n});\nconst FundPerformanceRiskOverviewStatsCatSchema = Type.Object({\n    riskStatisticsCat: Type.Array(FundPerformanceRiskOverviewStatsRowSchema),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryFundPerformanceRiskOverviewStatsCat\",\n});\nconst FundPerformanceRiskOverviewStatsSchema = Type.Object({\n    riskStatistics: Type.Array(FundPerformanceRiskOverviewStatsRowSchema),\n    riskRating: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryFundPerformanceRiskOverviewStats\",\n});\nconst FundPerformanceReturnsRowSchema = Type.Object({\n    year: YahooFinanceDate,\n    annualValue: Type.Optional(YahooNumber),\n    q1: Type.Optional(YahooNumber),\n    q2: Type.Optional(YahooNumber),\n    q3: Type.Optional(YahooNumber),\n    q4: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryFundPerformanceReturnsRow\",\n});\nconst FundPerformanceReturnsSchema = Type.Object({\n    returns: Type.Array(FundPerformanceReturnsRowSchema),\n    returnsCat: Type.Optional(Type.Array(FundPerformanceReturnsRowSchema)),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryFundPerformanceReturns\",\n});\nconst FundPerformancePerformanceOverviewCatSchema = Type.Object({\n    ytdReturnPct: Type.Optional(YahooNumber),\n    fiveYrAvgReturnPct: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryFundPerformancePerformanceOverviewCat\",\n});\nconst FundPerformancePerformanceOverviewSchema = Type.Object({\n    asOfDate: Type.Optional(YahooFinanceDate),\n    ytdReturnPct: Type.Optional(YahooNumber),\n    oneYearTotalReturn: Type.Optional(YahooNumber),\n    threeYearTotalReturn: Type.Optional(YahooNumber),\n    fiveYrAvgReturnPct: Type.Optional(YahooNumber),\n    morningStarReturnRating: Type.Optional(YahooNumber),\n    numYearsUp: Type.Optional(YahooNumber),\n    numYearsDown: Type.Optional(YahooNumber),\n    bestOneYrTotalReturn: Type.Optional(YahooNumber),\n    worstOneYrTotalReturn: Type.Optional(YahooNumber),\n    bestThreeYrTotalReturn: Type.Optional(YahooNumber),\n    worstThreeYrTotalReturn: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryFundPerformancePerformanceOverview\",\n});\nconst PeriodRangeSchema = Type.Object({\n    asOfDate: Type.Optional(YahooFinanceDate),\n    ytd: Type.Optional(YahooNumber),\n    oneMonth: Type.Optional(YahooNumber),\n    threeMonth: Type.Optional(YahooNumber),\n    oneYear: Type.Optional(YahooNumber),\n    threeYear: Type.Optional(YahooNumber),\n    fiveYear: Type.Optional(YahooNumber),\n    tenYear: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryPeriodRange\",\n});\nconst FundPerformanceTrailingReturnsSchema = Type.Composite([\n    PeriodRangeSchema,\n    Type.Object({\n        lastBullMkt: Type.Optional(YahooNumber),\n        lastBearMkt: Type.Optional(YahooNumber),\n    }, {\n        additionalProperties: Type.Any(),\n    }),\n], {\n    title: \"QuoteSummaryFundPerformanceTrailingReturns\",\n});\nconst FundPerformanceSchema = Type.Object({\n    maxAge: YahooNumber,\n    loadAdjustedReturns: Type.Optional(PeriodRangeSchema),\n    rankInCategory: Type.Optional(PeriodRangeSchema),\n    performanceOverview: FundPerformancePerformanceOverviewSchema,\n    performanceOverviewCat: FundPerformancePerformanceOverviewCatSchema,\n    trailingReturns: FundPerformanceTrailingReturnsSchema,\n    trailingReturnsNav: FundPerformanceTrailingReturnsSchema,\n    trailingReturnsCat: FundPerformanceTrailingReturnsSchema,\n    annualTotalReturns: FundPerformanceReturnsSchema,\n    pastQuarterlyReturns: FundPerformanceReturnsSchema,\n    riskOverviewStatistics: FundPerformanceRiskOverviewStatsSchema,\n    riskOverviewStatisticsCat: FundPerformanceRiskOverviewStatsCatSchema,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryFundPerformance\",\n});\nconst OwnershipListSchema = Type.Object({\n    maxAge: YahooNumber,\n    reportDate: YahooFinanceDate,\n    organization: Type.String(),\n    pctHeld: YahooNumber,\n    position: YahooNumber,\n    value: YahooNumber,\n    pctChange: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryOwnershipList\",\n});\nconst OwnershipSchema = Type.Object({\n    maxAge: YahooNumber,\n    ownershipList: Type.Array(OwnershipListSchema),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryOwnership\",\n});\nconst FinancialDataSchema = Type.Object({\n    maxAge: YahooNumber,\n    currentPrice: Type.Optional(YahooNumber),\n    targetHighPrice: Type.Optional(YahooNumber),\n    targetLowPrice: Type.Optional(YahooNumber),\n    targetMeanPrice: Type.Optional(YahooNumber),\n    targetMedianPrice: Type.Optional(YahooNumber),\n    recommendationMean: Type.Optional(YahooNumber),\n    recommendationKey: Type.String(),\n    numberOfAnalystOpinions: Type.Optional(YahooNumber),\n    totalCash: Type.Optional(YahooNumber),\n    totalCashPerShare: Type.Optional(YahooNumber),\n    ebitda: Type.Optional(YahooNumber),\n    totalDebt: Type.Optional(YahooNumber),\n    quickRatio: Type.Optional(YahooNumber),\n    currentRatio: Type.Optional(YahooNumber),\n    totalRevenue: Type.Optional(YahooNumber),\n    debtToEquity: Type.Optional(YahooNumber),\n    revenuePerShare: Type.Optional(YahooNumber),\n    returnOnAssets: Type.Optional(YahooNumber),\n    returnOnEquity: Type.Optional(YahooNumber),\n    grossProfits: Type.Optional(YahooNumber),\n    freeCashflow: Type.Optional(YahooNumber),\n    operatingCashflow: Type.Optional(YahooNumber),\n    earningsGrowth: Type.Optional(YahooNumber),\n    revenueGrowth: Type.Optional(YahooNumber),\n    grossMargins: Type.Optional(YahooNumber),\n    ebitdaMargins: Type.Optional(YahooNumber),\n    operatingMargins: Type.Optional(YahooNumber),\n    profitMargins: Type.Optional(YahooNumber),\n    financialCurrency: Type.Union([Type.String(), Type.Null()]),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryFinancialData\",\n});\nconst RevenueEstimateSchema = Type.Object({\n    avg: NullableYahooNumber,\n    low: NullableYahooNumber,\n    high: NullableYahooNumber,\n    numberOfAnalysts: NullableYahooNumber,\n    yearAgoRevenue: NullableYahooNumber,\n    growth: NullableYahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryRevenueEstimate\",\n});\nconst EpsTrendSchema = Type.Object({\n    current: NullableYahooNumber,\n    \"7daysAgo\": NullableYahooNumber,\n    \"30daysAgo\": NullableYahooNumber,\n    \"60daysAgo\": NullableYahooNumber,\n    \"90daysAgo\": NullableYahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryEpsTrend\",\n});\nconst EpsRevisionsSchema = Type.Object({\n    upLast7days: NullableYahooNumber,\n    upLast30days: NullableYahooNumber,\n    downLast30days: NullableYahooNumber,\n    downLast90days: NullableYahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryEpsRevisions\",\n});\nconst EarningsEstimateSchema = Type.Object({\n    avg: NullableYahooNumber,\n    low: NullableYahooNumber,\n    high: NullableYahooNumber,\n    yearAgoEps: NullableYahooNumber,\n    numberOfAnalysts: NullableYahooNumber,\n    growth: NullableYahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryEarningsEstimate\",\n});\nconst EarningsTrendTrendSchema = Type.Object({\n    maxAge: YahooNumber,\n    period: Type.String(),\n    endDate: NullableYahooFinanceDate,\n    growth: NullableYahooNumber,\n    earningsEstimate: EarningsEstimateSchema,\n    revenueEstimate: RevenueEstimateSchema,\n    epsTrend: EpsTrendSchema,\n    epsRevisions: EpsRevisionsSchema,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryEarningsTrendTrend\",\n});\nconst EarningsTrendSchema = Type.Object({\n    trend: Type.Array(EarningsTrendTrendSchema),\n    maxAge: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryEarningsTrend\",\n});\nconst EarningsHistoryHistorySchema = Type.Object({\n    maxAge: YahooNumber,\n    epsActual: NullableYahooNumber,\n    epsEstimate: NullableYahooNumber,\n    epsDifference: NullableYahooNumber,\n    surprisePercent: NullableYahooNumber,\n    quarter: NullableYahooFinanceDate,\n    period: Type.String(),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryEarningsHistoryHistory\",\n});\nconst EarningsHistorySchema = Type.Object({\n    history: Type.Array(EarningsHistoryHistorySchema),\n    maxAge: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryEarningsHistory\",\n});\nconst YearlySchema = Type.Object({\n    date: YahooNumber,\n    revenue: YahooNumber,\n    earnings: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryYearly\",\n});\nconst FinancialsChartQuarterlySchema = Type.Object({\n    date: Type.String(),\n    revenue: YahooNumber,\n    earnings: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryFinancialsChartQuarterly\",\n});\nconst FinancialsChartSchema = Type.Object({\n    yearly: Type.Array(YearlySchema),\n    quarterly: Type.Array(FinancialsChartQuarterlySchema),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryFinancialsChart\",\n});\nconst EarningsChartQuarterlySchema = Type.Object({\n    date: Type.String(),\n    actual: YahooNumber,\n    estimate: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryEarningsChartQuarterly\",\n});\nconst EarningsChartSchema = Type.Object({\n    quarterly: Type.Array(EarningsChartQuarterlySchema),\n    currentQuarterEstimate: Type.Optional(YahooNumber),\n    currentQuarterEstimateDate: Type.Optional(Type.String()),\n    currentQuarterEstimateYear: Type.Optional(YahooNumber),\n    earningsDate: Type.Array(YahooFinanceDate),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryEarningsChart\",\n});\nconst QuoteSummaryEarningsSchema = Type.Object({\n    maxAge: YahooNumber,\n    earningsChart: EarningsChartSchema,\n    financialsChart: FinancialsChartSchema,\n    financialCurrency: Type.Optional(Type.String()),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryEarnings\",\n});\nconst DefaultKeyStatisticsSchema = Type.Object({\n    maxAge: YahooNumber,\n    priceHint: YahooNumber,\n    enterpriseValue: Type.Optional(YahooNumber),\n    forwardPE: Type.Optional(YahooNumber),\n    profitMargins: Type.Optional(YahooNumber),\n    floatShares: Type.Optional(YahooNumber),\n    sharesOutstanding: Type.Optional(YahooNumber),\n    sharesShort: Type.Optional(YahooNumber),\n    sharesShortPriorMonth: Type.Optional(YahooFinanceDate),\n    sharesShortPreviousMonthDate: Type.Optional(YahooFinanceDate),\n    dateShortInterest: Type.Optional(YahooNumber),\n    sharesPercentSharesOut: Type.Optional(YahooNumber),\n    heldPercentInsiders: Type.Optional(YahooNumber),\n    heldPercentInstitutions: Type.Optional(YahooNumber),\n    shortRatio: Type.Optional(YahooNumber),\n    shortPercentOfFloat: Type.Optional(YahooNumber),\n    beta: Type.Optional(YahooNumber),\n    impliedSharesOutstanding: Type.Optional(YahooNumber),\n    category: Type.Union([Type.Null(), Type.String()]),\n    bookValue: Type.Optional(YahooNumber),\n    priceToBook: Type.Optional(YahooNumber),\n    fundFamily: Type.Union([Type.Null(), Type.String()]),\n    legalType: Type.Union([Type.Null(), Type.String()]),\n    lastFiscalYearEnd: Type.Optional(YahooFinanceDate),\n    nextFiscalYearEnd: Type.Optional(YahooFinanceDate),\n    mostRecentQuarter: Type.Optional(YahooFinanceDate),\n    earningsQuarterlyGrowth: Type.Optional(YahooNumber),\n    netIncomeToCommon: Type.Optional(YahooNumber),\n    trailingEps: Type.Optional(YahooNumber),\n    forwardEps: Type.Optional(YahooNumber),\n    pegRatio: Type.Optional(YahooNumber),\n    lastSplitFactor: Type.Union([Type.Null(), Type.String()]),\n    lastSplitDate: Type.Optional(YahooNumber),\n    enterpriseToRevenue: Type.Optional(YahooNumber),\n    enterpriseToEbitda: Type.Optional(YahooNumber),\n    \"52WeekChange\": Type.Optional(YahooNumber),\n    SandP52WeekChange: Type.Optional(YahooNumber),\n    lastDividendValue: Type.Optional(YahooNumber),\n    lastDividendDate: Type.Optional(YahooFinanceDate),\n    ytdReturn: Type.Optional(YahooNumber),\n    beta3Year: Type.Optional(YahooNumber),\n    totalAssets: Type.Optional(YahooNumber),\n    yield: Type.Optional(YahooNumber),\n    fundInceptionDate: Type.Optional(YahooFinanceDate),\n    threeYearAverageReturn: Type.Optional(YahooNumber),\n    fiveYearAverageReturn: Type.Optional(YahooNumber),\n    morningStarOverallRating: Type.Optional(YahooNumber),\n    morningStarRiskRating: Type.Optional(YahooNumber),\n    annualReportExpenseRatio: Type.Optional(YahooNumber),\n    lastCapGain: Type.Optional(YahooNumber),\n    annualHoldingsTurnover: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryDefaultKeyStatistics\",\n});\nconst CashflowStatementSchema = Type.Object({\n    maxAge: YahooNumber,\n    endDate: YahooFinanceDate,\n    netIncome: YahooNumber,\n    depreciation: Type.Optional(YahooNumber),\n    changeToNetincome: Type.Optional(YahooNumber),\n    changeToAccountReceivables: Type.Optional(YahooNumber),\n    changeToLiabilities: Type.Optional(YahooNumber),\n    changeToInventory: Type.Optional(YahooNumber),\n    changeToOperatingActivities: Type.Optional(YahooNumber),\n    totalCashFromOperatingActivities: Type.Optional(YahooNumber),\n    capitalExpenditures: Type.Optional(YahooNumber),\n    investments: Type.Optional(YahooNumber),\n    otherCashflowsFromInvestingActivities: Type.Optional(YahooNumber),\n    totalCashflowsFromInvestingActivities: Type.Optional(YahooNumber),\n    dividendsPaid: Type.Optional(YahooNumber),\n    netBorrowings: Type.Optional(YahooNumber),\n    otherCashflowsFromFinancingActivities: Type.Optional(YahooNumber),\n    totalCashFromFinancingActivities: Type.Optional(YahooNumber),\n    changeInCash: Type.Optional(YahooNumber),\n    repurchaseOfStock: Type.Optional(YahooNumber),\n    issuanceOfStock: Type.Optional(YahooNumber),\n    effectOfExchangeRate: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryCashflowStatement\",\n});\nconst CashflowStatementHistorySchema = Type.Object({\n    cashflowStatements: Type.Array(CashflowStatementSchema),\n    maxAge: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryCashflowStatementHistory\",\n});\nconst CalendarEventsEarningsSchema = Type.Object({\n    earningsDate: Type.Array(YahooFinanceDate),\n    earningsAverage: Type.Optional(YahooNumber),\n    earningsLow: Type.Optional(YahooNumber),\n    earningsHigh: Type.Optional(YahooNumber),\n    revenueAverage: Type.Optional(YahooNumber),\n    revenueLow: Type.Optional(YahooNumber),\n    revenueHigh: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSumamryCalendarEventsEarnings\",\n});\nconst CalendarEventsSchema = Type.Object({\n    maxAge: YahooNumber,\n    earnings: CalendarEventsEarningsSchema,\n    exDividendDate: Type.Optional(YahooFinanceDate),\n    dividendDate: Type.Optional(YahooFinanceDate),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryCalendarEvents\",\n});\nconst BalanceSheetStatementSchema = Type.Object({\n    maxAge: YahooNumber,\n    endDate: YahooFinanceDate,\n    cash: Type.Optional(YahooNumber),\n    shortTermInvestments: Type.Optional(YahooNumber),\n    netReceivables: Type.Optional(YahooNumber),\n    inventory: Type.Optional(YahooNumber),\n    otherCurrentAssets: Type.Optional(YahooNumber),\n    totalCurrentAssets: Type.Optional(YahooNumber),\n    longTermInvestments: Type.Optional(YahooNumber),\n    propertyPlantEquipment: Type.Optional(YahooNumber),\n    otherAssets: Type.Optional(YahooNumber),\n    totalAssets: Type.Optional(YahooNumber),\n    accountsPayable: Type.Optional(YahooNumber),\n    shortLongTermDebt: Type.Optional(YahooNumber),\n    otherCurrentLiab: Type.Optional(YahooNumber),\n    longTermDebt: Type.Optional(YahooNumber),\n    otherLiab: Type.Optional(YahooNumber),\n    totalCurrentLiabilities: Type.Optional(YahooNumber),\n    totalLiab: Type.Optional(YahooNumber),\n    commonStock: Type.Optional(YahooNumber),\n    retainedEarnings: Type.Optional(YahooNumber),\n    treasuryStock: Type.Optional(YahooNumber),\n    otherStockholderEquity: Type.Optional(YahooNumber),\n    totalStockholderEquity: Type.Optional(YahooNumber),\n    netTangibleAssets: Type.Optional(YahooNumber),\n    goodWill: Type.Optional(YahooNumber),\n    intangibleAssets: Type.Optional(YahooNumber),\n    deferredLongTermAssetCharges: Type.Optional(YahooNumber),\n    deferredLongTermLiab: Type.Optional(YahooNumber),\n    minorityInterest: Type.Optional(NullableYahooNumber),\n    capitalSurplus: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryBalanceSheetStatement\",\n});\nconst BalanceSheetHistorySchema = Type.Object({\n    balanceSheetStatements: Type.Array(BalanceSheetStatementSchema),\n    maxAge: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryBalanceSheetHistory\",\n});\nconst CompanyOfficerSchema = Type.Object({\n    maxAge: YahooNumber,\n    name: Type.String(),\n    age: Type.Optional(YahooNumber),\n    title: Type.String(),\n    yearBorn: Type.Optional(YahooNumber),\n    fiscalYear: Type.Optional(YahooNumber),\n    totalPay: Type.Optional(YahooNumber),\n    exercisedValue: Type.Optional(YahooNumber),\n    unexercisedValue: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryCompanyOfficer\",\n});\nconst AssetProfileSchema = Type.Object({\n    maxAge: YahooNumber,\n    address1: Type.Optional(Type.String()),\n    address2: Type.Optional(Type.String()),\n    address3: Type.Optional(Type.String()),\n    city: Type.Optional(Type.String()),\n    state: Type.Optional(Type.String()),\n    zip: Type.Optional(Type.String()),\n    country: Type.Optional(Type.String()),\n    phone: Type.Optional(Type.String()),\n    fax: Type.Optional(Type.String()),\n    website: Type.Optional(Type.String()),\n    industry: Type.Optional(Type.String()),\n    industryDisp: Type.Optional(Type.String()),\n    industryKey: Type.Optional(Type.String()),\n    industrySymbol: Type.Optional(Type.String()),\n    sector: Type.Optional(Type.String()),\n    sectorDisp: Type.Optional(Type.String()),\n    sectorKey: Type.Optional(Type.String()),\n    longBusinessSummary: Type.Optional(Type.String()),\n    fullTimeEmployees: Type.Optional(YahooNumber),\n    companyOfficers: Type.Array(CompanyOfficerSchema),\n    auditRisk: Type.Optional(YahooNumber),\n    boardRisk: Type.Optional(YahooNumber),\n    compensationRisk: Type.Optional(YahooNumber),\n    shareHolderRightsRisk: Type.Optional(YahooNumber),\n    overallRisk: Type.Optional(YahooNumber),\n    governanceEpochDate: Type.Optional(YahooFinanceDate),\n    compensationAsOfEpochDate: Type.Optional(YahooFinanceDate),\n    name: Type.Optional(Type.String()), // 'Bitcoin';\n    startDate: Type.Optional(YahooFinanceDate), // new Date('2013-04-28')\n    description: Type.Optional(Type.String()), // 'Bitcoin (BTC) is a cryptocurrency...'\n    twitter: Type.Optional(Type.String()), // in e.g. \"ADA-USD\" (#418)\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryAssetProfile\",\n});\nexport const QuoteSummaryResultSchema = Type.Object({\n    assetProfile: Type.Optional(AssetProfileSchema),\n    balanceSheetHistory: Type.Optional(BalanceSheetHistorySchema),\n    balanceSheetHistoryQuarterly: Type.Optional(BalanceSheetHistorySchema),\n    calendarEvents: Type.Optional(CalendarEventsSchema),\n    cashflowStatementHistory: Type.Optional(CashflowStatementHistorySchema),\n    cashflowStatementHistoryQuarterly: Type.Optional(CashflowStatementHistorySchema),\n    defaultKeyStatistics: Type.Optional(DefaultKeyStatisticsSchema),\n    earnings: Type.Optional(QuoteSummaryEarningsSchema),\n    earningsHistory: Type.Optional(EarningsHistorySchema),\n    earningsTrend: Type.Optional(EarningsTrendSchema),\n    financialData: Type.Optional(FinancialDataSchema),\n    fundOwnership: Type.Optional(OwnershipSchema),\n    fundPerformance: Type.Optional(FundPerformanceSchema),\n    fundProfile: Type.Optional(FundProfileSchema),\n    incomeStatementHistory: Type.Optional(IncomeStatementHistorySchema),\n    incomeStatementHistoryQuarterly: Type.Optional(IncomeStatementHistorySchema),\n    indexTrend: Type.Optional(IndexTrendSchema),\n    industryTrend: Type.Optional(TrendSchema),\n    // insiderHolders: Type.Optional(InsiderTransactionsSchema), // <--\n    institutionOwnership: Type.Optional(OwnershipSchema),\n    majorDirectHolders: Type.Optional(HoldersSchema),\n    majorHoldersBreakdown: Type.Optional(MajorHoldersBreakdownSchema),\n    netSharePurchaseActivity: Type.Optional(NetSharePurchaseActivitySchema),\n    price: Type.Optional(PriceSchema),\n    quoteType: Type.Optional(QuoteTypeSchema),\n    recommendationTrend: Type.Optional(RecommendationTrendSchema),\n    secFilings: Type.Optional(SECFilingsSchema),\n    sectorTrend: Type.Optional(TrendSchema),\n    summaryDetail: Type.Optional(SummaryDetailSchema),\n    summaryProfile: Type.Optional(SummaryProfileSchema),\n    topHoldings: Type.Optional(TopHoldingsSchema),\n    upgradeDowngradeHistory: Type.Optional(UpgradeDowngradeHistorySchema),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"QuoteSummaryResult\",\n});\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3768, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3774, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/modules/quoteSummary.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\nimport { QuoteSummaryResultSchema, } from \"./quoteSummary-iface.js\";\nconst QuoteSummaryModules = Type.Union([\n    Type.Literal(\"assetProfile\"),\n    Type.Literal(\"balanceSheetHistory\"),\n    Type.Literal(\"balanceSheetHistoryQuarterly\"),\n    Type.Literal(\"calendarEvents\"),\n    Type.Literal(\"cashflowStatementHistory\"),\n    Type.Literal(\"cashflowStatementHistoryQuarterly\"),\n    Type.Literal(\"defaultKeyStatistics\"),\n    Type.Literal(\"earnings\"),\n    Type.Literal(\"earningsHistory\"),\n    Type.Literal(\"earningsTrend\"),\n    Type.Literal(\"financialData\"),\n    Type.Literal(\"fundOwnership\"),\n    Type.Literal(\"fundPerformance\"),\n    Type.Literal(\"fundProfile\"),\n    Type.Literal(\"incomeStatementHistory\"),\n    Type.Literal(\"incomeStatementHistoryQuarterly\"),\n    Type.Literal(\"indexTrend\"),\n    Type.Literal(\"industryTrend\"),\n    Type.Literal(\"insiderHolders\"),\n    Type.Literal(\"insiderTransactions\"),\n    Type.Literal(\"institutionOwnership\"),\n    Type.Literal(\"majorDirectHolders\"),\n    Type.Literal(\"majorHoldersBreakdown\"),\n    Type.Literal(\"netSharePurchaseActivity\"),\n    Type.Literal(\"price\"),\n    Type.Literal(\"quoteType\"),\n    Type.Literal(\"recommendationTrend\"),\n    Type.Literal(\"secFilings\"),\n    Type.Literal(\"sectorTrend\"),\n    Type.Literal(\"summaryDetail\"),\n    Type.Literal(\"summaryProfile\"),\n    Type.Literal(\"topHoldings\"),\n    Type.Literal(\"upgradeDowngradeHistory\"),\n]);\nconst quoteSummaryModules = [\n    \"assetProfile\",\n    \"balanceSheetHistory\",\n    \"balanceSheetHistoryQuarterly\",\n    \"calendarEvents\",\n    \"cashflowStatementHistory\",\n    \"cashflowStatementHistoryQuarterly\",\n    \"defaultKeyStatistics\",\n    \"earnings\",\n    \"earningsHistory\",\n    \"earningsTrend\",\n    \"financialData\",\n    \"fundOwnership\",\n    \"fundPerformance\",\n    \"fundProfile\",\n    \"incomeStatementHistory\",\n    \"incomeStatementHistoryQuarterly\",\n    \"indexTrend\",\n    \"industryTrend\",\n    \"insiderHolders\",\n    \"insiderTransactions\",\n    \"institutionOwnership\",\n    \"majorDirectHolders\",\n    \"majorHoldersBreakdown\",\n    \"netSharePurchaseActivity\",\n    \"price\",\n    \"quoteType\",\n    \"recommendationTrend\",\n    \"secFilings\",\n    \"sectorTrend\",\n    \"summaryDetail\",\n    \"summaryProfile\",\n    \"topHoldings\",\n    \"upgradeDowngradeHistory\",\n];\nconst QuoteSummaryOptionsSchema = Type.Object({\n    formatted: Type.Optional(Type.Boolean()),\n    modules: Type.Optional(Type.Union([Type.Array(QuoteSummaryModules), Type.Literal(\"all\")])),\n});\nconst queryOptionsDefaults = {\n    formatted: false,\n    modules: [\"price\", \"summaryDetail\"],\n};\nexport default function quoteSummary(symbol, queryOptionsOverrides, moduleOptions) {\n    return this._moduleExec({\n        moduleName: \"quoteSummary\",\n        query: {\n            assertSymbol: symbol,\n            url: \"https://${YF_QUERY_HOST}/v10/finance/quoteSummary/\" + symbol,\n            needsCrumb: true,\n            schema: QuoteSummaryOptionsSchema,\n            defaults: queryOptionsDefaults,\n            overrides: queryOptionsOverrides,\n            transformWith(options) {\n                if (typeof options === \"object\" &&\n                    options != null &&\n                    \"modules\" in options &&\n                    options.modules === \"all\")\n                    options.modules =\n                        quoteSummaryModules;\n                return options;\n            },\n        },\n        result: {\n            schema: QuoteSummaryResultSchema,\n            transformWith(result) {\n                if (!result.quoteSummary)\n                    throw new Error(\"Unexpected result: \" + JSON.stringify(result));\n                return result.quoteSummary.result[0];\n            },\n        },\n        moduleOptions,\n    });\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3891, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3902, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/modules/fundamentalsTimeSeries.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: we have to ignore this for csm output.\nimport Timeseries_Keys from \"../lib/timeseries.json\" with { type: \"json\" };\nimport { YahooFinanceDate, YahooNumber } from \"../lib/yahooFinanceTypes.js\";\nconst FundamentalsTimeSeries_Types = [\"quarterly\", \"annual\", \"trailing\"];\nconst FundamentalsTimeSeries_Modules = [\n    \"financials\",\n    \"balance-sheet\",\n    \"cash-flow\",\n    \"all\",\n];\nconst FundamentalsTimeSeriesResultSchema = Type.Object({\n    date: YahooFinanceDate,\n}, {\n    additionalProperties: Type.Unknown(),\n    title: \"FundamentalsTimeSeriesResult\",\n});\nconst FundamentalsTimeSeriesOptionsSchema = Type.Object({\n    period1: Type.Union([YahooFinanceDate, YahooNumber, Type.String()]),\n    period2: Type.Optional(Type.Union([YahooFinanceDate, YahooNumber, Type.String()])),\n    type: Type.Optional(Type.String()),\n    merge: Type.Optional(Type.Boolean()), // This returns a completely different format that will break the transformer\n    padTimeSeries: Type.Optional(Type.Boolean()), // Not exactly sure what this does, assume it pads p1 and p2???\n    lang: Type.Optional(Type.String()),\n    region: Type.Optional(Type.String()),\n    module: Type.String(),\n}, {\n    title: \"FundamentalsTimeSeriesOptions\",\n});\nconst FundamentalsTimeSeriesResultsSchema = Type.Array(FundamentalsTimeSeriesResultSchema);\nconst queryOptionsDefaults = {\n    merge: false,\n    padTimeSeries: true,\n    lang: \"en-US\",\n    region: \"US\",\n    type: \"quarterly\",\n};\nexport default function fundamentalsTimeSeries(symbol, queryOptionsOverrides, moduleOptions) {\n    return this._moduleExec({\n        moduleName: \"options\",\n        query: {\n            assertSymbol: symbol,\n            url: `https://query1.finance.yahoo.com/ws/fundamentals-timeseries/v1/finance/timeseries/${symbol}`,\n            needsCrumb: false,\n            schema: FundamentalsTimeSeriesOptionsSchema,\n            defaults: queryOptionsDefaults,\n            overrides: queryOptionsOverrides,\n            transformWith: processQuery,\n        },\n        result: {\n            schema: FundamentalsTimeSeriesResultsSchema,\n            transformWith(response) {\n                if (!response || !response.timeseries)\n                    throw new Error(`Unexpected result: ${JSON.stringify(response)}`);\n                return processResponse(response);\n            },\n        },\n        moduleOptions,\n    });\n}\n/**\n * Transform the input options into query parameters.\n * The options module defines which keys that are used in the query.\n * The keys are joined together into the query parameter type and\n * pre-fixed with the options type (e.g. annualTotalRevenue).\n * @param queryOptions Input query options.\n * @returns Query parameters.\n */\nexport const processQuery = function (queryOptions) {\n    // Convert dates\n    if (!queryOptions.period2)\n        queryOptions.period2 = new Date();\n    const dates = [\"period1\", \"period2\"];\n    for (const fieldName of dates) {\n        const value = queryOptions[fieldName];\n        if (value instanceof Date)\n            queryOptions[fieldName] = Math.floor(value.getTime() / 1000);\n        else if (typeof value === \"string\") {\n            const timestamp = new Date(value).getTime();\n            if (isNaN(timestamp))\n                throw new Error(\"yahooFinance.fundamentalsTimeSeries() option '\" +\n                    fieldName +\n                    \"' invalid date provided: '\" +\n                    value +\n                    \"'\");\n            queryOptions[fieldName] = Math.floor(timestamp / 1000);\n        }\n    }\n    // Validate query parameters.\n    if (queryOptions.period1 === queryOptions.period2) {\n        throw new Error(\"yahooFinance.fundamentalsTimeSeries() options `period1` and `period2` \" +\n            \"cannot share the same value.\");\n    }\n    else if (!FundamentalsTimeSeries_Types.includes(queryOptions.type || \"\")) {\n        throw new Error(\"yahooFinance.fundamentalsTimeSeries() option type invalid.\");\n    }\n    else if (!FundamentalsTimeSeries_Modules.includes(queryOptions.module || \"\")) {\n        throw new Error(\"yahooFinance.fundamentalsTimeSeries() option module invalid.\");\n    }\n    // Join the keys for the module into query types.\n    const keys = Object.entries(Timeseries_Keys).reduce((previous, [module, keys]) => {\n        if (queryOptions.module == \"all\") {\n            return previous.concat(keys);\n        }\n        else if (module == queryOptions.module) {\n            return previous.concat(keys);\n        }\n        else\n            return previous;\n    }, []);\n    const queryType = queryOptions.type + keys.join(`,${queryOptions.type}`);\n    return {\n        period1: queryOptions.period1,\n        period2: queryOptions.period2,\n        type: queryType,\n    };\n};\n/**\n * Transforms the time-series into an array with reported values per period.\n * Each object represents a period and its properties are the data points.\n * Financial statement content variates and keys are skipped when empty.\n * The query keys include the option type  (e.g. annualTotalRevenue).\n * In the response the type is removed (e.g. totalRevenue) for\n * easier mapping by the client.\n * @param response Query response.\n * @returns Formatted response.\n */\nexport const processResponse = function (response) {\n    const keyedByTimestamp = {};\n    const replace = new RegExp(FundamentalsTimeSeries_Types.join(\"|\"));\n    for (let ct = 0; ct < response.timeseries.result.length; ct++) {\n        const result = response.timeseries.result[ct];\n        if (!result.timestamp || !result.timestamp.length) {\n            continue;\n        }\n        for (let ct = 0; ct < result.timestamp.length; ct++) {\n            const timestamp = result.timestamp[ct];\n            const dataKey = Object.keys(result)[2];\n            if (!keyedByTimestamp[timestamp]) {\n                keyedByTimestamp[timestamp] = { date: timestamp };\n            }\n            if (!result[dataKey][ct] ||\n                !result[dataKey][ct].reportedValue ||\n                !result[dataKey][ct].reportedValue.raw) {\n                continue;\n            }\n            const short = dataKey.replace(replace, \"\");\n            const key = short == short.toUpperCase()\n                ? short\n                : short[0].toLowerCase() + short.slice(1);\n            keyedByTimestamp[timestamp][key] = result[dataKey][ct].reportedValue.raw;\n        }\n    }\n    return Object.keys(keyedByTimestamp).map((k) => keyedByTimestamp[k]);\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4048, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4054, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/modules/recommendationsBySymbol.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\nimport { YahooNumber } from \"../lib/yahooFinanceTypes.js\";\nconst RecommendationsBySymbolResponse = Type.Object({\n    recommendedSymbols: Type.Array(Type.Object({\n        score: YahooNumber, // 0.1927\n        symbol: Type.String(), // \"BMW.DE\"\n    }, {\n        additionalProperties: Type.Any(),\n    })),\n    symbol: Type.String(),\n}, {\n    additionalProperties: Type.Any(),\n});\nconst RecommendationsBySymbolResponseArray = Type.Array(RecommendationsBySymbolResponse);\nconst RecommendationsBySymbolOptions = Type.Object({});\nconst queryOptionsDefaults = {};\nexport default function recommendationsBySymbol(query, queryOptionsOverrides, moduleOptions) {\n    const symbols = typeof query === \"string\" ? query : query.join(\",\");\n    return this._moduleExec({\n        moduleName: \"recommendationsBySymbol\",\n        query: {\n            url: \"https://${YF_QUERY_HOST}/v6/finance/recommendationsbysymbol/\" +\n                symbols,\n            schema: RecommendationsBySymbolOptions,\n            defaults: queryOptionsDefaults,\n            overrides: queryOptionsOverrides,\n        },\n        result: {\n            schema: RecommendationsBySymbolResponseArray,\n            transformWith(result) {\n                if (!result.finance)\n                    throw new Error(\"Unexpected result: \" + JSON.stringify(result));\n                return result.finance.result;\n            },\n        },\n        moduleOptions,\n    }).then((results) => {\n        return typeof query === \"string\"\n            ? results[0]\n            : results;\n    });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAEA,MAAM,kCAAkC,iMAAA,CAAA,OAAI,CAAC,MAAM,CAAC;IAChD,oBAAoB,iMAAA,CAAA,OAAI,CAAC,KAAK,CAAC,iMAAA,CAAA,OAAI,CAAC,MAAM,CAAC;QACvC,OAAO,qLAAA,CAAA,cAAW;QAClB,QAAQ,iMAAA,CAAA,OAAI,CAAC,MAAM;IACvB,GAAG;QACC,sBAAsB,iMAAA,CAAA,OAAI,CAAC,GAAG;IAClC;IACA,QAAQ,iMAAA,CAAA,OAAI,CAAC,MAAM;AACvB,GAAG;IACC,sBAAsB,iMAAA,CAAA,OAAI,CAAC,GAAG;AAClC;AACA,MAAM,uCAAuC,iMAAA,CAAA,OAAI,CAAC,KAAK,CAAC;AACxD,MAAM,iCAAiC,iMAAA,CAAA,OAAI,CAAC,MAAM,CAAC,CAAC;AACpD,MAAM,uBAAuB,CAAC;AACf,SAAS,wBAAwB,KAAK,EAAE,qBAAqB,EAAE,aAAa;IACvF,MAAM,UAAU,OAAO,UAAU,WAAW,QAAQ,MAAM,IAAI,CAAC;IAC/D,OAAO,IAAI,CAAC,WAAW,CAAC;QACpB,YAAY;QACZ,OAAO;YACH,KAAK,iEACD;YACJ,QAAQ;YACR,UAAU;YACV,WAAW;QACf;QACA,QAAQ;YACJ,QAAQ;YACR,eAAc,MAAM;gBAChB,IAAI,CAAC,OAAO,OAAO,EACf,MAAM,IAAI,MAAM,wBAAwB,KAAK,SAAS,CAAC;gBAC3D,OAAO,OAAO,OAAO,CAAC,MAAM;YAChC;QACJ;QACA;IACJ,GAAG,IAAI,CAAC,CAAC;QACL,OAAO,OAAO,UAAU,WAClB,OAAO,CAAC,EAAE,GACV;IACV;AACJ","ignoreList":[0]}},
    {"offset": {"line": 4098, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4104, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/modules/search.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\nimport { YahooFinanceDate, YahooNumber } from \"../lib/yahooFinanceTypes.js\";\nconst SearchQuoteYahoo = Type.Object({\n    symbol: Type.String(), // \"BABA\"\n    isYahooFinance: Type.Literal(true), // true\n    exchange: Type.String(), // \"NYQ\"\n    exchDisp: Type.Optional(Type.String()), // \"London\", e.g. with BJ0CDD2\n    shortname: Type.Optional(Type.String()), // \"Alibaba Group Holding Limited\"\n    longname: Type.Optional(Type.String()), // \"Alibaba Group Holding Limited\"\n    index: Type.Literal(\"quotes\"), // \"quotes\"\n    score: YahooNumber, // 1111958.0\n    newListingDate: Type.Optional(YahooFinanceDate), // \"2021-02-16\"\n    prevName: Type.Optional(Type.String()),\n    nameChangeDate: Type.Optional(YahooFinanceDate),\n    sector: Type.Optional(Type.String()), // \"Industrials\"\n    industry: Type.Optional(Type.String()), // \"Building Products & Equipment\"\n    dispSecIndFlag: Type.Optional(Type.Boolean()), // true\n}, {\n    additionalProperties: Type.Any(),\n});\nconst SearchQuoteYahooEquity = Type.Composite([\n    SearchQuoteYahoo,\n    Type.Object({\n        quoteType: Type.Literal(\"EQUITY\"),\n        typeDisp: Type.Literal(\"Equity\"),\n    }),\n], {\n    title: \"SearchQuoteYahooEntity\",\n});\nconst SearchQuoteYahooOption = Type.Composite([\n    SearchQuoteYahoo,\n    Type.Object({\n        quoteType: Type.Literal(\"OPTION\"),\n        typeDisp: Type.Literal(\"Option\"),\n    }),\n], {\n    title: \"SearchQuoteYahooOption\",\n});\nconst SearchQuoteYahooETF = Type.Composite([\n    SearchQuoteYahoo,\n    Type.Object({\n        quoteType: Type.Literal(\"ETF\"),\n        typeDisp: Type.Literal(\"ETF\"),\n    }),\n], {\n    title: \"SearchQuoteYahooETF\",\n});\nconst SearchQuoteYahooFund = Type.Composite([\n    SearchQuoteYahoo,\n    Type.Object({\n        quoteType: Type.Literal(\"MUTUALFUND\"),\n        typeDisp: Type.Literal(\"Fund\"),\n    }),\n], {\n    title: \"SearchQuoteYahooFund\",\n});\nconst SearchQuoteYahooIndex = Type.Composite([\n    SearchQuoteYahoo,\n    Type.Object({\n        quoteType: Type.Literal(\"INDEX\"),\n        typeDisp: Type.Literal(\"Index\"),\n    }),\n], {\n    title: \"SearchQuoteYahooIndex\",\n});\nconst SearchQuoteYahooCurrency = Type.Composite([\n    SearchQuoteYahoo,\n    Type.Object({\n        quoteType: Type.Literal(\"CURRENCY\"),\n        typeDisp: Type.Literal(\"Currency\"),\n    }),\n], {\n    title: \"SearchQuoteYahooCurrency\",\n});\nconst SearchQuoteYahooCryptocurrency = Type.Composite([\n    SearchQuoteYahoo,\n    Type.Object({\n        quoteType: Type.Literal(\"CRYPTOCURRENCY\"),\n        typeDisp: Type.Literal(\"Cryptocurrency\"),\n    }),\n]);\nconst SearchQuoteYahooFuture = Type.Composite([\n    SearchQuoteYahoo,\n    Type.Object({\n        quoteType: Type.Literal(\"FUTURE\"),\n        typeDisp: Type.Union([Type.Literal(\"Future\"), Type.Literal(\"Futures\")]),\n    }),\n], {\n    title: \"SearchQuoteYahooFuture\",\n});\nconst SearchQuoteNonYahoo = Type.Object({\n    index: Type.String(), // '78ddc07626ff4bbcae663e88514c23a0'\n    name: Type.String(), // 'AAPlasma'\n    permalink: Type.String(), // 'aaplasma'\n    isYahooFinance: Type.Literal(false), // false\n}, {\n    additionalProperties: Type.Any(),\n    title: \"SearchQuoteNonYahoo\",\n});\nconst SearchNewsThumbnailResolution = Type.Object({\n    url: Type.String(),\n    width: YahooNumber,\n    height: YahooNumber,\n    tag: Type.String(),\n}, {\n    title: \"SearchNewsThumbnailResolution\",\n});\nconst SearchNews = Type.Object({\n    uuid: Type.String(), // \"9aff624a-e84c-35f3-9c23-db39852006dc\"\n    title: Type.String(), // \"Analyst Report: Alibaba Group Holding Limited\"\n    publisher: Type.String(), // \"Morningstar Research\"\n    link: Type.String(), // \"https://finance.yahoo.com/m/9aff624a-e84c-35f3-9c23-db39852006dc/analyst-report%3A-alibaba-group.html\"\n    providerPublishTime: YahooFinanceDate, // coerced to New Date(1611285342 * 1000)\n    type: Type.String(), // \"STORY\"   TODO \"STORY\" | ???\n    thumbnail: Type.Optional(Type.Object({\n        resolutions: Type.Array(SearchNewsThumbnailResolution),\n    })),\n    relatedTickers: Type.Optional(Type.Array(Type.String())), // [ \"AAPL\" ]\n}, {\n    additionalProperties: Type.Any(),\n    title: \"SearchNews\",\n});\nconst SearchResultSchema = Type.Object({\n    explains: Type.Array(Type.Any()),\n    count: YahooNumber,\n    quotes: Type.Array(Type.Union([\n        SearchQuoteYahooEquity,\n        SearchQuoteYahooOption,\n        SearchQuoteYahooETF,\n        SearchQuoteYahooFund,\n        SearchQuoteYahooIndex,\n        SearchQuoteYahooCurrency,\n        SearchQuoteYahooCryptocurrency,\n        SearchQuoteNonYahoo,\n        SearchQuoteYahooFuture,\n    ])),\n    news: Type.Array(SearchNews),\n    nav: Type.Array(Type.Any()),\n    lists: Type.Array(Type.Any()),\n    researchReports: Type.Array(Type.Any()),\n    totalTime: YahooNumber,\n    // ALWAYS present, but TEMPORARILY marked optional (\"?\") since its\n    // sudden appearance, let's make sure it doesn't get suddenly removed.\n    // Array<any> until we can find some examples of what it actually looks\n    // like (#255).\n    screenerFieldResults: Type.Optional(Type.Array(Type.Any())),\n    // ALWAYS present, but TEMPORARILY marked optional (\"?\") since its\n    // sudden appearance, let's make sure it doesn't get suddenly removed.\n    // Array<any> until we can find some examples of what it actually looks\n    // like (#399).\n    culturalAssets: Type.Optional(Type.Array(Type.Any())),\n    timeTakenForQuotes: YahooNumber, // 26\n    timeTakenForNews: YahooNumber, // 419\n    timeTakenForAlgowatchlist: YahooNumber, // 700\n    timeTakenForPredefinedScreener: YahooNumber, // 400\n    timeTakenForCrunchbase: YahooNumber, // 400\n    timeTakenForNav: YahooNumber, // 400\n    timeTakenForResearchReports: YahooNumber, // 0\n    // ALWAYS present, but TEMPORARILY marked optional (\"?\") since its\n    // sudden appearance, let's make sure it doesn't get suddenly removed.\n    timeTakenForScreenerField: Type.Optional(YahooNumber),\n    // ALWAYS present, but TEMPORARILY marked optional (\"?\") since its\n    // sudden appearance, let's make sure it doesn't get suddenly removed.\n    timeTakenForCulturalAssets: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n    title: \"SearchResults\",\n});\nconst SearchOptionsSchema = Type.Object({\n    lang: Type.Optional(Type.String()),\n    region: Type.Optional(Type.String()),\n    quotesCount: Type.Optional(YahooNumber),\n    newsCount: Type.Optional(YahooNumber),\n    enableFuzzyQuery: Type.Optional(Type.Boolean()),\n    quotesQueryId: Type.Optional(Type.String()),\n    multiQuoteQueryId: Type.Optional(Type.String()),\n    newsQueryId: Type.Optional(Type.String()),\n    enableCb: Type.Optional(Type.Boolean()),\n    enableNavLinks: Type.Optional(Type.Boolean()),\n    enableEnhancedTrivialQuery: Type.Optional(Type.Boolean()),\n}, {\n    title: \"SearchOptions\",\n    additionalProperties: false,\n});\nconst queryOptionsDefaults = {\n    lang: \"en-US\",\n    region: \"US\",\n    quotesCount: 6,\n    newsCount: 4,\n    enableFuzzyQuery: false,\n    quotesQueryId: \"tss_match_phrase_query\",\n    multiQuoteQueryId: \"multi_quote_single_token_query\",\n    newsQueryId: \"news_cie_vespa\",\n    enableCb: true,\n    enableNavLinks: true,\n    enableEnhancedTrivialQuery: true,\n};\nexport default function search(query, queryOptionsOverrides, moduleOptions) {\n    return this._moduleExec({\n        moduleName: \"searchTypebox\",\n        query: {\n            url: \"https://${YF_QUERY_HOST}/v1/finance/search\",\n            schema: SearchOptionsSchema,\n            defaults: queryOptionsDefaults,\n            runtime: { q: query },\n            overrides: queryOptionsOverrides,\n            needsCrumb: false,\n        },\n        result: {\n            schema: SearchResultSchema,\n        },\n        moduleOptions,\n    });\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4329, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4335, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/modules/trendingSymbols.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\nimport { YahooNumber } from \"../lib/yahooFinanceTypes.js\";\nconst TrendingSymbol = Type.Object({\n    symbol: Type.String(),\n}, {\n    additionalProperties: Type.Any(),\n});\nconst TrendingSymbolsResult = Type.Object({\n    count: YahooNumber,\n    quotes: Type.Array(TrendingSymbol),\n    jobTimestamp: YahooNumber,\n    startInterval: YahooNumber,\n}, {\n    additionalProperties: Type.Any(),\n    title: \"TrendingSymbolsResult\",\n});\nconst TrendingSymbolsOptions = Type.Optional(Type.Object({\n    lang: Type.Optional(Type.String()),\n    region: Type.Optional(Type.String()),\n    count: Type.Optional(YahooNumber),\n}, {\n    title: \"TrendingSymbolsOptions\",\n}));\nconst queryOptionsDefaults = {\n    lang: \"en-US\",\n    count: 5,\n};\nexport default function trendingSymbols(query, queryOptionsOverrides, moduleOptions) {\n    return this._moduleExec({\n        moduleName: \"trendingSymbols\",\n        query: {\n            url: \"https://${YF_QUERY_HOST}/v1/finance/trending/\" + query,\n            schema: TrendingSymbolsOptions,\n            defaults: queryOptionsDefaults,\n            overrides: queryOptionsOverrides,\n        },\n        result: {\n            schema: TrendingSymbolsResult,\n            transformWith(result) {\n                if (!result.finance)\n                    throw new Error(\"Unexpected result: \" + JSON.stringify(result));\n                return result.finance.result[0];\n            },\n        },\n        moduleOptions,\n    });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAEA,MAAM,iBAAiB,iMAAA,CAAA,OAAI,CAAC,MAAM,CAAC;IAC/B,QAAQ,iMAAA,CAAA,OAAI,CAAC,MAAM;AACvB,GAAG;IACC,sBAAsB,iMAAA,CAAA,OAAI,CAAC,GAAG;AAClC;AACA,MAAM,wBAAwB,iMAAA,CAAA,OAAI,CAAC,MAAM,CAAC;IACtC,OAAO,qLAAA,CAAA,cAAW;IAClB,QAAQ,iMAAA,CAAA,OAAI,CAAC,KAAK,CAAC;IACnB,cAAc,qLAAA,CAAA,cAAW;IACzB,eAAe,qLAAA,CAAA,cAAW;AAC9B,GAAG;IACC,sBAAsB,iMAAA,CAAA,OAAI,CAAC,GAAG;IAC9B,OAAO;AACX;AACA,MAAM,yBAAyB,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,iMAAA,CAAA,OAAI,CAAC,MAAM,CAAC;IACrD,MAAM,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,iMAAA,CAAA,OAAI,CAAC,MAAM;IAC/B,QAAQ,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,iMAAA,CAAA,OAAI,CAAC,MAAM;IACjC,OAAO,iMAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,qLAAA,CAAA,cAAW;AACpC,GAAG;IACC,OAAO;AACX;AACA,MAAM,uBAAuB;IACzB,MAAM;IACN,OAAO;AACX;AACe,SAAS,gBAAgB,KAAK,EAAE,qBAAqB,EAAE,aAAa;IAC/E,OAAO,IAAI,CAAC,WAAW,CAAC;QACpB,YAAY;QACZ,OAAO;YACH,KAAK,kDAAkD;YACvD,QAAQ;YACR,UAAU;YACV,WAAW;QACf;QACA,QAAQ;YACJ,QAAQ;YACR,eAAc,MAAM;gBAChB,IAAI,CAAC,OAAO,OAAO,EACf,MAAM,IAAI,MAAM,wBAAwB,KAAK,SAAS,CAAC;gBAC3D,OAAO,OAAO,OAAO,CAAC,MAAM,CAAC,EAAE;YACnC;QACJ;QACA;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 4387, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4393, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/modules/dailyGainers.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\nimport { YahooNumber } from \"../lib/yahooFinanceTypes.js\";\nconst DailyGainersCriterum = Type.Object({\n    field: Type.String(),\n    operators: Type.Array(Type.String()),\n    values: Type.Array(YahooNumber),\n    labelsSelected: Type.Array(YahooNumber),\n    dependentValues: Type.Array(Type.Any()),\n}, { title: \"DailyGainersCriterium\" });\nconst DailyGainersQuote = Type.Object({\n    language: Type.String(),\n    region: Type.String(),\n    quoteType: Type.String(),\n    typeDisp: Type.String(),\n    quoteSourceName: Type.String(),\n    triggerable: Type.Boolean(),\n    customPriceAlertConfidence: Type.String(),\n    lastCloseTevEbitLtm: Type.Optional(YahooNumber),\n    lastClosePriceToNNWCPerShare: Type.Optional(YahooNumber),\n    firstTradeDateMilliseconds: YahooNumber,\n    priceHint: YahooNumber,\n    postMarketChangePercent: Type.Optional(YahooNumber),\n    postMarketTime: Type.Optional(YahooNumber),\n    postMarketPrice: Type.Optional(YahooNumber),\n    postMarketChange: Type.Optional(YahooNumber),\n    regularMarketChange: YahooNumber,\n    regularMarketTime: YahooNumber,\n    regularMarketPrice: YahooNumber,\n    regularMarketDayHigh: YahooNumber,\n    regularMarketDayRange: Type.String(),\n    currency: Type.String(),\n    regularMarketDayLow: YahooNumber,\n    regularMarketVolume: YahooNumber,\n    regularMarketPreviousClose: YahooNumber,\n    bid: Type.Optional(YahooNumber),\n    ask: Type.Optional(YahooNumber),\n    bidSize: Type.Optional(YahooNumber),\n    askSize: Type.Optional(YahooNumber),\n    market: Type.String(),\n    messageBoardId: Type.String(),\n    fullExchangeName: Type.String(),\n    longName: Type.String(),\n    financialCurrency: Type.Optional(Type.String()),\n    regularMarketOpen: YahooNumber,\n    averageDailyVolume3Month: YahooNumber,\n    averageDailyVolume10Day: YahooNumber,\n    fiftyTwoWeekLowChange: YahooNumber,\n    fiftyTwoWeekLowChangePercent: YahooNumber,\n    fiftyTwoWeekRange: Type.String(),\n    fiftyTwoWeekHighChange: YahooNumber,\n    fiftyTwoWeekHighChangePercent: YahooNumber,\n    fiftyTwoWeekChangePercent: YahooNumber,\n    earningsTimestamp: Type.Optional(YahooNumber),\n    earningsTimestampStart: Type.Optional(YahooNumber),\n    earningsTimestampEnd: Type.Optional(YahooNumber),\n    trailingAnnualDividendRate: YahooNumber,\n    trailingAnnualDividendYield: YahooNumber,\n    marketState: Type.String(),\n    epsTrailingTwelveMonths: Type.Optional(YahooNumber),\n    epsForward: Type.Optional(YahooNumber),\n    epsCurrentYear: Type.Optional(YahooNumber),\n    priceEpsCurrentYear: Type.Optional(YahooNumber),\n    sharesOutstanding: YahooNumber,\n    bookValue: Type.Optional(YahooNumber),\n    fiftyDayAverage: YahooNumber,\n    fiftyDayAverageChange: YahooNumber,\n    fiftyDayAverageChangePercent: YahooNumber,\n    twoHundredDayAverage: YahooNumber,\n    twoHundredDayAverageChange: YahooNumber,\n    twoHundredDayAverageChangePercent: YahooNumber,\n    marketCap: YahooNumber,\n    forwardPE: Type.Optional(YahooNumber),\n    priceToBook: Type.Optional(YahooNumber),\n    sourceInterval: YahooNumber,\n    exchangeDataDelayedBy: YahooNumber,\n    exchangeTimezoneName: Type.String(),\n    exchangeTimezoneShortName: Type.String(),\n    gmtOffSetMilliseconds: YahooNumber,\n    esgPopulated: Type.Boolean(),\n    tradeable: Type.Boolean(),\n    cryptoTradeable: Type.Boolean(),\n    exchange: Type.String(),\n    fiftyTwoWeekLow: YahooNumber,\n    fiftyTwoWeekHigh: YahooNumber,\n    shortName: Type.String(),\n    averageAnalystRating: Type.Optional(Type.String()),\n    regularMarketChangePercent: YahooNumber,\n    symbol: Type.String(),\n    dividendDate: Type.Optional(YahooNumber),\n    displayName: Type.Optional(Type.String()),\n    trailingPE: Type.Optional(YahooNumber),\n    prevName: Type.Optional(Type.String()),\n    nameChangeDate: Type.Optional(YahooNumber),\n    ipoExpectedDate: Type.Optional(YahooNumber),\n    dividendYield: Type.Optional(YahooNumber),\n    dividendRate: Type.Optional(YahooNumber),\n}, { title: \"DailyGainersQuote\" });\nconst DailyGainersOptionsSchema = Type.Object({\n    lang: Type.Optional(Type.String()),\n    region: Type.Optional(Type.String()),\n    count: Type.Optional(YahooNumber),\n}, { title: \"DailyGainersOptions\" });\nconst DailyGainersCriteriaMeta = Type.Object({\n    size: YahooNumber,\n    offset: YahooNumber,\n    sortField: Type.String(),\n    sortType: Type.String(),\n    quoteType: Type.String(),\n    criteria: Type.Array(DailyGainersCriterum),\n    topOperator: Type.String(),\n}, { title: \"DailyGainersCriteriaMeta\" });\nconst DailyGainersResultSchema = Type.Object({\n    id: Type.String(),\n    title: Type.String(),\n    description: Type.String(),\n    canonicalName: Type.String(),\n    criteriaMeta: DailyGainersCriteriaMeta,\n    rawCriteria: Type.String(),\n    start: YahooNumber,\n    count: YahooNumber,\n    total: YahooNumber,\n    quotes: Type.Array(DailyGainersQuote),\n    useRecords: Type.Boolean(),\n    predefinedScr: Type.Boolean(),\n    versionId: YahooNumber,\n    creationDate: YahooNumber,\n    lastUpdated: YahooNumber,\n    isPremium: Type.Boolean(),\n    iconUrl: Type.String(),\n}, { title: \"DailyGainersResult\" });\nconst queryOptionsDefaults = {\n    lang: \"en-US\",\n    region: \"US\",\n    scrIds: \"day_gainers\",\n    count: 5,\n};\nexport default function dailyGainers(queryOptionsOverrides, moduleOptions) {\n    return this._moduleExec({\n        moduleName: \"dailyGainers\",\n        query: {\n            url: \"https://${YF_QUERY_HOST}/v1/finance/screener/predefined/saved\",\n            schema: DailyGainersOptionsSchema,\n            defaults: queryOptionsDefaults,\n            overrides: queryOptionsOverrides,\n            needsCrumb: true,\n        },\n        result: {\n            schema: DailyGainersResultSchema,\n            transformWith(result) {\n                if (!result.finance)\n                    throw new Error(\"Unexpected result: \" + JSON.stringify(result));\n                return result.finance.result[0];\n            },\n        },\n        moduleOptions,\n    });\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4571, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/modules/screener.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\nimport { YahooFinanceDate, YahooNumber, YahooTwoNumberRange, } from \"../lib/yahooFinanceTypes.js\";\nconst ScreenerCriterum = Type.Object({\n    field: Type.String(),\n    operators: Type.Array(Type.String()),\n    values: Type.Array(YahooNumber),\n    labelsSelected: Type.Array(YahooNumber),\n    dependentValues: Type.Array(Type.Any()),\n}, {\n    title: \"ScreenerCriterum\",\n});\nconst ScreenerCriteriaMeta = Type.Object({\n    size: YahooNumber,\n    offset: YahooNumber,\n    sortField: Type.String(),\n    sortType: Type.String(),\n    quoteType: Type.String(),\n    criteria: Type.Array(ScreenerCriterum),\n    topOperator: Type.String(),\n}, {\n    title: \"ScreenerCriteriaMeta\",\n});\nconst ScreenerQuote = Type.Object({\n    language: Type.String(),\n    region: Type.String(),\n    quoteType: Type.String(),\n    typeDisp: Type.String(),\n    quoteSourceName: Type.String(),\n    triggerable: Type.Boolean(),\n    customPriceAlertConfidence: Type.String(),\n    lastCloseTevEbitLtm: Type.Optional(YahooNumber),\n    lastClosePriceToNNWCPerShare: Type.Optional(YahooNumber),\n    firstTradeDateMilliseconds: YahooNumber,\n    priceHint: YahooNumber,\n    postMarketChangePercent: Type.Optional(YahooNumber),\n    postMarketTime: Type.Optional(YahooNumber),\n    postMarketPrice: Type.Optional(YahooNumber),\n    postMarketChange: Type.Optional(YahooNumber),\n    regularMarketChange: YahooNumber,\n    regularMarketTime: YahooNumber,\n    regularMarketPrice: YahooNumber,\n    regularMarketDayHigh: Type.Optional(YahooNumber),\n    regularMarketDayRange: YahooTwoNumberRange,\n    currency: Type.String(),\n    regularMarketDayLow: Type.Optional(YahooNumber),\n    regularMarketVolume: Type.Optional(YahooNumber),\n    regularMarketPreviousClose: YahooNumber,\n    bid: Type.Optional(YahooNumber),\n    ask: Type.Optional(YahooNumber),\n    bidSize: Type.Optional(YahooNumber),\n    askSize: Type.Optional(YahooNumber),\n    market: Type.String(),\n    messageBoardId: Type.String(),\n    fullExchangeName: Type.String(),\n    longName: Type.String(),\n    financialCurrency: Type.Optional(Type.String()),\n    regularMarketOpen: Type.Optional(YahooNumber),\n    averageDailyVolume3Month: YahooNumber,\n    averageDailyVolume10Day: YahooNumber,\n    fiftyTwoWeekLowChange: YahooNumber,\n    fiftyTwoWeekLowChangePercent: YahooNumber,\n    fiftyTwoWeekRange: YahooTwoNumberRange,\n    fiftyTwoWeekHighChange: YahooNumber,\n    fiftyTwoWeekHighChangePercent: YahooNumber,\n    fiftyTwoWeekChangePercent: YahooNumber,\n    earningsTimestamp: Type.Optional(YahooNumber),\n    earningsTimestampStart: Type.Optional(YahooNumber),\n    earningsTimestampEnd: Type.Optional(YahooNumber),\n    trailingAnnualDividendRate: Type.Optional(YahooNumber),\n    trailingAnnualDividendYield: Type.Optional(YahooNumber),\n    marketState: Type.String(),\n    epsTrailingTwelveMonths: Type.Optional(YahooNumber),\n    epsForward: Type.Optional(YahooNumber),\n    epsCurrentYear: Type.Optional(YahooNumber),\n    priceEpsCurrentYear: Type.Optional(YahooNumber),\n    sharesOutstanding: Type.Optional(YahooNumber),\n    bookValue: Type.Optional(YahooNumber),\n    fiftyDayAverage: YahooNumber,\n    fiftyDayAverageChange: YahooNumber,\n    fiftyDayAverageChangePercent: YahooNumber,\n    twoHundredDayAverage: YahooNumber,\n    twoHundredDayAverageChange: YahooNumber,\n    twoHundredDayAverageChangePercent: YahooNumber,\n    marketCap: Type.Optional(YahooNumber),\n    forwardPE: Type.Optional(YahooNumber),\n    priceToBook: Type.Optional(YahooNumber),\n    sourceInterval: YahooNumber,\n    exchangeDataDelayedBy: YahooNumber,\n    exchangeTimezoneName: Type.String(),\n    exchangeTimezoneShortName: Type.String(),\n    gmtOffSetMilliseconds: YahooNumber,\n    esgPopulated: Type.Boolean(),\n    tradeable: Type.Boolean(),\n    cryptoTradeable: Type.Boolean(),\n    exchange: Type.String(),\n    fiftyTwoWeekLow: YahooNumber,\n    fiftyTwoWeekHigh: YahooNumber,\n    shortName: Type.String(),\n    averageAnalystRating: Type.Optional(Type.String()),\n    regularMarketChangePercent: YahooNumber,\n    symbol: Type.String(),\n    dividendDate: Type.Optional(YahooFinanceDate),\n    displayName: Type.Optional(Type.String()),\n    trailingPE: Type.Optional(YahooNumber),\n    prevName: Type.Optional(Type.String()),\n    nameChangeDate: Type.Optional(YahooFinanceDate),\n    ipoExpectedDate: Type.Optional(YahooFinanceDate),\n    dividendYield: Type.Optional(YahooNumber),\n    dividendRate: Type.Optional(YahooNumber),\n    yieldTTM: Type.Optional(YahooNumber),\n    peTTM: Type.Optional(YahooNumber),\n    annualReturnNavY3: Type.Optional(YahooNumber),\n    annualReturnNavY5: Type.Optional(YahooNumber),\n    ytdReturn: Type.Optional(YahooNumber),\n    trailingThreeMonthReturns: Type.Optional(YahooNumber),\n    netAssets: Type.Optional(YahooNumber),\n    netExpenseRatio: Type.Optional(YahooNumber),\n}, {\n    title: \"ScreenerQuote\",\n});\nconst ScreenerResult = Type.Object({\n    id: Type.String(),\n    title: Type.String(),\n    description: Type.String(),\n    canonicalName: Type.String(),\n    criteriaMeta: ScreenerCriteriaMeta,\n    rawCriteria: Type.String(),\n    start: YahooNumber,\n    count: YahooNumber,\n    total: YahooNumber,\n    quotes: Type.Array(ScreenerQuote),\n    useRecords: Type.Boolean(),\n    predefinedScr: Type.Boolean(),\n    versionId: YahooNumber,\n    creationDate: YahooFinanceDate,\n    lastUpdated: YahooFinanceDate,\n    isPremium: Type.Boolean(),\n    iconUrl: Type.String(),\n}, {\n    title: \"ScreenerResult\",\n});\nconst PredefinedScreenerModules = Type.Union([\n    Type.Literal(\"aggressive_small_caps\"),\n    Type.Literal(\"conservative_foreign_funds\"),\n    Type.Literal(\"day_gainers\"),\n    Type.Literal(\"day_losers\"),\n    Type.Literal(\"growth_technology_stocks\"),\n    Type.Literal(\"high_yield_bond\"),\n    Type.Literal(\"most_actives\"),\n    Type.Literal(\"most_shorted_stocks\"),\n    Type.Literal(\"portfolio_anchors\"),\n    Type.Literal(\"small_cap_gainers\"),\n    Type.Literal(\"solid_large_growth_funds\"),\n    Type.Literal(\"solid_midcap_growth_funds\"),\n    Type.Literal(\"top_mutual_funds\"),\n    Type.Literal(\"undervalued_growth_stocks\"),\n    Type.Literal(\"undervalued_large_caps\"),\n], {\n    title: \"ScreenerPredefinedScreenerModules\",\n});\nconst queryOptionsDefaults = {\n    lang: \"en-US\",\n    region: \"US\",\n    scrIds: \"day_gainers\",\n    count: 5,\n};\nconst ScreenerOptions = Type.Object({\n    lang: Type.Optional(Type.String()),\n    region: Type.Optional(Type.String()),\n    scrIds: PredefinedScreenerModules,\n    count: Type.Optional(Type.Number()),\n});\nexport default function screener(queryOptionsOverrides, moduleOptions) {\n    return this._moduleExec({\n        moduleName: \"screener\",\n        query: {\n            url: \"https://${YF_QUERY_HOST}/v1/finance/screener/predefined/saved\",\n            schema: ScreenerOptions,\n            defaults: queryOptionsDefaults,\n            overrides: queryOptionsOverrides,\n            needsCrumb: true,\n        },\n        result: {\n            schema: ScreenerResult,\n            transformWith(result) {\n                // console.log(result);\n                if (!result.finance)\n                    throw new Error(\"Unexpected result: \" + JSON.stringify(result));\n                return result.finance.result[0];\n            },\n        },\n        moduleOptions,\n    });\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4770, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4776, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/other/quoteCombine.js"],"sourcesContent":["import { validateAndCoerceTypebox } from \"../lib/validateAndCoerceTypes.js\";\nimport quote, { QuoteOptionsSchema } from \"../modules/quote.js\";\nconst DEBOUNCE_TIME = 50;\nconst slugMap = new Map();\nexport default function quoteCombine(query, queryOptionsOverrides = {}, moduleOptions) {\n    const symbol = query;\n    if (typeof symbol !== \"string\")\n        throw new Error(\"quoteCombine expects a string query parameter, received: \" +\n            JSON.stringify(symbol, null, 2));\n    validateAndCoerceTypebox({\n        type: \"options\",\n        data: queryOptionsOverrides,\n        schema: QuoteOptionsSchema,\n        options: this._opts.validation,\n    });\n    // Make sure we only combine requests with same options\n    const slug = JSON.stringify(queryOptionsOverrides);\n    let entry = slugMap.get(slug);\n    if (!entry) {\n        entry = {\n            timeout: null,\n            queryOptionsOverrides,\n            symbols: new Map(),\n        };\n        slugMap.set(slug, entry);\n    }\n    if (entry.timeout)\n        clearTimeout(entry.timeout);\n    const thisQuote = quote.bind(this);\n    return new Promise((resolve, reject) => {\n        let symbolPromiseCallbacks = entry.symbols.get(symbol);\n        /* istanbul ignore else */\n        if (!symbolPromiseCallbacks) {\n            symbolPromiseCallbacks = [];\n            entry.symbols.set(symbol, symbolPromiseCallbacks);\n        }\n        symbolPromiseCallbacks.push({ resolve, reject });\n        entry.timeout = setTimeout(() => {\n            slugMap.delete(slug);\n            const symbols = Array.from(entry.symbols.keys());\n            // @ts-ignore\n            thisQuote(symbols, queryOptionsOverrides, moduleOptions)\n                .then((results) => {\n                for (const result of results) {\n                    for (const promise of entry.symbols.get(result.symbol)) {\n                        promise.resolve(result);\n                        promise.resolved = true;\n                    }\n                }\n                // Check for symbols we asked for and didn't get back,\n                // e.g. non-existent symbols (#150)\n                for (const [_, promises] of entry.symbols) {\n                    for (const promise of promises) {\n                        if (!promise.resolved) {\n                            promise.resolve(undefined);\n                        }\n                    }\n                }\n            })\n                .catch((error) => {\n                for (const symbolPromiseCallbacks of entry.symbols.values())\n                    for (const promise of symbolPromiseCallbacks)\n                        promise.reject(error);\n            });\n        }, DEBOUNCE_TIME);\n    });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA,MAAM,gBAAgB;AACtB,MAAM,UAAU,IAAI;AACL,SAAS,aAAa,KAAK,EAAE,wBAAwB,CAAC,CAAC,EAAE,aAAa;IACjF,MAAM,SAAS;IACf,IAAI,OAAO,WAAW,UAClB,MAAM,IAAI,MAAM,8DACZ,KAAK,SAAS,CAAC,QAAQ,MAAM;IACrC,CAAA,GAAA,0LAAA,CAAA,2BAAwB,AAAD,EAAE;QACrB,MAAM;QACN,MAAM;QACN,QAAQ,6KAAA,CAAA,qBAAkB;QAC1B,SAAS,IAAI,CAAC,KAAK,CAAC,UAAU;IAClC;IACA,uDAAuD;IACvD,MAAM,OAAO,KAAK,SAAS,CAAC;IAC5B,IAAI,QAAQ,QAAQ,GAAG,CAAC;IACxB,IAAI,CAAC,OAAO;QACR,QAAQ;YACJ,SAAS;YACT;YACA,SAAS,IAAI;QACjB;QACA,QAAQ,GAAG,CAAC,MAAM;IACtB;IACA,IAAI,MAAM,OAAO,EACb,aAAa,MAAM,OAAO;IAC9B,MAAM,YAAY,6KAAA,CAAA,UAAK,CAAC,IAAI,CAAC,IAAI;IACjC,OAAO,IAAI,QAAQ,CAAC,SAAS;QACzB,IAAI,yBAAyB,MAAM,OAAO,CAAC,GAAG,CAAC;QAC/C,wBAAwB,GACxB,IAAI,CAAC,wBAAwB;YACzB,yBAAyB,EAAE;YAC3B,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ;QAC9B;QACA,uBAAuB,IAAI,CAAC;YAAE;YAAS;QAAO;QAC9C,MAAM,OAAO,GAAG,WAAW;YACvB,QAAQ,MAAM,CAAC;YACf,MAAM,UAAU,MAAM,IAAI,CAAC,MAAM,OAAO,CAAC,IAAI;YAC7C,aAAa;YACb,UAAU,SAAS,uBAAuB,eACrC,IAAI,CAAC,CAAC;gBACP,KAAK,MAAM,UAAU,QAAS;oBAC1B,KAAK,MAAM,WAAW,MAAM,OAAO,CAAC,GAAG,CAAC,OAAO,MAAM,EAAG;wBACpD,QAAQ,OAAO,CAAC;wBAChB,QAAQ,QAAQ,GAAG;oBACvB;gBACJ;gBACA,sDAAsD;gBACtD,mCAAmC;gBACnC,KAAK,MAAM,CAAC,GAAG,SAAS,IAAI,MAAM,OAAO,CAAE;oBACvC,KAAK,MAAM,WAAW,SAAU;wBAC5B,IAAI,CAAC,QAAQ,QAAQ,EAAE;4BACnB,QAAQ,OAAO,CAAC;wBACpB;oBACJ;gBACJ;YACJ,GACK,KAAK,CAAC,CAAC;gBACR,KAAK,MAAM,0BAA0B,MAAM,OAAO,CAAC,MAAM,GACrD,KAAK,MAAM,WAAW,uBAClB,QAAQ,MAAM,CAAC;YAC3B;QACJ,GAAG;IACP;AACJ","ignoreList":[0]}},
    {"offset": {"line": 4843, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4849, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/index-common.js"],"sourcesContent":["// libs\nimport yahooFinanceFetch from \"./lib/yahooFinanceFetch.js\";\nimport options from \"./lib/options.js\";\nimport errors from \"./lib/errors.js\";\nimport setGlobalConfig from \"./lib/setGlobalConfig.js\";\nimport moduleExec from \"./lib/moduleExec.js\";\nimport { suppressNotices } from \"./lib/notices.js\";\n// modules\nimport autoc from \"./modules/autoc.js\";\nimport chart, { _chart } from \"./modules/chart.js\";\nimport historical from \"./modules/historical.js\";\nimport insights from \"./modules/insights.js\";\nimport optionsModule from \"./modules/options.js\";\nimport quote from \"./modules/quote.js\";\nimport quoteSummary from \"./modules/quoteSummary.js\";\nimport fundamentalsTimeSeries from \"./modules/fundamentalsTimeSeries.js\";\nimport recommendationsBySymbol from \"./modules/recommendationsBySymbol.js\";\nimport search from \"./modules/search.js\";\nimport trendingSymbols from \"./modules/trendingSymbols.js\";\nimport dailyGainers from \"./modules/dailyGainers.js\";\nimport screener from \"./modules/screener.js\";\n// other\nimport quoteCombine from \"./other/quoteCombine.js\";\nexport default {\n    // internal\n    _env: {},\n    _fetch: yahooFinanceFetch,\n    _moduleExec: moduleExec,\n    _opts: options,\n    // common\n    errors,\n    setGlobalConfig,\n    suppressNotices,\n    // modules,\n    autoc,\n    chart,\n    _chart,\n    historical,\n    insights,\n    options: optionsModule,\n    quote,\n    quoteSummary,\n    fundamentalsTimeSeries,\n    recommendationsBySymbol,\n    search,\n    trendingSymbols,\n    dailyGainers,\n    screener,\n    // other\n    quoteCombine,\n};\n"],"names":[],"mappings":"AAAA,OAAO;;;;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;;;;;;;;;;;;;;;;;;;;uCACe;IACX,WAAW;IACX,MAAM,CAAC;IACP,QAAQ,qLAAA,CAAA,UAAiB;IACzB,aAAa,8KAAA,CAAA,UAAU;IACvB,OAAO,2KAAA,CAAA,UAAO;IACd,SAAS;IACT,QAAA,0KAAA,CAAA,UAAM;IACN,iBAAA,mLAAA,CAAA,UAAe;IACf,iBAAA,2KAAA,CAAA,kBAAe;IACf,WAAW;IACX,OAAA,6KAAA,CAAA,UAAK;IACL,OAAA,6KAAA,CAAA,UAAK;IACL,QAAA,6KAAA,CAAA,SAAM;IACN,YAAA,kLAAA,CAAA,UAAU;IACV,UAAA,gLAAA,CAAA,UAAQ;IACR,SAAS,+KAAA,CAAA,UAAa;IACtB,OAAA,6KAAA,CAAA,UAAK;IACL,cAAA,oLAAA,CAAA,UAAY;IACZ,wBAAA,8LAAA,CAAA,UAAsB;IACtB,yBAAA,+LAAA,CAAA,UAAuB;IACvB,QAAA,8KAAA,CAAA,UAAM;IACN,iBAAA,uLAAA,CAAA,UAAe;IACf,cAAA,oLAAA,CAAA,UAAY;IACZ,UAAA,gLAAA,CAAA,UAAQ;IACR,QAAQ;IACR,cAAA,kLAAA,CAAA,UAAY;AAChB","ignoreList":[0]}},
    {"offset": {"line": 4923, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4929, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/env-node.js"],"sourcesContent":["import { URLSearchParams } from \"url\";\nexport default {\n    fetch,\n    URLSearchParams,\n};\n"],"names":[],"mappings":";;;AAAA;;uCACe;IACX;IACA,iBAAA,+FAAA,CAAA,kBAAe;AACnB","ignoreList":[0]}},
    {"offset": {"line": 4938, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4944, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/yahoo-finance2/dist/esm/src/index-node.js"],"sourcesContent":["import yahooFinance from \"./index-common.js\";\nimport nodeEnvironment from \"./env-node.js\";\nimport { ExtendedCookieJar } from \"./lib/cookieJar.js\";\nyahooFinance._env = nodeEnvironment;\nexport { ExtendedCookieJar };\nexport default yahooFinance;\n"],"names":[],"mappings":";;;AAAA;AACA;;;;AAEA,4KAAA,CAAA,UAAY,CAAC,IAAI,GAAG,wKAAA,CAAA,UAAe;;uCAEpB,4KAAA,CAAA,UAAY","ignoreList":[0]}},
    {"offset": {"line": 4955, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}