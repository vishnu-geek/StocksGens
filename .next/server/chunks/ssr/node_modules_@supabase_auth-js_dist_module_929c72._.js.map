{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"version.js","sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40supabase/auth-js/src/lib/version.ts"],"sourcesContent":["export const version = '2.67.3'\n"],"names":[],"mappings":";;;AAAO,MAAM,OAAO,GAAG,QAAQ,CAAA","ignoreList":[0]}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"file":"constants.js","sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40supabase/auth-js/src/lib/constants.ts"],"sourcesContent":["import { version } from './version'\nexport const GOTRUE_URL = 'http://localhost:9999'\nexport const STORAGE_KEY = 'supabase.auth.token'\nexport const AUDIENCE = ''\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` }\nexport const EXPIRY_MARGIN = 10 // in seconds\nexport const NETWORK_FAILURE = {\n  MAX_RETRIES: 10,\n  RETRY_INTERVAL: 2, // in deciseconds\n}\n\nexport const API_VERSION_HEADER_NAME = 'X-Supabase-Api-Version'\nexport const API_VERSIONS = {\n  '2024-01-01': {\n    timestamp: Date.parse('2024-01-01T00:00:00.0Z'),\n    name: '2024-01-01',\n  },\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;;AAC5B,MAAM,UAAU,GAAG,uBAAuB,CAAA;AAC1C,MAAM,WAAW,GAAG,qBAAqB,CAAA;AACzC,MAAM,QAAQ,GAAG,EAAE,CAAA;AACnB,MAAM,eAAe,GAAG;IAAE,eAAe,EAAE,CAAA,UAAA,+KAAa,UAAO,EAAE;AAAA,CAAE,CAAA;AACnE,MAAM,aAAa,GAAG,EAAE,CAAA,CAAC,aAAa;AACtC,MAAM,eAAe,GAAG;IAC7B,WAAW,EAAE,EAAE;IACf,cAAc,EAAE,CAAC,EAAE,iBAAiB;CACrC,CAAA;AAEM,MAAM,uBAAuB,GAAG,wBAAwB,CAAA;AACxD,MAAM,YAAY,GAAG;IAC1B,YAAY,EAAE;QACZ,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,wBAAwB,CAAC;QAC/C,IAAI,EAAE,YAAY;KACnB;CACF,CAAA","ignoreList":[0]}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"file":"helpers.js","sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40supabase/auth-js/src/lib/helpers.ts"],"sourcesContent":["import { API_VERSION_HEADER_NAME } from './constants'\nimport { SupportedStorage } from './types'\n\nexport function expiresAt(expiresIn: number) {\n  const timeNow = Math.round(Date.now() / 1000)\n  return timeNow + expiresIn\n}\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\nexport const isBrowser = () => typeof window !== 'undefined' && typeof document !== 'undefined'\n\nconst localStorageWriteTests = {\n  tested: false,\n  writable: false,\n}\n\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n  if (!isBrowser()) {\n    return false\n  }\n\n  try {\n    if (typeof globalThis.localStorage !== 'object') {\n      return false\n    }\n  } catch (e) {\n    // DOM exception when accessing `localStorage`\n    return false\n  }\n\n  if (localStorageWriteTests.tested) {\n    return localStorageWriteTests.writable\n  }\n\n  const randomKey = `lswt-${Math.random()}${Math.random()}`\n\n  try {\n    globalThis.localStorage.setItem(randomKey, randomKey)\n    globalThis.localStorage.removeItem(randomKey)\n\n    localStorageWriteTests.tested = true\n    localStorageWriteTests.writable = true\n  } catch (e) {\n    // localStorage can't be written to\n    // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n\n    localStorageWriteTests.tested = true\n    localStorageWriteTests.writable = false\n  }\n\n  return localStorageWriteTests.writable\n}\n\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */\nexport function parseParametersFromURL(href: string) {\n  const result: { [parameter: string]: string } = {}\n\n  const url = new URL(href)\n\n  if (url.hash && url.hash[0] === '#') {\n    try {\n      const hashSearchParams = new URLSearchParams(url.hash.substring(1))\n      hashSearchParams.forEach((value, key) => {\n        result[key] = value\n      })\n    } catch (e: any) {\n      // hash is not a query string\n    }\n  }\n\n  // search parameters take precedence over hash parameters\n  url.searchParams.forEach((value, key) => {\n    result[key] = value\n  })\n\n  return result\n}\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = (...args) =>\n      import('@supabase/node-fetch' as any).then(({ default: fetch }) => fetch(...args))\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n\nexport const looksLikeFetchResponse = (maybeResponse: unknown): maybeResponse is Response => {\n  return (\n    typeof maybeResponse === 'object' &&\n    maybeResponse !== null &&\n    'status' in maybeResponse &&\n    'ok' in maybeResponse &&\n    'json' in maybeResponse &&\n    typeof (maybeResponse as any).json === 'function'\n  )\n}\n\n// Storage helpers\nexport const setItemAsync = async (\n  storage: SupportedStorage,\n  key: string,\n  data: any\n): Promise<void> => {\n  await storage.setItem(key, JSON.stringify(data))\n}\n\nexport const getItemAsync = async (storage: SupportedStorage, key: string): Promise<unknown> => {\n  const value = await storage.getItem(key)\n\n  if (!value) {\n    return null\n  }\n\n  try {\n    return JSON.parse(value)\n  } catch {\n    return value\n  }\n}\n\nexport const removeItemAsync = async (storage: SupportedStorage, key: string): Promise<void> => {\n  await storage.removeItem(key)\n}\n\nexport function decodeBase64URL(value: string): string {\n  const key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n  let base64 = ''\n  let chr1, chr2, chr3\n  let enc1, enc2, enc3, enc4\n  let i = 0\n  value = value.replace('-', '+').replace('_', '/')\n\n  while (i < value.length) {\n    enc1 = key.indexOf(value.charAt(i++))\n    enc2 = key.indexOf(value.charAt(i++))\n    enc3 = key.indexOf(value.charAt(i++))\n    enc4 = key.indexOf(value.charAt(i++))\n    chr1 = (enc1 << 2) | (enc2 >> 4)\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2)\n    chr3 = ((enc3 & 3) << 6) | enc4\n    base64 = base64 + String.fromCharCode(chr1)\n\n    if (enc3 != 64 && chr2 != 0) {\n      base64 = base64 + String.fromCharCode(chr2)\n    }\n    if (enc4 != 64 && chr3 != 0) {\n      base64 = base64 + String.fromCharCode(chr3)\n    }\n  }\n  return base64\n}\n\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred<T = any> {\n  public static promiseConstructor: PromiseConstructor = Promise\n\n  public readonly promise!: PromiseLike<T>\n\n  public readonly resolve!: (value?: T | PromiseLike<T>) => void\n\n  public readonly reject!: (reason?: any) => any\n\n  public constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;(this as any).promise = new Deferred.promiseConstructor((res, rej) => {\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;(this as any).resolve = res\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;(this as any).reject = rej\n    })\n  }\n}\n\n// Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\nexport function decodeJWTPayload(token: string) {\n  // Regex checks for base64url format\n  const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i\n\n  const parts = token.split('.')\n\n  if (parts.length !== 3) {\n    throw new Error('JWT is not valid: not a JWT structure')\n  }\n\n  if (!base64UrlRegex.test(parts[1])) {\n    throw new Error('JWT is not valid: payload is not in base64url format')\n  }\n\n  const base64Url = parts[1]\n  return JSON.parse(decodeBase64URL(base64Url))\n}\n\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport async function sleep(time: number): Promise<null> {\n  return await new Promise((accept) => {\n    setTimeout(() => accept(null), time)\n  })\n}\n\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable<T>(\n  fn: (attempt: number) => Promise<T>,\n  isRetryable: (attempt: number, error: any | null, result?: T) => boolean\n): Promise<T> {\n  const promise = new Promise<T>((accept, reject) => {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;(async () => {\n      for (let attempt = 0; attempt < Infinity; attempt++) {\n        try {\n          const result = await fn(attempt)\n\n          if (!isRetryable(attempt, null, result)) {\n            accept(result)\n            return\n          }\n        } catch (e: any) {\n          if (!isRetryable(attempt, e)) {\n            reject(e)\n            return\n          }\n        }\n      }\n    })()\n  })\n\n  return promise\n}\n\nfunction dec2hex(dec: number) {\n  return ('0' + dec.toString(16)).substr(-2)\n}\n\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nexport function generatePKCEVerifier() {\n  const verifierLength = 56\n  const array = new Uint32Array(verifierLength)\n  if (typeof crypto === 'undefined') {\n    const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~'\n    const charSetLen = charSet.length\n    let verifier = ''\n    for (let i = 0; i < verifierLength; i++) {\n      verifier += charSet.charAt(Math.floor(Math.random() * charSetLen))\n    }\n    return verifier\n  }\n  crypto.getRandomValues(array)\n  return Array.from(array, dec2hex).join('')\n}\n\nasync function sha256(randomString: string) {\n  const encoder = new TextEncoder()\n  const encodedData = encoder.encode(randomString)\n  const hash = await crypto.subtle.digest('SHA-256', encodedData)\n  const bytes = new Uint8Array(hash)\n\n  return Array.from(bytes)\n    .map((c) => String.fromCharCode(c))\n    .join('')\n}\n\nfunction base64urlencode(str: string) {\n  return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '')\n}\n\nexport async function generatePKCEChallenge(verifier: string) {\n  const hasCryptoSupport =\n    typeof crypto !== 'undefined' &&\n    typeof crypto.subtle !== 'undefined' &&\n    typeof TextEncoder !== 'undefined'\n\n  if (!hasCryptoSupport) {\n    console.warn(\n      'WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.'\n    )\n    return verifier\n  }\n  const hashed = await sha256(verifier)\n  return base64urlencode(hashed)\n}\n\nexport async function getCodeChallengeAndMethod(\n  storage: SupportedStorage,\n  storageKey: string,\n  isPasswordRecovery = false\n) {\n  const codeVerifier = generatePKCEVerifier()\n  let storedCodeVerifier = codeVerifier\n  if (isPasswordRecovery) {\n    storedCodeVerifier += '/PASSWORD_RECOVERY'\n  }\n  await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier)\n  const codeChallenge = await generatePKCEChallenge(codeVerifier)\n  const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n  return [codeChallenge, codeChallengeMethod]\n}\n\n/** Parses the API version which is 2YYY-MM-DD. */\nconst API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i\n\nexport function parseResponseAPIVersion(response: Response) {\n  const apiVersion = response.headers.get(API_VERSION_HEADER_NAME)\n\n  if (!apiVersion) {\n    return null\n  }\n\n  if (!apiVersion.match(API_VERSION_REGEX)) {\n    return null\n  }\n\n  try {\n    const date = new Date(`${apiVersion}T00:00:00.0Z`)\n    return date\n  } catch (e: any) {\n    return null\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"file":"errors.js","sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40supabase/auth-js/src/lib/errors.ts"],"sourcesContent":["import { WeakPasswordReasons } from './types'\nimport { ErrorCode } from './error-codes'\n\nexport class AuthError extends Error {\n  /**\n   * Error code associated with the error. Most errors coming from\n   * HTTP responses will have a code, though some errors that occur\n   * before a response is received will not have one present. In that\n   * case {@link #status} will also be undefined.\n   */\n  code: ErrorCode | (string & {}) | undefined\n\n  /** HTTP status code that caused the error. */\n  status: number | undefined\n\n  protected __isAuthError = true\n\n  constructor(message: string, status?: number, code?: string) {\n    super(message)\n    this.name = 'AuthError'\n    this.status = status\n    this.code = code\n  }\n}\n\nexport function isAuthError(error: unknown): error is AuthError {\n  return typeof error === 'object' && error !== null && '__isAuthError' in error\n}\n\nexport class AuthApiError extends AuthError {\n  status: number\n\n  constructor(message: string, status: number, code: string | undefined) {\n    super(message, status, code)\n    this.name = 'AuthApiError'\n    this.status = status\n    this.code = code\n  }\n}\n\nexport function isAuthApiError(error: unknown): error is AuthApiError {\n  return isAuthError(error) && error.name === 'AuthApiError'\n}\n\nexport class AuthUnknownError extends AuthError {\n  originalError: unknown\n\n  constructor(message: string, originalError: unknown) {\n    super(message)\n    this.name = 'AuthUnknownError'\n    this.originalError = originalError\n  }\n}\n\nexport class CustomAuthError extends AuthError {\n  name: string\n  status: number\n\n  constructor(message: string, name: string, status: number, code: string | undefined) {\n    super(message, status, code)\n    this.name = name\n    this.status = status\n  }\n}\n\nexport class AuthSessionMissingError extends CustomAuthError {\n  constructor() {\n    super('Auth session missing!', 'AuthSessionMissingError', 400, undefined)\n  }\n}\n\nexport function isAuthSessionMissingError(error: any): error is AuthSessionMissingError {\n  return isAuthError(error) && error.name === 'AuthSessionMissingError'\n}\n\nexport class AuthInvalidTokenResponseError extends CustomAuthError {\n  constructor() {\n    super('Auth session or user missing', 'AuthInvalidTokenResponseError', 500, undefined)\n  }\n}\n\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n  constructor(message: string) {\n    super(message, 'AuthInvalidCredentialsError', 400, undefined)\n  }\n}\n\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n  details: { error: string; code: string } | null = null\n  constructor(message: string, details: { error: string; code: string } | null = null) {\n    super(message, 'AuthImplicitGrantRedirectError', 500, undefined)\n    this.details = details\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n      details: this.details,\n    }\n  }\n}\n\nexport function isAuthImplicitGrantRedirectError(\n  error: any\n): error is AuthImplicitGrantRedirectError {\n  return isAuthError(error) && error.name === 'AuthImplicitGrantRedirectError'\n}\n\nexport class AuthPKCEGrantCodeExchangeError extends CustomAuthError {\n  details: { error: string; code: string } | null = null\n\n  constructor(message: string, details: { error: string; code: string } | null = null) {\n    super(message, 'AuthPKCEGrantCodeExchangeError', 500, undefined)\n    this.details = details\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n      details: this.details,\n    }\n  }\n}\n\nexport class AuthRetryableFetchError extends CustomAuthError {\n  constructor(message: string, status: number) {\n    super(message, 'AuthRetryableFetchError', status, undefined)\n  }\n}\n\nexport function isAuthRetryableFetchError(error: unknown): error is AuthRetryableFetchError {\n  return isAuthError(error) && error.name === 'AuthRetryableFetchError'\n}\n\n/**\n * This error is thrown on certain methods when the password used is deemed\n * weak. Inspect the reasons to identify what password strength rules are\n * inadequate.\n */\nexport class AuthWeakPasswordError extends CustomAuthError {\n  /**\n   * Reasons why the password is deemed weak.\n   */\n  reasons: WeakPasswordReasons[]\n\n  constructor(message: string, status: number, reasons: string[]) {\n    super(message, 'AuthWeakPasswordError', status, 'weak_password')\n\n    this.reasons = reasons\n  }\n}\n\nexport function isAuthWeakPasswordError(error: unknown): error is AuthWeakPasswordError {\n  return isAuthError(error) && error.name === 'AuthWeakPasswordError'\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 452, "column": 0}, "map": {"version":3,"file":"fetch.js","sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40supabase/auth-js/src/lib/fetch.ts"],"sourcesContent":["import { API_VERSIONS, API_VERSION_HEADER_NAME } from './constants'\nimport { expiresAt, looksLikeFetchResponse, parseResponseAPIVersion } from './helpers'\nimport {\n  AuthResponse,\n  AuthResponsePassword,\n  SSOResponse,\n  GenerateLinkProperties,\n  GenerateLinkResponse,\n  User,\n  UserResponse,\n} from './types'\nimport {\n  AuthApiError,\n  AuthRetryableFetchError,\n  AuthWeakPasswordError,\n  AuthUnknownError,\n  AuthSessionMissingError,\n} from './errors'\n\nexport type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  noResolveJson?: boolean\n}\n\nexport interface FetchParameters {\n  signal?: AbortSignal\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst NETWORK_ERROR_CODES = [502, 503, 504]\n\nexport async function handleError(error: unknown) {\n  if (!looksLikeFetchResponse(error)) {\n    throw new AuthRetryableFetchError(_getErrorMessage(error), 0)\n  }\n\n  if (NETWORK_ERROR_CODES.includes(error.status)) {\n    // status in 500...599 range - server had an error, request might be retryed.\n    throw new AuthRetryableFetchError(_getErrorMessage(error), error.status)\n  }\n\n  let data: any\n  try {\n    data = await error.json()\n  } catch (e: any) {\n    throw new AuthUnknownError(_getErrorMessage(e), e)\n  }\n\n  let errorCode: string | undefined = undefined\n\n  const responseAPIVersion = parseResponseAPIVersion(error)\n  if (\n    responseAPIVersion &&\n    responseAPIVersion.getTime() >= API_VERSIONS['2024-01-01'].timestamp &&\n    typeof data === 'object' &&\n    data &&\n    typeof data.code === 'string'\n  ) {\n    errorCode = data.code\n  } else if (typeof data === 'object' && data && typeof data.error_code === 'string') {\n    errorCode = data.error_code\n  }\n\n  if (!errorCode) {\n    // Legacy support for weak password errors, when there were no error codes\n    if (\n      typeof data === 'object' &&\n      data &&\n      typeof data.weak_password === 'object' &&\n      data.weak_password &&\n      Array.isArray(data.weak_password.reasons) &&\n      data.weak_password.reasons.length &&\n      data.weak_password.reasons.reduce((a: boolean, i: any) => a && typeof i === 'string', true)\n    ) {\n      throw new AuthWeakPasswordError(\n        _getErrorMessage(data),\n        error.status,\n        data.weak_password.reasons\n      )\n    }\n  } else if (errorCode === 'weak_password') {\n    throw new AuthWeakPasswordError(\n      _getErrorMessage(data),\n      error.status,\n      data.weak_password?.reasons || []\n    )\n  } else if (errorCode === 'session_not_found') {\n    // The `session_id` inside the JWT does not correspond to a row in the\n    // `sessions` table. This usually means the user has signed out, has been\n    // deleted, or their session has somehow been terminated.\n    throw new AuthSessionMissingError()\n  }\n\n  throw new AuthApiError(_getErrorMessage(data), error.status || 500, errorCode)\n}\n\nconst _getRequestParams = (\n  method: RequestMethodType,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET') {\n    return params\n  }\n\n  params.headers = { 'Content-Type': 'application/json;charset=UTF-8', ...options?.headers }\n  params.body = JSON.stringify(body)\n  return { ...params, ...parameters }\n}\n\ninterface GotrueRequestOptions extends FetchOptions {\n  jwt?: string\n  redirectTo?: string\n  body?: object\n  query?: { [key: string]: string }\n  /**\n   * Function that transforms api response from gotrue into a desirable / standardised format\n   */\n  xform?: (data: any) => any\n}\n\nexport async function _request(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: GotrueRequestOptions\n) {\n  const headers = {\n    ...options?.headers,\n  }\n\n  if (!headers[API_VERSION_HEADER_NAME]) {\n    headers[API_VERSION_HEADER_NAME] = API_VERSIONS['2024-01-01'].name\n  }\n\n  if (options?.jwt) {\n    headers['Authorization'] = `Bearer ${options.jwt}`\n  }\n\n  const qs = options?.query ?? {}\n  if (options?.redirectTo) {\n    qs['redirect_to'] = options.redirectTo\n  }\n\n  const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : ''\n  const data = await _handleRequest(\n    fetcher,\n    method,\n    url + queryString,\n    {\n      headers,\n      noResolveJson: options?.noResolveJson,\n    },\n    {},\n    options?.body\n  )\n  return options?.xform ? options?.xform(data) : { data: { ...data }, error: null }\n}\n\nasync function _handleRequest(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n): Promise<any> {\n  const requestParams = _getRequestParams(method, options, parameters, body)\n\n  let result: any\n\n  try {\n    result = await fetcher(url, {\n      ...requestParams,\n    })\n  } catch (e) {\n    console.error(e)\n\n    // fetch failed, likely due to a network or CORS error\n    throw new AuthRetryableFetchError(_getErrorMessage(e), 0)\n  }\n\n  if (!result.ok) {\n    await handleError(result)\n  }\n\n  if (options?.noResolveJson) {\n    return result\n  }\n\n  try {\n    return await result.json()\n  } catch (e: any) {\n    await handleError(e)\n  }\n}\n\nexport function _sessionResponse(data: any): AuthResponse {\n  let session = null\n  if (hasSession(data)) {\n    session = { ...data }\n\n    if (!data.expires_at) {\n      session.expires_at = expiresAt(data.expires_in)\n    }\n  }\n\n  const user: User = data.user ?? (data as User)\n  return { data: { session, user }, error: null }\n}\n\nexport function _sessionResponsePassword(data: any): AuthResponsePassword {\n  const response = _sessionResponse(data) as AuthResponsePassword\n\n  if (\n    !response.error &&\n    data.weak_password &&\n    typeof data.weak_password === 'object' &&\n    Array.isArray(data.weak_password.reasons) &&\n    data.weak_password.reasons.length &&\n    data.weak_password.message &&\n    typeof data.weak_password.message === 'string' &&\n    data.weak_password.reasons.reduce((a: boolean, i: any) => a && typeof i === 'string', true)\n  ) {\n    response.data.weak_password = data.weak_password\n  }\n\n  return response\n}\n\nexport function _userResponse(data: any): UserResponse {\n  const user: User = data.user ?? (data as User)\n  return { data: { user }, error: null }\n}\n\nexport function _ssoResponse(data: any): SSOResponse {\n  return { data, error: null }\n}\n\nexport function _generateLinkResponse(data: any): GenerateLinkResponse {\n  const { action_link, email_otp, hashed_token, redirect_to, verification_type, ...rest } = data\n\n  const properties: GenerateLinkProperties = {\n    action_link,\n    email_otp,\n    hashed_token,\n    redirect_to,\n    verification_type,\n  }\n\n  const user: User = { ...rest }\n  return {\n    data: {\n      properties,\n      user,\n    },\n    error: null,\n  }\n}\n\nexport function _noResolveJsonResponse(data: any): Response {\n  return data\n}\n\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data: any): boolean {\n  return data.access_token && data.refresh_token && data.expires_in\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 653, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 659, "column": 0}, "map": {"version":3,"file":"GoTrueAdminApi.js","sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40supabase/auth-js/src/GoTrueAdminApi.ts"],"sourcesContent":["import {\n  Fetch,\n  _generateLinkResponse,\n  _noResolveJsonResponse,\n  _request,\n  _userResponse,\n} from './lib/fetch'\nimport { resolveFetch } from './lib/helpers'\nimport {\n  AdminUserAttributes,\n  GenerateLinkParams,\n  GenerateLinkResponse,\n  Pagination,\n  User,\n  UserResponse,\n  GoTrueAdminMFAApi,\n  AuthMFAAdminDeleteFactorParams,\n  AuthMFAAdminDeleteFactorResponse,\n  AuthMFAAdminListFactorsParams,\n  AuthMFAAdminListFactorsResponse,\n  PageParams,\n} from './lib/types'\nimport { AuthError, isAuthError } from './lib/errors'\n\nexport default class GoTrueAdminApi {\n  /** Contains all MFA administration methods. */\n  mfa: GoTrueAdminMFAApi\n\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected fetch: Fetch\n\n  constructor({\n    url = '',\n    headers = {},\n    fetch,\n  }: {\n    url: string\n    headers?: {\n      [key: string]: string\n    }\n    fetch?: Fetch\n  }) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(fetch)\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this),\n    }\n  }\n\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   * @param scope The logout sope.\n   */\n  async signOut(\n    jwt: string,\n    scope: 'global' | 'local' | 'others' = 'global'\n  ): Promise<{ data: null; error: AuthError | null }> {\n    try {\n      await _request(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n        headers: this.headers,\n        jwt,\n        noResolveJson: true,\n      })\n      return { data: null, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Sends an invite link to an email address.\n   * @param email The email address of the user.\n   * @param options Additional options to be included when inviting.\n   */\n  async inviteUserByEmail(\n    email: string,\n    options: {\n      /** A custom data object to store additional metadata about the user. This maps to the `auth.users.user_metadata` column. */\n      data?: object\n\n      /** The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL. */\n      redirectTo?: string\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/invite`, {\n        body: { email, data: options.data },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Generates email links and OTPs to be sent via a custom email provider.\n   * @param email The user's email.\n   * @param options.password User password. For signup only.\n   * @param options.data Optional user metadata. For signup only.\n   * @param options.redirectTo The redirect url which should be appended to the generated link\n   */\n  async generateLink(params: GenerateLinkParams): Promise<GenerateLinkResponse> {\n    try {\n      const { options, ...rest } = params\n      const body: any = { ...rest, ...options }\n      if ('newEmail' in rest) {\n        // replace newEmail with new_email in request body\n        body.new_email = rest?.newEmail\n        delete body['newEmail']\n      }\n      return await _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n        body: body,\n        headers: this.headers,\n        xform: _generateLinkResponse,\n        redirectTo: options?.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            properties: null,\n            user: null,\n          },\n          error,\n        }\n      }\n      throw error\n    }\n  }\n\n  // User Admin API\n  /**\n   * Creates a new user.\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async createUser(attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Get a list of users.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n   */\n  async listUsers(\n    params?: PageParams\n  ): Promise<\n    | { data: { users: User[]; aud: string } & Pagination; error: null }\n    | { data: { users: [] }; error: AuthError }\n  > {\n    try {\n      const pagination: Pagination = { nextPage: null, lastPage: 0, total: 0 }\n      const response = await _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n        headers: this.headers,\n        noResolveJson: true,\n        query: {\n          page: params?.page?.toString() ?? '',\n          per_page: params?.perPage?.toString() ?? '',\n        },\n        xform: _noResolveJsonResponse,\n      })\n      if (response.error) throw response.error\n\n      const users = await response.json()\n      const total = response.headers.get('x-total-count') ?? 0\n      const links = response.headers.get('link')?.split(',') ?? []\n      if (links.length > 0) {\n        links.forEach((link: string) => {\n          const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1))\n          const rel = JSON.parse(link.split(';')[1].split('=')[1])\n          pagination[`${rel}Page`] = page\n        })\n\n        pagination.total = parseInt(total)\n      }\n      return { data: { ...users, ...pagination }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { users: [] }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Get user by id.\n   *\n   * @param uid The user's unique identifier\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async getUserById(uid: string): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates the user data.\n   *\n   * @param attributes The data you want to update.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async updateUserById(uid: string, attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Delete a user. Requires a `service_role` key.\n   *\n   * @param id The user id you want to remove.\n   * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\n   * Defaults to false for backward compatibility.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async deleteUser(id: string, shouldSoftDelete = false): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n        headers: this.headers,\n        body: {\n          should_soft_delete: shouldSoftDelete,\n        },\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _listFactors(\n    params: AuthMFAAdminListFactorsParams\n  ): Promise<AuthMFAAdminListFactorsResponse> {\n    try {\n      const { data, error } = await _request(\n        this.fetch,\n        'GET',\n        `${this.url}/admin/users/${params.userId}/factors`,\n        {\n          headers: this.headers,\n          xform: (factors: any) => {\n            return { data: { factors }, error: null }\n          },\n        }\n      )\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _deleteFactor(\n    params: AuthMFAAdminDeleteFactorParams\n  ): Promise<AuthMFAAdminDeleteFactorResponse> {\n    try {\n      const data = await _request(\n        this.fetch,\n        'DELETE',\n        `${this.url}/admin/users/${params.userId}/factors/${params.id}`,\n        {\n          headers: this.headers,\n        }\n      )\n\n      return { data, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 972, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 978, "column": 0}, "map": {"version":3,"file":"local-storage.js","sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40supabase/auth-js/src/lib/local-storage.ts"],"sourcesContent":["import { supportsLocalStorage } from './helpers'\nimport { SupportedStorage } from './types'\n\n/**\n * Provides safe access to the globalThis.localStorage property.\n */\nexport const localStorageAdapter: SupportedStorage = {\n  getItem: (key) => {\n    if (!supportsLocalStorage()) {\n      return null\n    }\n\n    return globalThis.localStorage.getItem(key)\n  },\n  setItem: (key, value) => {\n    if (!supportsLocalStorage()) {\n      return\n    }\n\n    globalThis.localStorage.setItem(key, value)\n  },\n  removeItem: (key) => {\n    if (!supportsLocalStorage()) {\n      return\n    }\n\n    globalThis.localStorage.removeItem(key)\n  },\n}\n\n/**\n * Returns a localStorage-like object that stores the key-value pairs in\n * memory.\n */\nexport function memoryLocalStorageAdapter(store: { [key: string]: string } = {}): SupportedStorage {\n  return {\n    getItem: (key) => {\n      return store[key] || null\n    },\n\n    setItem: (key, value) => {\n      store[key] = value\n    },\n\n    removeItem: (key) => {\n      delete store[key]\n    },\n  }\n}\n"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,WAAW,CAAA;;AAMzC,MAAM,mBAAmB,GAAqB;IACnD,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;QACf,IAAI,kLAAC,uBAAA,AAAoB,EAAE,GAAE;YAC3B,OAAO,IAAI,CAAA;SACZ;QAED,OAAO,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IAC7C,CAAC;IACD,OAAO,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;QACtB,IAAI,kLAAC,uBAAA,AAAoB,EAAE,GAAE;YAC3B,OAAM;SACP;QAED,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;IAC7C,CAAC;IACD,UAAU,EAAE,CAAC,GAAG,EAAE,EAAE;QAClB,IAAI,EAAC,uMAAA,AAAoB,EAAE,GAAE;YAC3B,OAAM;SACP;QAED,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;IACzC,CAAC;CACF,CAAA;AAMK,SAAU,yBAAyB,CAAC,QAAmC,CAAA,CAAE;IAC7E,OAAO;QACL,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;YACf,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAA;QAC3B,CAAC;QAED,OAAO,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;YACtB,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;QACpB,CAAC;QAED,UAAU,EAAE,CAAC,GAAG,EAAE,EAAE;YAClB,OAAO,KAAK,CAAC,GAAG,CAAC,CAAA;QACnB,CAAC;KACF,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1017, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1023, "column": 0}, "map": {"version":3,"file":"polyfills.js","sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40supabase/auth-js/src/lib/polyfills.ts"],"sourcesContent":["/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n  if (typeof globalThis === 'object') return\n  try {\n    Object.defineProperty(Object.prototype, '__magic__', {\n      get: function () {\n        return this\n      },\n      configurable: true,\n    })\n    // @ts-expect-error 'Allow access to magic'\n    __magic__.globalThis = __magic__\n    // @ts-expect-error 'Allow access to magic'\n    delete Object.prototype.__magic__\n  } catch (e) {\n    if (typeof self !== 'undefined') {\n      // @ts-expect-error 'Allow access to globals'\n      self.globalThis = self\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;AACG,SAAU,kBAAkB;IAChC,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE,OAAM;IAC1C,IAAI;QACF,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,WAAW,EAAE;YACnD,GAAG,EAAE;gBACH,OAAO,IAAI,CAAA;YACb,CAAC;YACD,YAAY,EAAE,IAAI;SACnB,CAAC,CAAA;QACF,2CAA2C;QAC3C,SAAS,CAAC,UAAU,GAAG,SAAS,CAAA;QAChC,2CAA2C;QAC3C,OAAO,MAAM,CAAC,SAAS,CAAC,SAAS,CAAA;KAClC,CAAC,OAAO,CAAC,EAAE;QACV,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;YAC/B,6CAA6C;YAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAA;SACvB;KACF;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1048, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1054, "column": 0}, "map": {"version":3,"file":"locks.js","sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40supabase/auth-js/src/lib/locks.ts"],"sourcesContent":["import { supportsLocalStorage } from './helpers'\n\n/**\n * @experimental\n */\nexport const internals = {\n  /**\n   * @experimental\n   */\n  debug: !!(\n    globalThis &&\n    supportsLocalStorage() &&\n    globalThis.localStorage &&\n    globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true'\n  ),\n}\n\n/**\n * An error thrown when a lock cannot be acquired after some amount of time.\n *\n * Use the {@link #isAcquireTimeout} property instead of checking with `instanceof`.\n */\nexport abstract class LockAcquireTimeoutError extends Error {\n  public readonly isAcquireTimeout = true\n\n  constructor(message: string) {\n    super(message)\n  }\n}\n\nexport class NavigatorLockAcquireTimeoutError extends LockAcquireTimeoutError {}\nexport class ProcessLockAcquireTimeoutError extends LockAcquireTimeoutError {}\n\n/**\n * Implements a global exclusive lock using the Navigator LockManager API. It\n * is available on all browsers released after 2022-03-15 with Safari being the\n * last one to release support. If the API is not available, this function will\n * throw. Make sure you check availablility before configuring {@link\n * GoTrueClient}.\n *\n * You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\n * local storage item to `true`.\n *\n * Internals:\n *\n * Since the LockManager API does not preserve stack traces for the async\n * function passed in the `request` method, a trick is used where acquiring the\n * lock releases a previously started promise to run the operation in the `fn`\n * function. The lock waits for that promise to finish (with or without error),\n * while the function will finally wait for the result anyway.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */\nexport async function navigatorLock<R>(\n  name: string,\n  acquireTimeout: number,\n  fn: () => Promise<R>\n): Promise<R> {\n  if (internals.debug) {\n    console.log('@supabase/gotrue-js: navigatorLock: acquire lock', name, acquireTimeout)\n  }\n\n  const abortController = new globalThis.AbortController()\n\n  if (acquireTimeout > 0) {\n    setTimeout(() => {\n      abortController.abort()\n      if (internals.debug) {\n        console.log('@supabase/gotrue-js: navigatorLock acquire timed out', name)\n      }\n    }, acquireTimeout)\n  }\n\n  // MDN article: https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request\n\n  // Wrapping navigator.locks.request() with a plain Promise is done as some\n  // libraries like zone.js patch the Promise object to track the execution\n  // context. However, it appears that most browsers use an internal promise\n  // implementation when using the navigator.locks.request() API causing them\n  // to lose context and emit confusing log messages or break certain features.\n  // This wrapping is believed to help zone.js track the execution context\n  // better.\n  return await Promise.resolve().then(() =>\n    globalThis.navigator.locks.request(\n      name,\n      acquireTimeout === 0\n        ? {\n            mode: 'exclusive',\n            ifAvailable: true,\n          }\n        : {\n            mode: 'exclusive',\n            signal: abortController.signal,\n          },\n      async (lock) => {\n        if (lock) {\n          if (internals.debug) {\n            console.log('@supabase/gotrue-js: navigatorLock: acquired', name, lock.name)\n          }\n\n          try {\n            return await fn()\n          } finally {\n            if (internals.debug) {\n              console.log('@supabase/gotrue-js: navigatorLock: released', name, lock.name)\n            }\n          }\n        } else {\n          if (acquireTimeout === 0) {\n            if (internals.debug) {\n              console.log('@supabase/gotrue-js: navigatorLock: not immediately available', name)\n            }\n\n            throw new NavigatorLockAcquireTimeoutError(\n              `Acquiring an exclusive Navigator LockManager lock \"${name}\" immediately failed`\n            )\n          } else {\n            if (internals.debug) {\n              try {\n                const result = await globalThis.navigator.locks.query()\n\n                console.log(\n                  '@supabase/gotrue-js: Navigator LockManager state',\n                  JSON.stringify(result, null, '  ')\n                )\n              } catch (e: any) {\n                console.warn(\n                  '@supabase/gotrue-js: Error when querying Navigator LockManager state',\n                  e\n                )\n              }\n            }\n\n            // Browser is not following the Navigator LockManager spec, it\n            // returned a null lock when we didn't use ifAvailable. So we can\n            // pretend the lock is acquired in the name of backward compatibility\n            // and user experience and just run the function.\n            console.warn(\n              '@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request'\n            )\n\n            return await fn()\n          }\n        }\n      }\n    )\n  )\n}\n\nconst PROCESS_LOCKS: { [name: string]: Promise<any> } = {}\n\n/**\n * Implements a global exclusive lock that works only in the current process.\n * Useful for environments like React Native or other non-browser\n * single-process (i.e. no concept of \"tabs\") environments.\n *\n * Use {@link #navigatorLock} in browser environments.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */\nexport async function processLock<R>(\n  name: string,\n  acquireTimeout: number,\n  fn: () => Promise<R>\n): Promise<R> {\n  const previousOperation = PROCESS_LOCKS[name] ?? Promise.resolve()\n\n  const currentOperation = Promise.race(\n    [\n      previousOperation.catch(() => {\n        // ignore error of previous operation that we're waiting to finish\n        return null\n      }),\n      acquireTimeout >= 0\n        ? new Promise((_, reject) => {\n            setTimeout(() => {\n              reject(\n                new ProcessLockAcquireTimeoutError(\n                  `Acquring process lock with name \"${name}\" timed out`\n                )\n              )\n            }, acquireTimeout)\n          })\n        : null,\n    ].filter((x) => x)\n  )\n    .catch((e: any) => {\n      if (e && e.isAcquireTimeout) {\n        throw e\n      }\n\n      return null\n    })\n    .then(async () => {\n      // previous operations finished and we didn't get a race on the acquire\n      // timeout, so the current operation can finally start\n      return await fn()\n    })\n\n  PROCESS_LOCKS[name] = currentOperation.catch(async (e: any) => {\n    if (e && e.isAcquireTimeout) {\n      // if the current operation timed out, it doesn't mean that the previous\n      // operation finished, so we need contnue waiting for it to finish\n      await previousOperation\n\n      return null\n    }\n\n    throw e\n  })\n\n  // finally wait for the current operation to finish successfully, with an\n  // error or with an acquire timeout error\n  return await currentOperation\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1186, "column": 0}, "map": {"version":3,"file":"GoTrueClient.js","sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40supabase/auth-js/src/GoTrueClient.ts"],"sourcesContent":["import GoTrueAdminApi from './GoTrueAdminApi'\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, STORAGE_KEY } from './lib/constants'\nimport {\n  AuthError,\n  AuthImplicitGrantRedirectError,\n  AuthPKCEGrantCodeExchangeError,\n  AuthInvalidCredentialsError,\n  AuthSessionMissingError,\n  AuthInvalidTokenResponseError,\n  AuthUnknownError,\n  isAuthApiError,\n  isAuthError,\n  isAuthRetryableFetchError,\n  isAuthSessionMissingError,\n  isAuthImplicitGrantRedirectError,\n} from './lib/errors'\nimport {\n  Fetch,\n  _request,\n  _sessionResponse,\n  _sessionResponsePassword,\n  _userResponse,\n  _ssoResponse,\n} from './lib/fetch'\nimport {\n  decodeJWTPayload,\n  Deferred,\n  getItemAsync,\n  isBrowser,\n  removeItemAsync,\n  resolveFetch,\n  setItemAsync,\n  uuid,\n  retryable,\n  sleep,\n  supportsLocalStorage,\n  parseParametersFromURL,\n  getCodeChallengeAndMethod,\n} from './lib/helpers'\nimport { localStorageAdapter, memoryLocalStorageAdapter } from './lib/local-storage'\nimport { polyfillGlobalThis } from './lib/polyfills'\nimport { version } from './lib/version'\nimport { LockAcquireTimeoutError, navigatorLock } from './lib/locks'\n\nimport type {\n  AuthChangeEvent,\n  AuthResponse,\n  AuthResponsePassword,\n  AuthTokenResponse,\n  AuthTokenResponsePassword,\n  AuthOtpResponse,\n  CallRefreshTokenResult,\n  GoTrueClientOptions,\n  InitializeResult,\n  OAuthResponse,\n  SSOResponse,\n  Provider,\n  Session,\n  SignInWithIdTokenCredentials,\n  SignInWithOAuthCredentials,\n  SignInWithPasswordCredentials,\n  SignInWithPasswordlessCredentials,\n  SignUpWithPasswordCredentials,\n  SignInWithSSO,\n  SignOut,\n  Subscription,\n  SupportedStorage,\n  User,\n  UserAttributes,\n  UserResponse,\n  VerifyOtpParams,\n  GoTrueMFAApi,\n  MFAEnrollParams,\n  AuthMFAEnrollResponse,\n  MFAChallengeParams,\n  AuthMFAChallengeResponse,\n  MFAUnenrollParams,\n  AuthMFAUnenrollResponse,\n  MFAVerifyParams,\n  AuthMFAVerifyResponse,\n  AuthMFAListFactorsResponse,\n  AMREntry,\n  AuthMFAGetAuthenticatorAssuranceLevelResponse,\n  AuthenticatorAssuranceLevels,\n  Factor,\n  MFAChallengeAndVerifyParams,\n  ResendParams,\n  AuthFlowType,\n  LockFunc,\n  UserIdentity,\n  SignInAnonymouslyCredentials,\n} from './lib/types'\nimport {\n  MFAEnrollTOTPParams,\n  MFAEnrollPhoneParams,\n  AuthMFAEnrollTOTPResponse,\n  AuthMFAEnrollPhoneResponse,\n} from './lib/internal-types'\n\npolyfillGlobalThis() // Make \"globalThis\" available\n\nconst DEFAULT_OPTIONS: Omit<Required<GoTrueClientOptions>, 'fetch' | 'storage' | 'lock'> = {\n  url: GOTRUE_URL,\n  storageKey: STORAGE_KEY,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  headers: DEFAULT_HEADERS,\n  flowType: 'implicit',\n  debug: false,\n  hasCustomAuthorizationHeader: false,\n}\n\n/** Current session will be checked for refresh at this interval. */\nconst AUTO_REFRESH_TICK_DURATION = 30 * 1000\n\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nconst AUTO_REFRESH_TICK_THRESHOLD = 3\n\nasync function lockNoOp<R>(name: string, acquireTimeout: number, fn: () => Promise<R>): Promise<R> {\n  return await fn()\n}\n\nexport default class GoTrueClient {\n  private static nextInstanceID = 0\n\n  private instanceID: number\n\n  /**\n   * Namespace for the GoTrue admin methods.\n   * These methods should only be used in a trusted server-side environment.\n   */\n  admin: GoTrueAdminApi\n  /**\n   * Namespace for the MFA methods.\n   */\n  mfa: GoTrueMFAApi\n  /**\n   * The storage key used to identify the values saved in localStorage\n   */\n  protected storageKey: string\n\n  protected flowType: AuthFlowType\n\n  protected autoRefreshToken: boolean\n  protected persistSession: boolean\n  protected storage: SupportedStorage\n  protected memoryStorage: { [key: string]: string } | null = null\n  protected stateChangeEmitters: Map<string, Subscription> = new Map()\n  protected autoRefreshTicker: ReturnType<typeof setInterval> | null = null\n  protected visibilityChangedCallback: (() => Promise<any>) | null = null\n  protected refreshingDeferred: Deferred<CallRefreshTokenResult> | null = null\n  /**\n   * Keeps track of the async client initialization.\n   * When null or not yet resolved the auth state is `unknown`\n   * Once resolved the the auth state is known and it's save to call any further client methods.\n   * Keep extra care to never reject or throw uncaught errors\n   */\n  protected initializePromise: Promise<InitializeResult> | null = null\n  protected detectSessionInUrl = true\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected hasCustomAuthorizationHeader = false\n  protected suppressGetSessionWarning = false\n  protected fetch: Fetch\n  protected lock: LockFunc\n  protected lockAcquired = false\n  protected pendingInLock: Promise<any>[] = []\n\n  /**\n   * Used to broadcast state change events to other tabs listening.\n   */\n  protected broadcastChannel: BroadcastChannel | null = null\n\n  protected logDebugMessages: boolean\n  protected logger: (message: string, ...args: any[]) => void = console.log\n\n  /**\n   * Create a new client for use in the browser.\n   */\n  constructor(options: GoTrueClientOptions) {\n    this.instanceID = GoTrueClient.nextInstanceID\n    GoTrueClient.nextInstanceID += 1\n\n    if (this.instanceID > 0 && isBrowser()) {\n      console.warn(\n        'Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.'\n      )\n    }\n\n    const settings = { ...DEFAULT_OPTIONS, ...options }\n\n    this.logDebugMessages = !!settings.debug\n    if (typeof settings.debug === 'function') {\n      this.logger = settings.debug\n    }\n\n    this.persistSession = settings.persistSession\n    this.storageKey = settings.storageKey\n    this.autoRefreshToken = settings.autoRefreshToken\n    this.admin = new GoTrueAdminApi({\n      url: settings.url,\n      headers: settings.headers,\n      fetch: settings.fetch,\n    })\n\n    this.url = settings.url\n    this.headers = settings.headers\n    this.fetch = resolveFetch(settings.fetch)\n    this.lock = settings.lock || lockNoOp\n    this.detectSessionInUrl = settings.detectSessionInUrl\n    this.flowType = settings.flowType\n    this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader\n\n    if (settings.lock) {\n      this.lock = settings.lock\n    } else if (isBrowser() && globalThis?.navigator?.locks) {\n      this.lock = navigatorLock\n    } else {\n      this.lock = lockNoOp\n    }\n\n    this.mfa = {\n      verify: this._verify.bind(this),\n      enroll: this._enroll.bind(this),\n      unenroll: this._unenroll.bind(this),\n      challenge: this._challenge.bind(this),\n      listFactors: this._listFactors.bind(this),\n      challengeAndVerify: this._challengeAndVerify.bind(this),\n      getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n    }\n\n    if (this.persistSession) {\n      if (settings.storage) {\n        this.storage = settings.storage\n      } else {\n        if (supportsLocalStorage()) {\n          this.storage = localStorageAdapter\n        } else {\n          this.memoryStorage = {}\n          this.storage = memoryLocalStorageAdapter(this.memoryStorage)\n        }\n      }\n    } else {\n      this.memoryStorage = {}\n      this.storage = memoryLocalStorageAdapter(this.memoryStorage)\n    }\n\n    if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n      try {\n        this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey)\n      } catch (e: any) {\n        console.error(\n          'Failed to create a new BroadcastChannel, multi-tab state changes will not be available',\n          e\n        )\n      }\n\n      this.broadcastChannel?.addEventListener('message', async (event) => {\n        this._debug('received broadcast notification from other tab or client', event)\n\n        await this._notifyAllSubscribers(event.data.event, event.data.session, false) // broadcast = false so we don't get an endless loop of messages\n      })\n    }\n\n    this.initialize()\n  }\n\n  private _debug(...args: any[]): GoTrueClient {\n    if (this.logDebugMessages) {\n      this.logger(\n        `GoTrueClient@${this.instanceID} (${version}) ${new Date().toISOString()}`,\n        ...args\n      )\n    }\n\n    return this\n  }\n\n  /**\n   * Initializes the client session either from the url or from storage.\n   * This method is automatically called when instantiating the client, but should also be called\n   * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n   */\n  async initialize(): Promise<InitializeResult> {\n    if (this.initializePromise) {\n      return await this.initializePromise\n    }\n\n    this.initializePromise = (async () => {\n      return await this._acquireLock(-1, async () => {\n        return await this._initialize()\n      })\n    })()\n\n    return await this.initializePromise\n  }\n\n  /**\n   * IMPORTANT:\n   * 1. Never throw in this method, as it is called from the constructor\n   * 2. Never return a session from this method as it would be cached over\n   *    the whole lifetime of the client\n   */\n  private async _initialize(): Promise<InitializeResult> {\n    try {\n      const params = parseParametersFromURL(window.location.href)\n      let callbackUrlType = 'none'\n      if (this._isImplicitGrantCallback(params)) {\n        callbackUrlType = 'implicit'\n      } else if (await this._isPKCECallback(params)) {\n        callbackUrlType = 'pkce'\n      }\n\n      /**\n       * Attempt to get the session from the URL only if these conditions are fulfilled\n       *\n       * Note: If the URL isn't one of the callback url types (implicit or pkce),\n       * then there could be an existing session so we don't want to prematurely remove it\n       */\n      if (isBrowser() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n        const { data, error } = await this._getSessionFromURL(params, callbackUrlType)\n        if (error) {\n          this._debug('#_initialize()', 'error detecting session from URL', error)\n\n          if (isAuthImplicitGrantRedirectError(error)) {\n            const errorCode = error.details?.code\n            if (\n              errorCode === 'identity_already_exists' ||\n              errorCode === 'identity_not_found' ||\n              errorCode === 'single_identity_not_deletable'\n            ) {\n              return { error }\n            }\n          }\n\n          // failed login attempt via url,\n          // remove old session as in verifyOtp, signUp and signInWith*\n          await this._removeSession()\n\n          return { error }\n        }\n\n        const { session, redirectType } = data\n\n        this._debug(\n          '#_initialize()',\n          'detected session in URL',\n          session,\n          'redirect type',\n          redirectType\n        )\n\n        await this._saveSession(session)\n\n        setTimeout(async () => {\n          if (redirectType === 'recovery') {\n            await this._notifyAllSubscribers('PASSWORD_RECOVERY', session)\n          } else {\n            await this._notifyAllSubscribers('SIGNED_IN', session)\n          }\n        }, 0)\n\n        return { error: null }\n      }\n      // no login attempt via callback url try to recover session from storage\n      await this._recoverAndRefresh()\n      return { error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { error }\n      }\n\n      return {\n        error: new AuthUnknownError('Unexpected error during initialization', error),\n      }\n    } finally {\n      await this._handleVisibilityChange()\n      this._debug('#_initialize()', 'end')\n    }\n  }\n\n  /**\n   * Creates a new anonymous user.\n   *\n   * @returns A session where the is_anonymous claim in the access token JWT set to true\n   */\n  async signInAnonymously(credentials?: SignInAnonymouslyCredentials): Promise<AuthResponse> {\n    try {\n      const res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n        headers: this.headers,\n        body: {\n          data: credentials?.options?.data ?? {},\n          gotrue_meta_security: { captcha_token: credentials?.options?.captchaToken },\n        },\n        xform: _sessionResponse,\n      })\n      const { data, error } = res\n\n      if (error || !data) {\n        return { data: { user: null, session: null }, error: error }\n      }\n      const session: Session | null = data.session\n      const user: User | null = data.user\n\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates a new user.\n   *\n   * Be aware that if a user account exists in the system you may get back an\n   * error message that attempts to hide this information from the user.\n   * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n   *\n   * @returns A logged-in session if the server has \"autoconfirm\" ON\n   * @returns A user if the server has \"autoconfirm\" OFF\n   */\n  async signUp(credentials: SignUpWithPasswordCredentials): Promise<AuthResponse> {\n    try {\n      let res: AuthResponse\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce') {\n          ;[codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n            this.storage,\n            this.storageKey\n          )\n        }\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          redirectTo: options?.emailRedirectTo,\n          body: {\n            email,\n            password,\n            data: options?.data ?? {},\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          xform: _sessionResponse,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            data: options?.data ?? {},\n            channel: options?.channel ?? 'sms',\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n\n      const { data, error } = res\n\n      if (error || !data) {\n        return { data: { user: null, session: null }, error: error }\n      }\n\n      const session: Session | null = data.session\n      const user: User | null = data.user\n\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user with an email and password or phone and password.\n   *\n   * Be aware that you may get back an error message that will not distinguish\n   * between the cases where the account does not exist or that the\n   * email/phone and password combination is wrong or that the account can only\n   * be accessed via social login.\n   */\n  async signInWithPassword(\n    credentials: SignInWithPasswordCredentials\n  ): Promise<AuthTokenResponsePassword> {\n    try {\n      let res: AuthResponsePassword\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            email,\n            password,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponsePassword,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponsePassword,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n      const { data, error } = res\n\n      if (error) {\n        return { data: { user: null, session: null }, error }\n      } else if (!data || !data.session || !data.user) {\n        return { data: { user: null, session: null }, error: new AuthInvalidTokenResponseError() }\n      }\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return {\n        data: {\n          user: data.user,\n          session: data.session,\n          ...(data.weak_password ? { weakPassword: data.weak_password } : null),\n        },\n        error,\n      }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user via a third-party provider.\n   * This method supports the PKCE flow.\n   */\n  async signInWithOAuth(credentials: SignInWithOAuthCredentials): Promise<OAuthResponse> {\n    return await this._handleProviderSignIn(credentials.provider, {\n      redirectTo: credentials.options?.redirectTo,\n      scopes: credentials.options?.scopes,\n      queryParams: credentials.options?.queryParams,\n      skipBrowserRedirect: credentials.options?.skipBrowserRedirect,\n    })\n  }\n\n  /**\n   * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n   */\n  async exchangeCodeForSession(authCode: string): Promise<AuthTokenResponse> {\n    await this.initializePromise\n\n    return this._acquireLock(-1, async () => {\n      return this._exchangeCodeForSession(authCode)\n    })\n  }\n\n  private async _exchangeCodeForSession(authCode: string): Promise<\n    | {\n        data: { session: Session; user: User; redirectType: string | null }\n        error: null\n      }\n    | { data: { session: null; user: null; redirectType: null }; error: AuthError }\n  > {\n    const storageItem = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n    const [codeVerifier, redirectType] = ((storageItem ?? '') as string).split('/')\n\n    try {\n      const { data, error } = await _request(\n        this.fetch,\n        'POST',\n        `${this.url}/token?grant_type=pkce`,\n        {\n          headers: this.headers,\n          body: {\n            auth_code: authCode,\n            code_verifier: codeVerifier,\n          },\n          xform: _sessionResponse,\n        }\n      )\n      await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n      if (error) {\n        throw error\n      }\n      if (!data || !data.session || !data.user) {\n        return {\n          data: { user: null, session: null, redirectType: null },\n          error: new AuthInvalidTokenResponseError(),\n        }\n      }\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data: { ...data, redirectType: redirectType ?? null }, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null, redirectType: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Allows signing in with an OIDC ID token. The authentication provider used\n   * should be enabled and configured.\n   */\n  async signInWithIdToken(credentials: SignInWithIdTokenCredentials): Promise<AuthTokenResponse> {\n    try {\n      const { options, provider, token, access_token, nonce } = credentials\n\n      const res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n        headers: this.headers,\n        body: {\n          provider,\n          id_token: token,\n          access_token,\n          nonce,\n          gotrue_meta_security: { captcha_token: options?.captchaToken },\n        },\n        xform: _sessionResponse,\n      })\n\n      const { data, error } = res\n      if (error) {\n        return { data: { user: null, session: null }, error }\n      } else if (!data || !data.session || !data.user) {\n        return {\n          data: { user: null, session: null },\n          error: new AuthInvalidTokenResponseError(),\n        }\n      }\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user using magiclink or a one-time password (OTP).\n   *\n   * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n   * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n   * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n   *\n   * Be aware that you may get back an error message that will not distinguish\n   * between the cases where the account does not exist or, that the account\n   * can only be accessed via social login.\n   *\n   * Do note that you will need to configure a Whatsapp sender on Twilio\n   * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n   * channel is not supported on other providers\n   * at this time.\n   * This method supports PKCE when an email is passed.\n   */\n  async signInWithOtp(credentials: SignInWithPasswordlessCredentials): Promise<AuthOtpResponse> {\n    try {\n      if ('email' in credentials) {\n        const { email, options } = credentials\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce') {\n          ;[codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n            this.storage,\n            this.storageKey\n          )\n        }\n        const { error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            email,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          redirectTo: options?.emailRedirectTo,\n        })\n        return { data: { user: null, session: null }, error }\n      }\n      if ('phone' in credentials) {\n        const { phone, options } = credentials\n        const { data, error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            phone,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            channel: options?.channel ?? 'sms',\n          },\n        })\n        return { data: { user: null, session: null, messageId: data?.message_id }, error }\n      }\n      throw new AuthInvalidCredentialsError('You must provide either an email or phone number.')\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n   */\n  async verifyOtp(params: VerifyOtpParams): Promise<AuthResponse> {\n    try {\n      let redirectTo: string | undefined = undefined\n      let captchaToken: string | undefined = undefined\n      if ('options' in params) {\n        redirectTo = params.options?.redirectTo\n        captchaToken = params.options?.captchaToken\n      }\n      const { data, error } = await _request(this.fetch, 'POST', `${this.url}/verify`, {\n        headers: this.headers,\n        body: {\n          ...params,\n          gotrue_meta_security: { captcha_token: captchaToken },\n        },\n        redirectTo,\n        xform: _sessionResponse,\n      })\n\n      if (error) {\n        throw error\n      }\n\n      if (!data) {\n        throw new Error('An error occurred on token verification.')\n      }\n\n      const session: Session | null = data.session\n      const user: User = data.user\n\n      if (session?.access_token) {\n        await this._saveSession(session as Session)\n        await this._notifyAllSubscribers(\n          params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN',\n          session\n        )\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Attempts a single-sign on using an enterprise Identity Provider. A\n   * successful SSO attempt will redirect the current page to the identity\n   * provider authorization page. The redirect URL is implementation and SSO\n   * protocol specific.\n   *\n   * You can use it by providing a SSO domain. Typically you can extract this\n   * domain by asking users for their email address. If this domain is\n   * registered on the Auth instance the redirect will use that organization's\n   * currently active SSO Identity Provider for the login.\n   *\n   * If you have built an organization-specific login page, you can use the\n   * organization's SSO Identity Provider UUID directly instead.\n   */\n  async signInWithSSO(params: SignInWithSSO): Promise<SSOResponse> {\n    try {\n      let codeChallenge: string | null = null\n      let codeChallengeMethod: string | null = null\n      if (this.flowType === 'pkce') {\n        ;[codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n          this.storage,\n          this.storageKey\n        )\n      }\n\n      return await _request(this.fetch, 'POST', `${this.url}/sso`, {\n        body: {\n          ...('providerId' in params ? { provider_id: params.providerId } : null),\n          ...('domain' in params ? { domain: params.domain } : null),\n          redirect_to: params.options?.redirectTo ?? undefined,\n          ...(params?.options?.captchaToken\n            ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n            : null),\n          skip_http_redirect: true, // fetch does not handle redirects\n          code_challenge: codeChallenge,\n          code_challenge_method: codeChallengeMethod,\n        },\n        headers: this.headers,\n        xform: _ssoResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Sends a reauthentication OTP to the user's email or phone number.\n   * Requires the user to be signed-in.\n   */\n  async reauthenticate(): Promise<AuthResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._reauthenticate()\n    })\n  }\n\n  private async _reauthenticate(): Promise<AuthResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const {\n          data: { session },\n          error: sessionError,\n        } = result\n        if (sessionError) throw sessionError\n        if (!session) throw new AuthSessionMissingError()\n\n        const { error } = await _request(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n          headers: this.headers,\n          jwt: session.access_token,\n        })\n        return { data: { user: null, session: null }, error }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n   */\n  async resend(credentials: ResendParams): Promise<AuthOtpResponse> {\n    try {\n      const endpoint = `${this.url}/resend`\n      if ('email' in credentials) {\n        const { email, type, options } = credentials\n        const { error } = await _request(this.fetch, 'POST', endpoint, {\n          headers: this.headers,\n          body: {\n            email,\n            type,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          redirectTo: options?.emailRedirectTo,\n        })\n        return { data: { user: null, session: null }, error }\n      } else if ('phone' in credentials) {\n        const { phone, type, options } = credentials\n        const { data, error } = await _request(this.fetch, 'POST', endpoint, {\n          headers: this.headers,\n          body: {\n            phone,\n            type,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n        })\n        return { data: { user: null, session: null, messageId: data?.message_id }, error }\n      }\n      throw new AuthInvalidCredentialsError(\n        'You must provide either an email or phone number and a type'\n      )\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Returns the session, refreshing it if necessary.\n   *\n   * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n   *\n   * **IMPORTANT:** This method loads values directly from the storage attached\n   * to the client. If that storage is based on request cookies for example,\n   * the values in it may not be authentic and therefore it's strongly advised\n   * against using this method and its results in such circumstances. A warning\n   * will be emitted if this is detected. Use {@link #getUser()} instead.\n   */\n  async getSession() {\n    await this.initializePromise\n\n    const result = await this._acquireLock(-1, async () => {\n      return this._useSession(async (result) => {\n        return result\n      })\n    })\n\n    return result\n  }\n\n  /**\n   * Acquires a global lock based on the storage key.\n   */\n  private async _acquireLock<R>(acquireTimeout: number, fn: () => Promise<R>): Promise<R> {\n    this._debug('#_acquireLock', 'begin', acquireTimeout)\n\n    try {\n      if (this.lockAcquired) {\n        const last = this.pendingInLock.length\n          ? this.pendingInLock[this.pendingInLock.length - 1]\n          : Promise.resolve()\n\n        const result = (async () => {\n          await last\n          return await fn()\n        })()\n\n        this.pendingInLock.push(\n          (async () => {\n            try {\n              await result\n            } catch (e: any) {\n              // we just care if it finished\n            }\n          })()\n        )\n\n        return result\n      }\n\n      return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\n        this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey)\n\n        try {\n          this.lockAcquired = true\n\n          const result = fn()\n\n          this.pendingInLock.push(\n            (async () => {\n              try {\n                await result\n              } catch (e: any) {\n                // we just care if it finished\n              }\n            })()\n          )\n\n          await result\n\n          // keep draining the queue until there's nothing to wait on\n          while (this.pendingInLock.length) {\n            const waitOn = [...this.pendingInLock]\n\n            await Promise.all(waitOn)\n\n            this.pendingInLock.splice(0, waitOn.length)\n          }\n\n          return await result\n        } finally {\n          this._debug('#_acquireLock', 'lock released for storage key', this.storageKey)\n\n          this.lockAcquired = false\n        }\n      })\n    } finally {\n      this._debug('#_acquireLock', 'end')\n    }\n  }\n\n  /**\n   * Use instead of {@link #getSession} inside the library. It is\n   * semantically usually what you want, as getting a session involves some\n   * processing afterwards that requires only one client operating on the\n   * session at once across multiple tabs or processes.\n   */\n  private async _useSession<R>(\n    fn: (\n      result:\n        | {\n            data: {\n              session: Session\n            }\n            error: null\n          }\n        | {\n            data: {\n              session: null\n            }\n            error: AuthError\n          }\n        | {\n            data: {\n              session: null\n            }\n            error: null\n          }\n    ) => Promise<R>\n  ): Promise<R> {\n    this._debug('#_useSession', 'begin')\n\n    try {\n      // the use of __loadSession here is the only correct use of the function!\n      const result = await this.__loadSession()\n\n      return await fn(result)\n    } finally {\n      this._debug('#_useSession', 'end')\n    }\n  }\n\n  /**\n   * NEVER USE DIRECTLY!\n   *\n   * Always use {@link #_useSession}.\n   */\n  private async __loadSession(): Promise<\n    | {\n        data: {\n          session: Session\n        }\n        error: null\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: AuthError\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: null\n      }\n  > {\n    this._debug('#__loadSession()', 'begin')\n\n    if (!this.lockAcquired) {\n      this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack)\n    }\n\n    try {\n      let currentSession: Session | null = null\n\n      const maybeSession = await getItemAsync(this.storage, this.storageKey)\n\n      this._debug('#getSession()', 'session from storage', maybeSession)\n\n      if (maybeSession !== null) {\n        if (this._isValidSession(maybeSession)) {\n          currentSession = maybeSession\n        } else {\n          this._debug('#getSession()', 'session from storage is not valid')\n          await this._removeSession()\n        }\n      }\n\n      if (!currentSession) {\n        return { data: { session: null }, error: null }\n      }\n\n      const hasExpired = currentSession.expires_at\n        ? currentSession.expires_at <= Date.now() / 1000\n        : false\n\n      this._debug(\n        '#__loadSession()',\n        `session has${hasExpired ? '' : ' not'} expired`,\n        'expires_at',\n        currentSession.expires_at\n      )\n\n      if (!hasExpired) {\n        if (this.storage.isServer) {\n          let suppressWarning = this.suppressGetSessionWarning\n          const proxySession: Session = new Proxy(currentSession, {\n            get: (target: any, prop: string, receiver: any) => {\n              if (!suppressWarning && prop === 'user') {\n                // only show warning when the user object is being accessed from the server\n                console.warn(\n                  'Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.'\n                )\n                suppressWarning = true // keeps this proxy instance from logging additional warnings\n                this.suppressGetSessionWarning = true // keeps this client's future proxy instances from warning\n              }\n              return Reflect.get(target, prop, receiver)\n            },\n          })\n          currentSession = proxySession\n        }\n\n        return { data: { session: currentSession }, error: null }\n      }\n\n      const { session, error } = await this._callRefreshToken(currentSession.refresh_token)\n      if (error) {\n        return { data: { session: null }, error }\n      }\n\n      return { data: { session }, error: null }\n    } finally {\n      this._debug('#__loadSession()', 'end')\n    }\n  }\n\n  /**\n   * Gets the current user details if there is an existing session. This method\n   * performs a network request to the Supabase Auth server, so the returned\n   * value is authentic and can be used to base authorization rules on.\n   *\n   * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n   */\n  async getUser(jwt?: string): Promise<UserResponse> {\n    if (jwt) {\n      return await this._getUser(jwt)\n    }\n\n    await this.initializePromise\n\n    const result = await this._acquireLock(-1, async () => {\n      return await this._getUser()\n    })\n\n    return result\n  }\n\n  private async _getUser(jwt?: string): Promise<UserResponse> {\n    try {\n      if (jwt) {\n        return await _request(this.fetch, 'GET', `${this.url}/user`, {\n          headers: this.headers,\n          jwt: jwt,\n          xform: _userResponse,\n        })\n      }\n\n      return await this._useSession(async (result) => {\n        const { data, error } = result\n        if (error) {\n          throw error\n        }\n\n        // returns an error if there is no access_token or custom authorization header\n        if (!data.session?.access_token && !this.hasCustomAuthorizationHeader) {\n          return { data: { user: null }, error: new AuthSessionMissingError() }\n        }\n\n        return await _request(this.fetch, 'GET', `${this.url}/user`, {\n          headers: this.headers,\n          jwt: data.session?.access_token ?? undefined,\n          xform: _userResponse,\n        })\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        if (isAuthSessionMissingError(error)) {\n          // JWT contains a `session_id` which does not correspond to an active\n          // session in the database, indicating the user is signed out.\n\n          await this._removeSession()\n          await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n        }\n\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates user data for a logged in user.\n   */\n  async updateUser(\n    attributes: UserAttributes,\n    options: {\n      emailRedirectTo?: string | undefined\n    } = {}\n  ): Promise<UserResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._updateUser(attributes, options)\n    })\n  }\n\n  protected async _updateUser(\n    attributes: UserAttributes,\n    options: {\n      emailRedirectTo?: string | undefined\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          throw sessionError\n        }\n        if (!sessionData.session) {\n          throw new AuthSessionMissingError()\n        }\n        const session: Session = sessionData.session\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce' && attributes.email != null) {\n          ;[codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n            this.storage,\n            this.storageKey\n          )\n        }\n\n        const { data, error: userError } = await _request(this.fetch, 'PUT', `${this.url}/user`, {\n          headers: this.headers,\n          redirectTo: options?.emailRedirectTo,\n          body: {\n            ...attributes,\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          jwt: session.access_token,\n          xform: _userResponse,\n        })\n        if (userError) throw userError\n        session.user = data.user as User\n        await this._saveSession(session)\n        await this._notifyAllSubscribers('USER_UPDATED', session)\n        return { data: { user: session.user }, error: null }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Decodes a JWT (without performing any validation).\n   */\n  private _decodeJWT(jwt: string): {\n    exp?: number\n    aal?: AuthenticatorAssuranceLevels | null\n    amr?: AMREntry[] | null\n  } {\n    return decodeJWTPayload(jwt)\n  }\n\n  /**\n   * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n   * If the refresh token or access token in the current session is invalid, an error will be thrown.\n   * @param currentSession The current session that minimally contains an access token and refresh token.\n   */\n  async setSession(currentSession: {\n    access_token: string\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._setSession(currentSession)\n    })\n  }\n\n  protected async _setSession(currentSession: {\n    access_token: string\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    try {\n      if (!currentSession.access_token || !currentSession.refresh_token) {\n        throw new AuthSessionMissingError()\n      }\n\n      const timeNow = Date.now() / 1000\n      let expiresAt = timeNow\n      let hasExpired = true\n      let session: Session | null = null\n      const payload = decodeJWTPayload(currentSession.access_token)\n      if (payload.exp) {\n        expiresAt = payload.exp\n        hasExpired = expiresAt <= timeNow\n      }\n\n      if (hasExpired) {\n        const { session: refreshedSession, error } = await this._callRefreshToken(\n          currentSession.refresh_token\n        )\n        if (error) {\n          return { data: { user: null, session: null }, error: error }\n        }\n\n        if (!refreshedSession) {\n          return { data: { user: null, session: null }, error: null }\n        }\n        session = refreshedSession\n      } else {\n        const { data, error } = await this._getUser(currentSession.access_token)\n        if (error) {\n          throw error\n        }\n        session = {\n          access_token: currentSession.access_token,\n          refresh_token: currentSession.refresh_token,\n          user: data.user,\n          token_type: 'bearer',\n          expires_in: expiresAt - timeNow,\n          expires_at: expiresAt,\n        }\n        await this._saveSession(session)\n        await this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user: session.user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Returns a new session, regardless of expiry status.\n   * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n   * If the current session's refresh token is invalid, an error will be thrown.\n   * @param currentSession The current session. If passed in, it must contain a refresh token.\n   */\n  async refreshSession(currentSession?: { refresh_token: string }): Promise<AuthResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._refreshSession(currentSession)\n    })\n  }\n\n  protected async _refreshSession(currentSession?: {\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        if (!currentSession) {\n          const { data, error } = result\n          if (error) {\n            throw error\n          }\n\n          currentSession = data.session ?? undefined\n        }\n\n        if (!currentSession?.refresh_token) {\n          throw new AuthSessionMissingError()\n        }\n\n        const { session, error } = await this._callRefreshToken(currentSession.refresh_token)\n        if (error) {\n          return { data: { user: null, session: null }, error: error }\n        }\n\n        if (!session) {\n          return { data: { user: null, session: null }, error: null }\n        }\n\n        return { data: { user: session.user, session }, error: null }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Gets the session data from a URL string\n   */\n  private async _getSessionFromURL(\n    params: { [parameter: string]: string },\n    callbackUrlType: string\n  ): Promise<\n    | {\n        data: { session: Session; redirectType: string | null }\n        error: null\n      }\n    | { data: { session: null; redirectType: null }; error: AuthError }\n  > {\n    try {\n      if (!isBrowser()) throw new AuthImplicitGrantRedirectError('No browser detected.')\n\n      // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n      if (params.error || params.error_description || params.error_code) {\n        // The error class returned implies that the redirect is from an implicit grant flow\n        // but it could also be from a redirect error from a PKCE flow.\n        throw new AuthImplicitGrantRedirectError(\n          params.error_description || 'Error in URL with unspecified error_description',\n          {\n            error: params.error || 'unspecified_error',\n            code: params.error_code || 'unspecified_code',\n          }\n        )\n      }\n\n      // Checks for mismatches between the flowType initialised in the client and the URL parameters\n      switch (callbackUrlType) {\n        case 'implicit':\n          if (this.flowType === 'pkce') {\n            throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.')\n          }\n          break\n        case 'pkce':\n          if (this.flowType === 'implicit') {\n            throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.')\n          }\n          break\n        default:\n        // there's no mismatch so we continue\n      }\n\n      // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n      if (callbackUrlType === 'pkce') {\n        this._debug('#_initialize()', 'begin', 'is PKCE flow', true)\n        if (!params.code) throw new AuthPKCEGrantCodeExchangeError('No code detected.')\n        const { data, error } = await this._exchangeCodeForSession(params.code)\n        if (error) throw error\n\n        const url = new URL(window.location.href)\n        url.searchParams.delete('code')\n\n        window.history.replaceState(window.history.state, '', url.toString())\n\n        return { data: { session: data.session, redirectType: null }, error: null }\n      }\n\n      const {\n        provider_token,\n        provider_refresh_token,\n        access_token,\n        refresh_token,\n        expires_in,\n        expires_at,\n        token_type,\n      } = params\n\n      if (!access_token || !expires_in || !refresh_token || !token_type) {\n        throw new AuthImplicitGrantRedirectError('No session defined in URL')\n      }\n\n      const timeNow = Math.round(Date.now() / 1000)\n      const expiresIn = parseInt(expires_in)\n      let expiresAt = timeNow + expiresIn\n\n      if (expires_at) {\n        expiresAt = parseInt(expires_at)\n      }\n\n      const actuallyExpiresIn = expiresAt - timeNow\n      if (actuallyExpiresIn * 1000 <= AUTO_REFRESH_TICK_DURATION) {\n        console.warn(\n          `@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`\n        )\n      }\n\n      const issuedAt = expiresAt - expiresIn\n      if (timeNow - issuedAt >= 120) {\n        console.warn(\n          '@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale',\n          issuedAt,\n          expiresAt,\n          timeNow\n        )\n      } else if (timeNow - issuedAt < 0) {\n        console.warn(\n          '@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew',\n          issuedAt,\n          expiresAt,\n          timeNow\n        )\n      }\n\n      const { data, error } = await this._getUser(access_token)\n      if (error) throw error\n\n      const session: Session = {\n        provider_token,\n        provider_refresh_token,\n        access_token,\n        expires_in: expiresIn,\n        expires_at: expiresAt,\n        refresh_token,\n        token_type,\n        user: data.user,\n      }\n\n      // Remove tokens from URL\n      window.location.hash = ''\n      this._debug('#_getSessionFromURL()', 'clearing window.location.hash')\n\n      return { data: { session, redirectType: params.type }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, redirectType: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n   */\n  private _isImplicitGrantCallback(params: { [parameter: string]: string }): boolean {\n    return Boolean(params.access_token || params.error_description)\n  }\n\n  /**\n   * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n   */\n  private async _isPKCECallback(params: { [parameter: string]: string }): Promise<boolean> {\n    const currentStorageContent = await getItemAsync(\n      this.storage,\n      `${this.storageKey}-code-verifier`\n    )\n\n    return !!(params.code && currentStorageContent)\n  }\n\n  /**\n   * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n   *\n   * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n   * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n   *\n   * If using `others` scope, no `SIGNED_OUT` event is fired!\n   */\n  async signOut(options: SignOut = { scope: 'global' }): Promise<{ error: AuthError | null }> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._signOut(options)\n    })\n  }\n\n  protected async _signOut(\n    { scope }: SignOut = { scope: 'global' }\n  ): Promise<{ error: AuthError | null }> {\n    return await this._useSession(async (result) => {\n      const { data, error: sessionError } = result\n      if (sessionError) {\n        return { error: sessionError }\n      }\n      const accessToken = data.session?.access_token\n      if (accessToken) {\n        const { error } = await this.admin.signOut(accessToken, scope)\n        if (error) {\n          // ignore 404s since user might not exist anymore\n          // ignore 401s since an invalid or expired JWT should sign out the current session\n          if (\n            !(\n              isAuthApiError(error) &&\n              (error.status === 404 || error.status === 401 || error.status === 403)\n            )\n          ) {\n            return { error }\n          }\n        }\n      }\n      if (scope !== 'others') {\n        await this._removeSession()\n        await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n      }\n      return { error: null }\n    })\n  }\n\n  /**\n   * Receive a notification every time an auth event happens.\n   * @param callback A callback function to be invoked when an auth event happens.\n   */\n  onAuthStateChange(\n    callback: (event: AuthChangeEvent, session: Session | null) => void | Promise<void>\n  ): {\n    data: { subscription: Subscription }\n  } {\n    const id: string = uuid()\n    const subscription: Subscription = {\n      id,\n      callback,\n      unsubscribe: () => {\n        this._debug('#unsubscribe()', 'state change callback with id removed', id)\n\n        this.stateChangeEmitters.delete(id)\n      },\n    }\n\n    this._debug('#onAuthStateChange()', 'registered callback with id', id)\n\n    this.stateChangeEmitters.set(id, subscription)\n    ;(async () => {\n      await this.initializePromise\n\n      await this._acquireLock(-1, async () => {\n        this._emitInitialSession(id)\n      })\n    })()\n\n    return { data: { subscription } }\n  }\n\n  private async _emitInitialSession(id: string): Promise<void> {\n    return await this._useSession(async (result) => {\n      try {\n        const {\n          data: { session },\n          error,\n        } = result\n        if (error) throw error\n\n        await this.stateChangeEmitters.get(id)?.callback('INITIAL_SESSION', session)\n        this._debug('INITIAL_SESSION', 'callback id', id, 'session', session)\n      } catch (err) {\n        await this.stateChangeEmitters.get(id)?.callback('INITIAL_SESSION', null)\n        this._debug('INITIAL_SESSION', 'callback id', id, 'error', err)\n        console.error(err)\n      }\n    })\n  }\n\n  /**\n   * Sends a password reset request to an email address. This method supports the PKCE flow.\n   *\n   * @param email The email address of the user.\n   * @param options.redirectTo The URL to send the user to after they click the password reset link.\n   * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n   */\n  async resetPasswordForEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<\n    | {\n        data: {}\n        error: null\n      }\n    | { data: null; error: AuthError }\n  > {\n    let codeChallenge: string | null = null\n    let codeChallengeMethod: string | null = null\n\n    if (this.flowType === 'pkce') {\n      ;[codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n        this.storage,\n        this.storageKey,\n        true // isPasswordRecovery\n      )\n    }\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/recover`, {\n        body: {\n          email,\n          code_challenge: codeChallenge,\n          code_challenge_method: codeChallengeMethod,\n          gotrue_meta_security: { captcha_token: options.captchaToken },\n        },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Gets all the identities linked to a user.\n   */\n  async getUserIdentities(): Promise<\n    | {\n        data: {\n          identities: UserIdentity[]\n        }\n        error: null\n      }\n    | { data: null; error: AuthError }\n  > {\n    try {\n      const { data, error } = await this.getUser()\n      if (error) throw error\n      return { data: { identities: data.user.identities ?? [] }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n  /**\n   * Links an oauth identity to an existing user.\n   * This method supports the PKCE flow.\n   */\n  async linkIdentity(credentials: SignInWithOAuthCredentials): Promise<OAuthResponse> {\n    try {\n      const { data, error } = await this._useSession(async (result) => {\n        const { data, error } = result\n        if (error) throw error\n        const url: string = await this._getUrlForProvider(\n          `${this.url}/user/identities/authorize`,\n          credentials.provider,\n          {\n            redirectTo: credentials.options?.redirectTo,\n            scopes: credentials.options?.scopes,\n            queryParams: credentials.options?.queryParams,\n            skipBrowserRedirect: true,\n          }\n        )\n        return await _request(this.fetch, 'GET', url, {\n          headers: this.headers,\n          jwt: data.session?.access_token ?? undefined,\n        })\n      })\n      if (error) throw error\n      if (isBrowser() && !credentials.options?.skipBrowserRedirect) {\n        window.location.assign(data?.url)\n      }\n      return { data: { provider: credentials.provider, url: data?.url }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { provider: credentials.provider, url: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n   */\n  async unlinkIdentity(identity: UserIdentity): Promise<\n    | {\n        data: {}\n        error: null\n      }\n    | { data: null; error: AuthError }\n  > {\n    try {\n      return await this._useSession(async (result) => {\n        const { data, error } = result\n        if (error) {\n          throw error\n        }\n        return await _request(\n          this.fetch,\n          'DELETE',\n          `${this.url}/user/identities/${identity.identity_id}`,\n          {\n            headers: this.headers,\n            jwt: data.session?.access_token ?? undefined,\n          }\n        )\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Generates a new JWT.\n   * @param refreshToken A valid refresh token that was returned on login.\n   */\n  private async _refreshAccessToken(refreshToken: string): Promise<AuthResponse> {\n    const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`\n    this._debug(debugName, 'begin')\n\n    try {\n      const startedAt = Date.now()\n\n      // will attempt to refresh the token with exponential backoff\n      return await retryable(\n        async (attempt) => {\n          if (attempt > 0) {\n            await sleep(200 * Math.pow(2, attempt - 1)) // 200, 400, 800, ...\n          }\n\n          this._debug(debugName, 'refreshing attempt', attempt)\n\n          return await _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n            body: { refresh_token: refreshToken },\n            headers: this.headers,\n            xform: _sessionResponse,\n          })\n        },\n        (attempt, error) => {\n          const nextBackOffInterval = 200 * Math.pow(2, attempt)\n          return (\n            error &&\n            isAuthRetryableFetchError(error) &&\n            // retryable only if the request can be sent before the backoff overflows the tick duration\n            Date.now() + nextBackOffInterval - startedAt < AUTO_REFRESH_TICK_DURATION\n          )\n        }\n      )\n    } catch (error) {\n      this._debug(debugName, 'error', error)\n\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n      throw error\n    } finally {\n      this._debug(debugName, 'end')\n    }\n  }\n\n  private _isValidSession(maybeSession: unknown): maybeSession is Session {\n    const isValidSession =\n      typeof maybeSession === 'object' &&\n      maybeSession !== null &&\n      'access_token' in maybeSession &&\n      'refresh_token' in maybeSession &&\n      'expires_at' in maybeSession\n\n    return isValidSession\n  }\n\n  private async _handleProviderSignIn(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n      skipBrowserRedirect?: boolean\n    }\n  ) {\n    const url: string = await this._getUrlForProvider(`${this.url}/authorize`, provider, {\n      redirectTo: options.redirectTo,\n      scopes: options.scopes,\n      queryParams: options.queryParams,\n    })\n\n    this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url)\n\n    // try to open on the browser\n    if (isBrowser() && !options.skipBrowserRedirect) {\n      window.location.assign(url)\n    }\n\n    return { data: { provider, url }, error: null }\n  }\n\n  /**\n   * Recovers the session from LocalStorage and refreshes the token\n   * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n   */\n  private async _recoverAndRefresh() {\n    const debugName = '#_recoverAndRefresh()'\n    this._debug(debugName, 'begin')\n\n    try {\n      const currentSession = await getItemAsync(this.storage, this.storageKey)\n      this._debug(debugName, 'session from storage', currentSession)\n\n      if (!this._isValidSession(currentSession)) {\n        this._debug(debugName, 'session is not valid')\n        if (currentSession !== null) {\n          await this._removeSession()\n        }\n\n        return\n      }\n\n      const timeNow = Math.round(Date.now() / 1000)\n      const expiresWithMargin = (currentSession.expires_at ?? Infinity) < timeNow + EXPIRY_MARGIN\n\n      this._debug(\n        debugName,\n        `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${EXPIRY_MARGIN}s`\n      )\n\n      if (expiresWithMargin) {\n        if (this.autoRefreshToken && currentSession.refresh_token) {\n          const { error } = await this._callRefreshToken(currentSession.refresh_token)\n\n          if (error) {\n            console.error(error)\n\n            if (!isAuthRetryableFetchError(error)) {\n              this._debug(\n                debugName,\n                'refresh failed with a non-retryable error, removing the session',\n                error\n              )\n              await this._removeSession()\n            }\n          }\n        }\n      } else {\n        // no need to persist currentSession again, as we just loaded it from\n        // local storage; persisting it again may overwrite a value saved by\n        // another client with access to the same local storage\n        await this._notifyAllSubscribers('SIGNED_IN', currentSession)\n      }\n    } catch (err) {\n      this._debug(debugName, 'error', err)\n\n      console.error(err)\n      return\n    } finally {\n      this._debug(debugName, 'end')\n    }\n  }\n\n  private async _callRefreshToken(refreshToken: string): Promise<CallRefreshTokenResult> {\n    if (!refreshToken) {\n      throw new AuthSessionMissingError()\n    }\n\n    // refreshing is already in progress\n    if (this.refreshingDeferred) {\n      return this.refreshingDeferred.promise\n    }\n\n    const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`\n\n    this._debug(debugName, 'begin')\n\n    try {\n      this.refreshingDeferred = new Deferred<CallRefreshTokenResult>()\n\n      const { data, error } = await this._refreshAccessToken(refreshToken)\n      if (error) throw error\n      if (!data.session) throw new AuthSessionMissingError()\n\n      await this._saveSession(data.session)\n      await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session)\n\n      const result = { session: data.session, error: null }\n\n      this.refreshingDeferred.resolve(result)\n\n      return result\n    } catch (error) {\n      this._debug(debugName, 'error', error)\n\n      if (isAuthError(error)) {\n        const result = { session: null, error }\n\n        if (!isAuthRetryableFetchError(error)) {\n          await this._removeSession()\n        }\n\n        this.refreshingDeferred?.resolve(result)\n\n        return result\n      }\n\n      this.refreshingDeferred?.reject(error)\n      throw error\n    } finally {\n      this.refreshingDeferred = null\n      this._debug(debugName, 'end')\n    }\n  }\n\n  private async _notifyAllSubscribers(\n    event: AuthChangeEvent,\n    session: Session | null,\n    broadcast = true\n  ) {\n    const debugName = `#_notifyAllSubscribers(${event})`\n    this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`)\n\n    try {\n      if (this.broadcastChannel && broadcast) {\n        this.broadcastChannel.postMessage({ event, session })\n      }\n\n      const errors: any[] = []\n      const promises = Array.from(this.stateChangeEmitters.values()).map(async (x) => {\n        try {\n          await x.callback(event, session)\n        } catch (e: any) {\n          errors.push(e)\n        }\n      })\n\n      await Promise.all(promises)\n\n      if (errors.length > 0) {\n        for (let i = 0; i < errors.length; i += 1) {\n          console.error(errors[i])\n        }\n\n        throw errors[0]\n      }\n    } finally {\n      this._debug(debugName, 'end')\n    }\n  }\n\n  /**\n   * set currentSession and currentUser\n   * process to _startAutoRefreshToken if possible\n   */\n  private async _saveSession(session: Session) {\n    this._debug('#_saveSession()', session)\n    // _saveSession is always called whenever a new session has been acquired\n    // so we can safely suppress the warning returned by future getSession calls\n    this.suppressGetSessionWarning = true\n    await setItemAsync(this.storage, this.storageKey, session)\n  }\n\n  private async _removeSession() {\n    this._debug('#_removeSession()')\n\n    await removeItemAsync(this.storage, this.storageKey)\n    await this._notifyAllSubscribers('SIGNED_OUT', null)\n  }\n\n  /**\n   * Removes any registered visibilitychange callback.\n   *\n   * {@see #startAutoRefresh}\n   * {@see #stopAutoRefresh}\n   */\n  private _removeVisibilityChangedCallback() {\n    this._debug('#_removeVisibilityChangedCallback()')\n\n    const callback = this.visibilityChangedCallback\n    this.visibilityChangedCallback = null\n\n    try {\n      if (callback && isBrowser() && window?.removeEventListener) {\n        window.removeEventListener('visibilitychange', callback)\n      }\n    } catch (e) {\n      console.error('removing visibilitychange callback failed', e)\n    }\n  }\n\n  /**\n   * This is the private implementation of {@link #startAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _startAutoRefresh() {\n    await this._stopAutoRefresh()\n\n    this._debug('#_startAutoRefresh()')\n\n    const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION)\n    this.autoRefreshTicker = ticker\n\n    if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n      // ticker is a NodeJS Timeout object that has an `unref` method\n      // https://nodejs.org/api/timers.html#timeoutunref\n      // When auto refresh is used in NodeJS (like for testing) the\n      // `setInterval` is preventing the process from being marked as\n      // finished and tests run endlessly. This can be prevented by calling\n      // `unref()` on the returned object.\n      ticker.unref()\n      // @ts-expect-error TS has no context of Deno\n    } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n      // similar like for NodeJS, but with the Deno API\n      // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n      // @ts-expect-error TS has no context of Deno\n      Deno.unrefTimer(ticker)\n    }\n\n    // run the tick immediately, but in the next pass of the event loop so that\n    // #_initialize can be allowed to complete without recursively waiting on\n    // itself\n    setTimeout(async () => {\n      await this.initializePromise\n      await this._autoRefreshTokenTick()\n    }, 0)\n  }\n\n  /**\n   * This is the private implementation of {@link #stopAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _stopAutoRefresh() {\n    this._debug('#_stopAutoRefresh()')\n\n    const ticker = this.autoRefreshTicker\n    this.autoRefreshTicker = null\n\n    if (ticker) {\n      clearInterval(ticker)\n    }\n  }\n\n  /**\n   * Starts an auto-refresh process in the background. The session is checked\n   * every few seconds. Close to the time of expiration a process is started to\n   * refresh the session. If refreshing fails it will be retried for as long as\n   * necessary.\n   *\n   * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n   * to call this function, it will be called for you.\n   *\n   * On browsers the refresh process works only when the tab/window is in the\n   * foreground to conserve resources as well as prevent race conditions and\n   * flooding auth with requests. If you call this method any managed\n   * visibility change callback will be removed and you must manage visibility\n   * changes on your own.\n   *\n   * On non-browser platforms the refresh process works *continuously* in the\n   * background, which may not be desirable. You should hook into your\n   * platform's foreground indication mechanism and call these methods\n   * appropriately to conserve resources.\n   *\n   * {@see #stopAutoRefresh}\n   */\n  async startAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._startAutoRefresh()\n  }\n\n  /**\n   * Stops an active auto refresh process running in the background (if any).\n   *\n   * If you call this method any managed visibility change callback will be\n   * removed and you must manage visibility changes on your own.\n   *\n   * See {@link #startAutoRefresh} for more details.\n   */\n  async stopAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._stopAutoRefresh()\n  }\n\n  /**\n   * Runs the auto refresh token tick.\n   */\n  private async _autoRefreshTokenTick() {\n    this._debug('#_autoRefreshTokenTick()', 'begin')\n\n    try {\n      await this._acquireLock(0, async () => {\n        try {\n          const now = Date.now()\n\n          try {\n            return await this._useSession(async (result) => {\n              const {\n                data: { session },\n              } = result\n\n              if (!session || !session.refresh_token || !session.expires_at) {\n                this._debug('#_autoRefreshTokenTick()', 'no session')\n                return\n              }\n\n              // session will expire in this many ticks (or has already expired if <= 0)\n              const expiresInTicks = Math.floor(\n                (session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION\n              )\n\n              this._debug(\n                '#_autoRefreshTokenTick()',\n                `access token expires in ${expiresInTicks} ticks, a tick lasts ${AUTO_REFRESH_TICK_DURATION}ms, refresh threshold is ${AUTO_REFRESH_TICK_THRESHOLD} ticks`\n              )\n\n              if (expiresInTicks <= AUTO_REFRESH_TICK_THRESHOLD) {\n                await this._callRefreshToken(session.refresh_token)\n              }\n            })\n          } catch (e: any) {\n            console.error(\n              'Auto refresh tick failed with error. This is likely a transient error.',\n              e\n            )\n          }\n        } finally {\n          this._debug('#_autoRefreshTokenTick()', 'end')\n        }\n      })\n    } catch (e: any) {\n      if (e.isAcquireTimeout || e instanceof LockAcquireTimeoutError) {\n        this._debug('auto refresh token tick lock not available')\n      } else {\n        throw e\n      }\n    }\n  }\n\n  /**\n   * Registers callbacks on the browser / platform, which in-turn run\n   * algorithms when the browser window/tab are in foreground. On non-browser\n   * platforms it assumes always foreground.\n   */\n  private async _handleVisibilityChange() {\n    this._debug('#_handleVisibilityChange()')\n\n    if (!isBrowser() || !window?.addEventListener) {\n      if (this.autoRefreshToken) {\n        // in non-browser environments the refresh token ticker runs always\n        this.startAutoRefresh()\n      }\n\n      return false\n    }\n\n    try {\n      this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false)\n\n      window?.addEventListener('visibilitychange', this.visibilityChangedCallback)\n\n      // now immediately call the visbility changed callback to setup with the\n      // current visbility state\n      await this._onVisibilityChanged(true) // initial call\n    } catch (error) {\n      console.error('_handleVisibilityChange', error)\n    }\n  }\n\n  /**\n   * Callback registered with `window.addEventListener('visibilitychange')`.\n   */\n  private async _onVisibilityChanged(calledFromInitialize: boolean) {\n    const methodName = `#_onVisibilityChanged(${calledFromInitialize})`\n    this._debug(methodName, 'visibilityState', document.visibilityState)\n\n    if (document.visibilityState === 'visible') {\n      if (this.autoRefreshToken) {\n        // in browser environments the refresh token ticker runs only on focused tabs\n        // which prevents race conditions\n        this._startAutoRefresh()\n      }\n\n      if (!calledFromInitialize) {\n        // called when the visibility has changed, i.e. the browser\n        // transitioned from hidden -> visible so we need to see if the session\n        // should be recovered immediately... but to do that we need to acquire\n        // the lock first asynchronously\n        await this.initializePromise\n\n        await this._acquireLock(-1, async () => {\n          if (document.visibilityState !== 'visible') {\n            this._debug(\n              methodName,\n              'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting'\n            )\n\n            // visibility has changed while waiting for the lock, abort\n            return\n          }\n\n          // recover the session\n          await this._recoverAndRefresh()\n        })\n      }\n    } else if (document.visibilityState === 'hidden') {\n      if (this.autoRefreshToken) {\n        this._stopAutoRefresh()\n      }\n    }\n  }\n\n  /**\n   * Generates the relevant login URL for a third-party provider.\n   * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n   * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n   */\n  private async _getUrlForProvider(\n    url: string,\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n      skipBrowserRedirect?: boolean\n    }\n  ) {\n    const urlParams: string[] = [`provider=${encodeURIComponent(provider)}`]\n    if (options?.redirectTo) {\n      urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`)\n    }\n    if (options?.scopes) {\n      urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`)\n    }\n    if (this.flowType === 'pkce') {\n      const [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n        this.storage,\n        this.storageKey\n      )\n\n      const flowParams = new URLSearchParams({\n        code_challenge: `${encodeURIComponent(codeChallenge)}`,\n        code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\n      })\n      urlParams.push(flowParams.toString())\n    }\n    if (options?.queryParams) {\n      const query = new URLSearchParams(options.queryParams)\n      urlParams.push(query.toString())\n    }\n    if (options?.skipBrowserRedirect) {\n      urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`)\n    }\n\n    return `${url}?${urlParams.join('&')}`\n  }\n\n  private async _unenroll(params: MFAUnenrollParams): Promise<AuthMFAUnenrollResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n\n        return await _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        })\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#enroll}\n   */\n  private async _enroll(params: MFAEnrollTOTPParams): Promise<AuthMFAEnrollTOTPResponse>\n  private async _enroll(params: MFAEnrollPhoneParams): Promise<AuthMFAEnrollPhoneResponse>\n  private async _enroll(params: MFAEnrollParams): Promise<AuthMFAEnrollResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n\n        const body = {\n          friendly_name: params.friendlyName,\n          factor_type: params.factorType,\n          ...(params.factorType === 'phone' ? { phone: params.phone } : { issuer: params.issuer }),\n        }\n\n        const { data, error } = await _request(this.fetch, 'POST', `${this.url}/factors`, {\n          body,\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        })\n\n        if (error) {\n          return { data: null, error }\n        }\n\n        if (params.factorType === 'totp' && data?.totp?.qr_code) {\n          data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`\n        }\n\n        return { data, error: null }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#verify}\n   */\n  private async _verify(params: MFAVerifyParams): Promise<AuthMFAVerifyResponse> {\n    return this._acquireLock(-1, async () => {\n      try {\n        return await this._useSession(async (result) => {\n          const { data: sessionData, error: sessionError } = result\n          if (sessionError) {\n            return { data: null, error: sessionError }\n          }\n\n          const { data, error } = await _request(\n            this.fetch,\n            'POST',\n            `${this.url}/factors/${params.factorId}/verify`,\n            {\n              body: { code: params.code, challenge_id: params.challengeId },\n              headers: this.headers,\n              jwt: sessionData?.session?.access_token,\n            }\n          )\n          if (error) {\n            return { data: null, error }\n          }\n\n          await this._saveSession({\n            expires_at: Math.round(Date.now() / 1000) + data.expires_in,\n            ...data,\n          })\n          await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data)\n\n          return { data, error }\n        })\n      } catch (error) {\n        if (isAuthError(error)) {\n          return { data: null, error }\n        }\n        throw error\n      }\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challenge}\n   */\n  private async _challenge(params: MFAChallengeParams): Promise<AuthMFAChallengeResponse> {\n    return this._acquireLock(-1, async () => {\n      try {\n        return await this._useSession(async (result) => {\n          const { data: sessionData, error: sessionError } = result\n          if (sessionError) {\n            return { data: null, error: sessionError }\n          }\n\n          return await _request(\n            this.fetch,\n            'POST',\n            `${this.url}/factors/${params.factorId}/challenge`,\n            {\n              body: { channel: params.channel },\n              headers: this.headers,\n              jwt: sessionData?.session?.access_token,\n            }\n          )\n        })\n      } catch (error) {\n        if (isAuthError(error)) {\n          return { data: null, error }\n        }\n        throw error\n      }\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challengeAndVerify}\n   */\n  private async _challengeAndVerify(\n    params: MFAChallengeAndVerifyParams\n  ): Promise<AuthMFAVerifyResponse> {\n    // both _challenge and _verify independently acquire the lock, so no need\n    // to acquire it here\n\n    const { data: challengeData, error: challengeError } = await this._challenge({\n      factorId: params.factorId,\n    })\n    if (challengeError) {\n      return { data: null, error: challengeError }\n    }\n\n    return await this._verify({\n      factorId: params.factorId,\n      challengeId: challengeData.id,\n      code: params.code,\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#listFactors}\n   */\n  private async _listFactors(): Promise<AuthMFAListFactorsResponse> {\n    // use #getUser instead of #_getUser as the former acquires a lock\n    const {\n      data: { user },\n      error: userError,\n    } = await this.getUser()\n    if (userError) {\n      return { data: null, error: userError }\n    }\n\n    const factors = user?.factors || []\n    const totp = factors.filter(\n      (factor) => factor.factor_type === 'totp' && factor.status === 'verified'\n    )\n    const phone = factors.filter(\n      (factor) => factor.factor_type === 'phone' && factor.status === 'verified'\n    )\n\n    return {\n      data: {\n        all: factors,\n        totp,\n        phone,\n      },\n      error: null,\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n   */\n  private async _getAuthenticatorAssuranceLevel(): Promise<AuthMFAGetAuthenticatorAssuranceLevelResponse> {\n    return this._acquireLock(-1, async () => {\n      return await this._useSession(async (result) => {\n        const {\n          data: { session },\n          error: sessionError,\n        } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n        if (!session) {\n          return {\n            data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n            error: null,\n          }\n        }\n\n        const payload = this._decodeJWT(session.access_token)\n\n        let currentLevel: AuthenticatorAssuranceLevels | null = null\n\n        if (payload.aal) {\n          currentLevel = payload.aal\n        }\n\n        let nextLevel: AuthenticatorAssuranceLevels | null = currentLevel\n\n        const verifiedFactors =\n          session.user.factors?.filter((factor: Factor) => factor.status === 'verified') ?? []\n\n        if (verifiedFactors.length > 0) {\n          nextLevel = 'aal2'\n        }\n\n        const currentAuthenticationMethods = payload.amr || []\n\n        return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null }\n      })\n    })\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3481, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3487, "column": 0}, "map": {"version":3,"file":"AuthAdminApi.js","sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40supabase/auth-js/src/AuthAdminApi.ts"],"sourcesContent":["import GoTrueAdminApi from './GoTrueAdminApi'\n\nconst AuthAdminApi = GoTrueAdminApi\n\nexport default AuthAdminApi\n"],"names":[],"mappings":";;;AAAA,OAAO,cAAc,MAAM,kBAAkB,CAAA;;AAE7C,MAAM,YAAY,gLAAG,UAAc,CAAA;uCAEpB,YAAY,CAAA","ignoreList":[0]}},
    {"offset": {"line": 3495, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3501, "column": 0}, "map": {"version":3,"file":"AuthClient.js","sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40supabase/auth-js/src/AuthClient.ts"],"sourcesContent":["import GoTrueClient from './GoTrueClient'\n\nconst AuthClient = GoTrueClient\n\nexport default AuthClient\n"],"names":[],"mappings":";;;AAAA,OAAO,YAAY,MAAM,gBAAgB,CAAA;;AAEzC,MAAM,UAAU,8KAAG,UAAY,CAAA;uCAEhB,UAAU,CAAA","ignoreList":[0]}},
    {"offset": {"line": 3509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3515, "column": 0}, "map": {"version":3,"file":"types.js","sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40supabase/auth-js/src/lib/types.ts"],"sourcesContent":["import { AuthError } from './errors'\nimport { Fetch } from './fetch'\nimport {\n  MFAEnrollTOTPParams,\n  MFAEnrollPhoneParams,\n  AuthMFAEnrollTOTPResponse,\n  AuthMFAEnrollPhoneResponse,\n} from './internal-types'\n\n/** One of the providers supported by GoTrue. */\nexport type Provider =\n  | 'apple'\n  | 'azure'\n  | 'bitbucket'\n  | 'discord'\n  | 'facebook'\n  | 'figma'\n  | 'github'\n  | 'gitlab'\n  | 'google'\n  | 'kakao'\n  | 'keycloak'\n  | 'linkedin'\n  | 'linkedin_oidc'\n  | 'notion'\n  | 'slack'\n  | 'slack_oidc'\n  | 'spotify'\n  | 'twitch'\n  | 'twitter'\n  | 'workos'\n  | 'zoom'\n  | 'fly'\n\nexport type AuthChangeEventMFA = 'MFA_CHALLENGE_VERIFIED'\n\nexport type AuthChangeEvent =\n  | 'INITIAL_SESSION'\n  | 'PASSWORD_RECOVERY'\n  | 'SIGNED_IN'\n  | 'SIGNED_OUT'\n  | 'TOKEN_REFRESHED'\n  | 'USER_UPDATED'\n  | AuthChangeEventMFA\n\n/**\n * Provide your own global lock implementation instead of the default\n * implementation. The function should acquire a lock for the duration of the\n * `fn` async function, such that no other client instances will be able to\n * hold it at the same time.\n *\n * @experimental\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout should occur. If positive it\n *                       should throw an Error with an `isAcquireTimeout`\n *                       property set to true if the operation fails to be\n *                       acquired after this much time (ms).\n * @param fn The operation to execute when the lock is acquired.\n */\nexport type LockFunc = <R>(name: string, acquireTimeout: number, fn: () => Promise<R>) => Promise<R>\n\nexport type GoTrueClientOptions = {\n  /* The URL of the GoTrue server. */\n  url?: string\n  /* Any additional headers to send to the GoTrue server. */\n  headers?: { [key: string]: string }\n  /* Optional key name used for storing tokens in local storage. */\n  storageKey?: string\n  /* Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user. */\n  detectSessionInUrl?: boolean\n  /* Set to \"true\" if you want to automatically refresh the token before expiring. */\n  autoRefreshToken?: boolean\n  /* Set to \"true\" if you want to automatically save the user session into local storage. If set to false, session will just be saved in memory. */\n  persistSession?: boolean\n  /* Provide your own local storage implementation to use instead of the browser's local storage. */\n  storage?: SupportedStorage\n  /* A custom fetch implementation. */\n  fetch?: Fetch\n  /* If set to 'pkce' PKCE flow. Defaults to the 'implicit' flow otherwise */\n  flowType?: AuthFlowType\n  /* If debug messages are emitted. Can be used to inspect the behavior of the library. If set to a function, the provided function will be used instead of `console.log()` to perform the logging. */\n  debug?: boolean | ((message: string, ...args: any[]) => void)\n  /**\n   * Provide your own locking mechanism based on the environment. By default no locking is done at this time.\n   *\n   * @experimental\n   */\n  lock?: LockFunc\n  /**\n   * Set to \"true\" if there is a custom authorization header set globally.\n   * @experimental\n   */\n  hasCustomAuthorizationHeader?: boolean\n}\n\nexport type WeakPasswordReasons = 'length' | 'characters' | 'pwned' | (string & {})\nexport type WeakPassword = {\n  reasons: WeakPasswordReasons[]\n  message: string\n}\n\nexport type AuthResponse =\n  | {\n      data: {\n        user: User | null\n        session: Session | null\n      }\n      error: null\n    }\n  | {\n      data: {\n        user: null\n        session: null\n      }\n      error: AuthError\n    }\n\nexport type AuthResponsePassword =\n  | {\n      data: {\n        user: User | null\n        session: Session | null\n        weak_password?: WeakPassword | null\n      }\n      error: null\n    }\n  | {\n      data: {\n        user: null\n        session: null\n      }\n      error: AuthError\n    }\n\n/**\n * AuthOtpResponse is returned when OTP is used.\n *\n * {@see AuthResponse}\n */\nexport type AuthOtpResponse =\n  | {\n      data: { user: null; session: null; messageId?: string | null }\n      error: null\n    }\n  | {\n      data: { user: null; session: null; messageId?: string | null }\n      error: AuthError\n    }\n\nexport type AuthTokenResponse =\n  | {\n      data: {\n        user: User\n        session: Session\n      }\n      error: null\n    }\n  | {\n      data: {\n        user: null\n        session: null\n      }\n      error: AuthError\n    }\n\nexport type AuthTokenResponsePassword =\n  | {\n      data: {\n        user: User\n        session: Session\n        weakPassword?: WeakPassword\n      }\n      error: null\n    }\n  | {\n      data: {\n        user: null\n        session: null\n        weakPassword?: null\n      }\n      error: AuthError\n    }\n\nexport type OAuthResponse =\n  | {\n      data: {\n        provider: Provider\n        url: string\n      }\n      error: null\n    }\n  | {\n      data: {\n        provider: Provider\n        url: null\n      }\n      error: AuthError\n    }\n\nexport type SSOResponse =\n  | {\n      data: {\n        /**\n         * URL to open in a browser which will complete the sign-in flow by\n         * taking the user to the identity provider's authentication flow.\n         *\n         * On browsers you can set the URL to `window.location.href` to take\n         * the user to the authentication flow.\n         */\n        url: string\n      }\n      error: null\n    }\n  | {\n      data: null\n      error: AuthError\n    }\n\nexport type UserResponse =\n  | {\n      data: {\n        user: User\n      }\n      error: null\n    }\n  | {\n      data: {\n        user: null\n      }\n      error: AuthError\n    }\n\nexport interface Session {\n  /**\n   * The oauth provider token. If present, this can be used to make external API requests to the oauth provider used.\n   */\n  provider_token?: string | null\n  /**\n   * The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\n   * Not all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token.\n   */\n  provider_refresh_token?: string | null\n  /**\n   * The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value.\n   */\n  access_token: string\n  /**\n   * A one-time used refresh token that never expires.\n   */\n  refresh_token: string\n  /**\n   * The number of seconds until the token expires (since it was issued). Returned when a login is confirmed.\n   */\n  expires_in: number\n  /**\n   * A timestamp of when the token will expire. Returned when a login is confirmed.\n   */\n  expires_at?: number\n  token_type: string\n  user: User\n}\n\n/**\n * An authentication methord reference (AMR) entry.\n *\n * An entry designates what method was used by the user to verify their\n * identity and at what time.\n *\n * @see {@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}.\n */\nexport interface AMREntry {\n  /** Authentication method name. */\n  method: 'password' | 'otp' | 'oauth' | 'mfa/totp' | (string & {})\n\n  /**\n   * Timestamp when the method was successfully used. Represents number of\n   * seconds since 1st January 1970 (UNIX epoch) in UTC.\n   */\n  timestamp: number\n}\n\nexport interface UserIdentity {\n  id: string\n  user_id: string\n  identity_data?: {\n    [key: string]: any\n  }\n  identity_id: string\n  provider: string\n  created_at?: string\n  last_sign_in_at?: string\n  updated_at?: string\n}\n\n/**\n * A MFA factor.\n *\n * @see {@link GoTrueMFAApi#enroll}\n * @see {@link GoTrueMFAApi#listFactors}\n * @see {@link GoTrueMFAAdminApi#listFactors}\n */\nexport interface Factor {\n  /** ID of the factor. */\n  id: string\n\n  /** Friendly name of the factor, useful to disambiguate between multiple factors. */\n  friendly_name?: string\n\n  /**\n   * Type of factor. `totp` and `phone` supported with this version\n   */\n  factor_type: 'totp' | 'phone' | (string & {})\n\n  /** Factor's status. */\n  status: 'verified' | 'unverified'\n\n  created_at: string\n  updated_at: string\n}\n\nexport interface UserAppMetadata {\n  provider?: string\n  [key: string]: any\n}\n\nexport interface UserMetadata {\n  [key: string]: any\n}\n\nexport interface User {\n  id: string\n  app_metadata: UserAppMetadata\n  user_metadata: UserMetadata\n  aud: string\n  confirmation_sent_at?: string\n  recovery_sent_at?: string\n  email_change_sent_at?: string\n  new_email?: string\n  new_phone?: string\n  invited_at?: string\n  action_link?: string\n  email?: string\n  phone?: string\n  created_at: string\n  confirmed_at?: string\n  email_confirmed_at?: string\n  phone_confirmed_at?: string\n  last_sign_in_at?: string\n  role?: string\n  updated_at?: string\n  identities?: UserIdentity[]\n  is_anonymous?: boolean\n  factors?: Factor[]\n}\n\nexport interface UserAttributes {\n  /**\n   * The user's email.\n   */\n  email?: string\n\n  /**\n   * The user's phone.\n   */\n  phone?: string\n\n  /**\n   * The user's password.\n   */\n  password?: string\n\n  /**\n   * The nonce sent for reauthentication if the user's password is to be updated.\n   *\n   * Call reauthenticate() to obtain the nonce first.\n   */\n  nonce?: string\n\n  /**\n   * A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.\n   *\n   * The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n   *\n   */\n  data?: object\n}\n\nexport interface AdminUserAttributes extends Omit<UserAttributes, 'data'> {\n  /**\n   * A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.\n   *\n   *\n   * The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n   *\n   * Note: When using the GoTrueAdminApi and wanting to modify a user's metadata,\n   * this attribute is used instead of UserAttributes data.\n   *\n   */\n  user_metadata?: object\n\n  /**\n   * A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.\n   *\n   * Only a service role can modify.\n   *\n   * The `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\n   * access control information.\n   */\n  app_metadata?: object\n\n  /**\n   * Confirms the user's email address if set to true.\n   *\n   * Only a service role can modify.\n   */\n  email_confirm?: boolean\n\n  /**\n   * Confirms the user's phone number if set to true.\n   *\n   * Only a service role can modify.\n   */\n  phone_confirm?: boolean\n\n  /**\n   * Determines how long a user is banned for.\n   *\n   * The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\n   * Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n   *\n   * For example, some possible durations include: '300ms', '2h45m'.\n   *\n   * Setting the ban duration to 'none' lifts the ban on the user.\n   */\n  ban_duration?: string | 'none'\n\n  /**\n   * The `role` claim set in the user's access token JWT.\n   *\n   * When a user signs up, this role is set to `authenticated` by default. You should only modify the `role` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\n   *\n   * Setting this role to `service_role` is not recommended as it grants the user admin privileges.\n   */\n  role?: string\n\n  /**\n   * The `password_hash` for the user's password.\n   *\n   * Allows you to specify a password hash for the user. This is useful for migrating a user's password hash from another service.\n   *\n   * Supports bcrypt and argon2 password hashes.\n   */\n  password_hash?: string\n\n  /**\n   * The `id` for the user.\n   *\n   * Allows you to overwrite the default `id` set for the user.\n   */\n  id?: string\n}\n\nexport interface Subscription {\n  /**\n   * The subscriber UUID. This will be set by the client.\n   */\n  id: string\n  /**\n   * The function to call every time there is an event. eg: (eventName) => {}\n   */\n  callback: (event: AuthChangeEvent, session: Session | null) => void\n  /**\n   * Call this to remove the listener.\n   */\n  unsubscribe: () => void\n}\n\nexport type SignInAnonymouslyCredentials = {\n  options?: {\n    /**\n     * A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.\n     *\n     * The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n     */\n    data?: object\n    /** Verification token received when the user completes the captcha on the site. */\n    captchaToken?: string\n  }\n}\n\nexport type SignUpWithPasswordCredentials =\n  | {\n      /** The user's email address. */\n      email: string\n      /** The user's password. */\n      password: string\n      options?: {\n        /** The redirect url embedded in the email link */\n        emailRedirectTo?: string\n        /**\n         * A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.\n         *\n         * The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n         */\n        data?: object\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n      }\n    }\n  | {\n      /** The user's phone number. */\n      phone: string\n      /** The user's password. */\n      password: string\n      options?: {\n        /**\n         * A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.\n         *\n         * The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n         */\n        data?: object\n        /** Verification token received when the user completes the captcha on the site. Requires a configured WhatsApp sender on Twilio */\n        captchaToken?: string\n        /** Messaging channel to use (e.g. whatsapp or sms) */\n        channel?: 'sms' | 'whatsapp'\n      }\n    }\nexport type SignInWithPasswordCredentials =\n  | {\n      /** The user's email address. */\n      email: string\n      /** The user's password. */\n      password: string\n      options?: {\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n      }\n    }\n  | {\n      /** The user's phone number. */\n      phone: string\n      /** The user's password. */\n      password: string\n      options?: {\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n      }\n    }\n\nexport type SignInWithPasswordlessCredentials =\n  | {\n      /** The user's email address. */\n      email: string\n      options?: {\n        /** The redirect url embedded in the email link */\n        emailRedirectTo?: string\n        /** If set to false, this method will not create a new user. Defaults to true. */\n        shouldCreateUser?: boolean\n        /**\n         * A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.\n         *\n         * The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n         */\n        data?: object\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n      }\n    }\n  | {\n      /** The user's phone number. */\n      phone: string\n      options?: {\n        /** If set to false, this method will not create a new user. Defaults to true. */\n        shouldCreateUser?: boolean\n        /**\n         * A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.\n         *\n         * The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n         */\n        data?: object\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n        /** Messaging channel to use (e.g. whatsapp or sms) */\n        channel?: 'sms' | 'whatsapp'\n      }\n    }\n\nexport type AuthFlowType = 'implicit' | 'pkce'\nexport type SignInWithOAuthCredentials = {\n  /** One of the providers supported by GoTrue. */\n  provider: Provider\n  options?: {\n    /** A URL to send the user to after they are confirmed. */\n    redirectTo?: string\n    /** A space-separated list of scopes granted to the OAuth application. */\n    scopes?: string\n    /** An object of query params */\n    queryParams?: { [key: string]: string }\n    /** If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider. */\n    skipBrowserRedirect?: boolean\n  }\n}\n\nexport type SignInWithIdTokenCredentials = {\n  /** Provider name or OIDC `iss` value identifying which provider should be used to verify the provided token. Supported names: `google`, `apple`, `azure`, `facebook`, `kakao`, `keycloak` (deprecated). */\n  provider: 'google' | 'apple' | 'azure' | 'facebook' | 'kakao' | (string & {})\n  /** OIDC ID token issued by the specified provider. The `iss` claim in the ID token must match the supplied provider. Some ID tokens contain an `at_hash` which require that you provide an `access_token` value to be accepted properly. If the token contains a `nonce` claim you must supply the nonce used to obtain the ID token. */\n  token: string\n  /** If the ID token contains an `at_hash` claim, then the hash of this value is compared to the value in the ID token. */\n  access_token?: string\n  /** If the ID token contains a `nonce` claim, then the hash of this value is compared to the value in the ID token. */\n  nonce?: string\n  options?: {\n    /** Verification token received when the user completes the captcha on the site. */\n    captchaToken?: string\n  }\n}\n\nexport type VerifyOtpParams = VerifyMobileOtpParams | VerifyEmailOtpParams | VerifyTokenHashParams\nexport interface VerifyMobileOtpParams {\n  /** The user's phone number. */\n  phone: string\n  /** The otp sent to the user's phone number. */\n  token: string\n  /** The user's verification type. */\n  type: MobileOtpType\n  options?: {\n    /** A URL to send the user to after they are confirmed. */\n    redirectTo?: string\n\n    /**\n     * Verification token received when the user completes the captcha on the site.\n     *\n     * @deprecated\n     */\n    captchaToken?: string\n  }\n}\nexport interface VerifyEmailOtpParams {\n  /** The user's email address. */\n  email: string\n  /** The otp sent to the user's email address. */\n  token: string\n  /** The user's verification type. */\n  type: EmailOtpType\n  options?: {\n    /** A URL to send the user to after they are confirmed. */\n    redirectTo?: string\n\n    /** Verification token received when the user completes the captcha on the site.\n     *\n     * @deprecated\n     */\n    captchaToken?: string\n  }\n}\n\nexport interface VerifyTokenHashParams {\n  /** The token hash used in an email link */\n  token_hash: string\n\n  /** The user's verification type. */\n  type: EmailOtpType\n}\n\nexport type MobileOtpType = 'sms' | 'phone_change'\nexport type EmailOtpType = 'signup' | 'invite' | 'magiclink' | 'recovery' | 'email_change' | 'email'\n\nexport type ResendParams =\n  | {\n      type: Extract<EmailOtpType, 'signup' | 'email_change'>\n      email: string\n      options?: {\n        /** A URL to send the user to after they have signed-in. */\n        emailRedirectTo?: string\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n      }\n    }\n  | {\n      type: Extract<MobileOtpType, 'sms' | 'phone_change'>\n      phone: string\n      options?: {\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n      }\n    }\n\nexport type SignInWithSSO =\n  | {\n      /** UUID of the SSO provider to invoke single-sign on to. */\n      providerId: string\n\n      options?: {\n        /** A URL to send the user to after they have signed-in. */\n        redirectTo?: string\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n      }\n    }\n  | {\n      /** Domain name of the organization for which to invoke single-sign on. */\n      domain: string\n\n      options?: {\n        /** A URL to send the user to after they have signed-in. */\n        redirectTo?: string\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n      }\n    }\n\nexport type GenerateSignupLinkParams = {\n  type: 'signup'\n  email: string\n  password: string\n  options?: Pick<GenerateLinkOptions, 'data' | 'redirectTo'>\n}\n\nexport type GenerateInviteOrMagiclinkParams = {\n  type: 'invite' | 'magiclink'\n  /** The user's email */\n  email: string\n  options?: Pick<GenerateLinkOptions, 'data' | 'redirectTo'>\n}\n\nexport type GenerateRecoveryLinkParams = {\n  type: 'recovery'\n  /** The user's email */\n  email: string\n  options?: Pick<GenerateLinkOptions, 'redirectTo'>\n}\n\nexport type GenerateEmailChangeLinkParams = {\n  type: 'email_change_current' | 'email_change_new'\n  /** The user's email */\n  email: string\n  /**\n   * The user's new email. Only required if type is 'email_change_current' or 'email_change_new'.\n   */\n  newEmail: string\n  options?: Pick<GenerateLinkOptions, 'redirectTo'>\n}\n\nexport interface GenerateLinkOptions {\n  /**\n   * A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.\n   *\n   * The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n   */\n  data?: object\n  /** The URL which will be appended to the email link generated. */\n  redirectTo?: string\n}\n\nexport type GenerateLinkParams =\n  | GenerateSignupLinkParams\n  | GenerateInviteOrMagiclinkParams\n  | GenerateRecoveryLinkParams\n  | GenerateEmailChangeLinkParams\n\nexport type GenerateLinkResponse =\n  | {\n      data: {\n        properties: GenerateLinkProperties\n        user: User\n      }\n      error: null\n    }\n  | {\n      data: {\n        properties: null\n        user: null\n      }\n      error: AuthError\n    }\n\n/** The properties related to the email link generated  */\nexport type GenerateLinkProperties = {\n  /**\n   * The email link to send to the user.\n   * The action_link follows the following format: auth/v1/verify?type={verification_type}&token={hashed_token}&redirect_to={redirect_to}\n   * */\n  action_link: string\n  /**\n   * The raw email OTP.\n   * You should send this in the email if you want your users to verify using an OTP instead of the action link.\n   * */\n  email_otp: string\n  /**\n   * The hashed token appended to the action link.\n   * */\n  hashed_token: string\n  /** The URL appended to the action link. */\n  redirect_to: string\n  /** The verification type that the email link is associated to. */\n  verification_type: GenerateLinkType\n}\n\nexport type GenerateLinkType =\n  | 'signup'\n  | 'invite'\n  | 'magiclink'\n  | 'recovery'\n  | 'email_change_current'\n  | 'email_change_new'\n\nexport type MFAEnrollParams = MFAEnrollTOTPParams | MFAEnrollPhoneParams\n\nexport type MFAUnenrollParams = {\n  /** ID of the factor being unenrolled. */\n  factorId: string\n}\n\nexport type MFAVerifyParams = {\n  /** ID of the factor being verified. Returned in enroll(). */\n  factorId: string\n\n  /** ID of the challenge being verified. Returned in challenge(). */\n  challengeId: string\n\n  /** Verification code provided by the user. */\n  code: string\n}\n\nexport type MFAChallengeParams = {\n  /** ID of the factor to be challenged. Returned in enroll(). */\n  factorId: string\n  /** Messaging channel to use (e.g. whatsapp or sms). Only relevant for phone factors */\n  channel?: 'sms' | 'whatsapp'\n}\n\nexport type MFAChallengeAndVerifyParams = {\n  /** ID of the factor being verified. Returned in enroll(). */\n  factorId: string\n  /** Verification code provided by the user. */\n  code: string\n}\n\nexport type AuthMFAVerifyResponse =\n  | {\n      data: {\n        /** New access token (JWT) after successful verification. */\n        access_token: string\n\n        /** Type of token, typically `Bearer`. */\n        token_type: string\n\n        /** Number of seconds in which the access token will expire. */\n        expires_in: number\n\n        /** Refresh token you can use to obtain new access tokens when expired. */\n        refresh_token: string\n\n        /** Updated user profile. */\n        user: User\n      }\n      error: null\n    }\n  | {\n      data: null\n      error: AuthError\n    }\n\nexport type AuthMFAEnrollResponse = AuthMFAEnrollTOTPResponse | AuthMFAEnrollPhoneResponse\n\nexport type AuthMFAUnenrollResponse =\n  | {\n      data: {\n        /** ID of the factor that was successfully unenrolled. */\n        id: string\n      }\n      error: null\n    }\n  | { data: null; error: AuthError }\n\nexport type AuthMFAChallengeResponse =\n  | {\n      data: {\n        /** ID of the newly created challenge. */\n        id: string\n\n        /** Factor Type which generated the challenge */\n        type: 'totp' | 'phone'\n\n        /** Timestamp in UNIX seconds when this challenge will no longer be usable. */\n        expires_at: number\n      }\n      error: null\n    }\n  | { data: null; error: AuthError }\n\nexport type AuthMFAListFactorsResponse =\n  | {\n      data: {\n        /** All available factors (verified and unverified). */\n        all: Factor[]\n\n        /** Only verified TOTP factors. (A subset of `all`.) */\n        totp: Factor[]\n        /** Only verified Phone factors. (A subset of `all`.) */\n        phone: Factor[]\n      }\n      error: null\n    }\n  | { data: null; error: AuthError }\n\nexport type AuthenticatorAssuranceLevels = 'aal1' | 'aal2'\n\nexport type AuthMFAGetAuthenticatorAssuranceLevelResponse =\n  | {\n      data: {\n        /** Current AAL level of the session. */\n        currentLevel: AuthenticatorAssuranceLevels | null\n\n        /**\n         * Next possible AAL level for the session. If the next level is higher\n         * than the current one, the user should go through MFA.\n         *\n         * @see {@link GoTrueMFAApi#challenge}\n         */\n        nextLevel: AuthenticatorAssuranceLevels | null\n\n        /**\n         * A list of all authentication methods attached to this session. Use\n         * the information here to detect the last time a user verified a\n         * factor, for example if implementing a step-up scenario.\n         */\n        currentAuthenticationMethods: AMREntry[]\n      }\n      error: null\n    }\n  | { data: null; error: AuthError }\n\n/**\n * Contains the full multi-factor authentication API.\n *\n */\nexport interface GoTrueMFAApi {\n  /**\n   * Starts the enrollment process for a new Multi-Factor Authentication (MFA)\n   * factor. This method creates a new `unverified` factor.\n   * To verify a factor, present the QR code or secret to the user and ask them to add it to their\n   * authenticator app.\n   * The user has to enter the code from their authenticator app to verify it.\n   *\n   * Upon verifying a factor, all other sessions are logged out and the current session's authenticator level is promoted to `aal2`.\n   *\n   */\n  enroll(params: MFAEnrollTOTPParams): Promise<AuthMFAEnrollTOTPResponse>\n  enroll(params: MFAEnrollPhoneParams): Promise<AuthMFAEnrollPhoneResponse>\n  enroll(params: MFAEnrollParams): Promise<AuthMFAEnrollResponse>\n\n  /**\n   * Prepares a challenge used to verify that a user has access to a MFA\n   * factor.\n   */\n  challenge(params: MFAChallengeParams): Promise<AuthMFAChallengeResponse>\n\n  /**\n   * Verifies a code against a challenge. The verification code is\n   * provided by the user by entering a code seen in their authenticator app.\n   */\n  verify(params: MFAVerifyParams): Promise<AuthMFAVerifyResponse>\n\n  /**\n   * Unenroll removes a MFA factor.\n   * A user has to have an `aal2` authenticator level in order to unenroll a `verified` factor.\n   */\n  unenroll(params: MFAUnenrollParams): Promise<AuthMFAUnenrollResponse>\n\n  /**\n   * Helper method which creates a challenge and immediately uses the given code to verify against it thereafter. The verification code is\n   * provided by the user by entering a code seen in their authenticator app.\n   */\n  challengeAndVerify(params: MFAChallengeAndVerifyParams): Promise<AuthMFAVerifyResponse>\n\n  /**\n   * Returns the list of MFA factors enabled for this user.\n   *\n   * @see {@link GoTrueMFAApi#enroll}\n   * @see {@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n   * @see {@link GoTrueClient#getUser}\n   *\n   */\n  listFactors(): Promise<AuthMFAListFactorsResponse>\n\n  /**\n   * Returns the Authenticator Assurance Level (AAL) for the active session.\n   *\n   * - `aal1` (or `null`) means that the user's identity has been verified only\n   * with a conventional login (email+password, OTP, magic link, social login,\n   * etc.).\n   * - `aal2` means that the user's identity has been verified both with a conventional login and at least one MFA factor.\n   *\n   * Although this method returns a promise, it's fairly quick (microseconds)\n   * and rarely uses the network. You can use this to check whether the current\n   * user needs to be shown a screen to verify their MFA factors.\n   *\n   */\n  getAuthenticatorAssuranceLevel(): Promise<AuthMFAGetAuthenticatorAssuranceLevelResponse>\n}\n\n/**\n * @expermental\n */\nexport type AuthMFAAdminDeleteFactorResponse =\n  | {\n      data: {\n        /** ID of the factor that was successfully deleted. */\n        id: string\n      }\n      error: null\n    }\n  | { data: null; error: AuthError }\n\n/**\n * @expermental\n */\nexport type AuthMFAAdminDeleteFactorParams = {\n  /** ID of the MFA factor to delete. */\n  id: string\n\n  /** ID of the user whose factor is being deleted. */\n  userId: string\n}\n\n/**\n * @expermental\n */\nexport type AuthMFAAdminListFactorsResponse =\n  | {\n      data: {\n        /** All factors attached to the user. */\n        factors: Factor[]\n      }\n      error: null\n    }\n  | { data: null; error: AuthError }\n\n/**\n * @expermental\n */\nexport type AuthMFAAdminListFactorsParams = {\n  /** ID of the user. */\n  userId: string\n}\n\n/**\n * Contains the full multi-factor authentication administration API.\n *\n * @expermental\n */\nexport interface GoTrueAdminMFAApi {\n  /**\n   * Lists all factors associated to a user.\n   *\n   */\n  listFactors(params: AuthMFAAdminListFactorsParams): Promise<AuthMFAAdminListFactorsResponse>\n\n  /**\n   * Deletes a factor on a user. This will log the user out of all active\n   * sessions if the deleted factor was verified.\n   *\n   * @see {@link GoTrueMFAApi#unenroll}\n   *\n   * @expermental\n   */\n  deleteFactor(params: AuthMFAAdminDeleteFactorParams): Promise<AuthMFAAdminDeleteFactorResponse>\n}\n\ntype AnyFunction = (...args: any[]) => any\ntype MaybePromisify<T> = T | Promise<T>\n\ntype PromisifyMethods<T> = {\n  [K in keyof T]: T[K] extends AnyFunction\n    ? (...args: Parameters<T[K]>) => MaybePromisify<ReturnType<T[K]>>\n    : T[K]\n}\n\nexport type SupportedStorage = PromisifyMethods<\n  Pick<Storage, 'getItem' | 'setItem' | 'removeItem'>\n> & {\n  /**\n   * If set to `true` signals to the library that the storage medium is used\n   * on a server and the values may not be authentic, such as reading from\n   * request cookies. Implementations should not set this to true if the client\n   * is used on a server that reads storage information from authenticated\n   * sources, such as a secure database or file.\n   */\n  isServer?: boolean\n}\n\nexport type InitializeResult = { error: AuthError | null }\n\nexport type CallRefreshTokenResult =\n  | {\n      session: Session\n      error: null\n    }\n  | {\n      session: null\n      error: AuthError\n    }\n\nexport type Pagination = {\n  [key: string]: any\n  nextPage: number | null\n  lastPage: number\n  total: number\n}\n\nexport type PageParams = {\n  /** The page number */\n  page?: number\n  /** Number of items returned per page */\n  perPage?: number\n}\n\nexport type SignOut = {\n  /**\n   * Determines which sessions should be\n   * logged out. Global means all\n   * sessions by this account. Local\n   * means only this session. Others\n   * means all other sessions except the\n   * current one. When using others,\n   * there is no sign-out event fired on\n   * the current session!\n   */\n  scope?: 'global' | 'local' | 'others'\n}\n"],"names":[],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 3518, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3524, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/node_modules/%40supabase/auth-js/src/index.ts"],"sourcesContent":["import GoTrueAdminApi from './GoTrueAdminApi'\nimport GoTrueClient from './GoTrueClient'\nimport AuthAdminApi from './AuthAdminApi'\nimport AuthClient from './AuthClient'\nexport { GoTrueAdminApi, GoTrueClient, AuthAdminApi, AuthClient }\nexport * from './lib/types'\nexport * from './lib/errors'\nexport {\n  navigatorLock,\n  NavigatorLockAcquireTimeoutError,\n  internals as lockInternals,\n} from './lib/locks'\n"],"names":[],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 3534, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}