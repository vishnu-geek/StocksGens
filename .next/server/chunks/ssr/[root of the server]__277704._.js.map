{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/components/fancy-dark-loading.tsx"],"sourcesContent":["\"use client\";\n\nimport { Loader2 } from \"lucide-react\";\n\nexport default function Component() {\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-black text-white\">\n      <div className=\"w-64 text-center\">\n        <div className=\"relative\">\n          <Loader2\n            className=\"w-24 h-24 animate-spin text-blue-500 mx-auto mb-4\"\n            aria-hidden=\"true\"\n          />\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"text-2xl font-bold text-blue-300\">\n              {/* {Math.round(progress)}% */}\n            </div>\n          </div>\n        </div>\n        <h1 className=\"text-3xl font-bold mb-2 text-blue-300\">Loading...</h1>\n        <p className=\"text-gray-400 mb-4\">\n          Preparing your presentation, This may take a while\n        </p>\n        {/* <Progress value={progress} className=\"w-full h-2 bg-gray-700\" /> */}\n        <style jsx>{`\n          .progress-indicator {\n            background-color: #8b5cf6;\n          }\n        `}</style>\n        <div className=\"mt-8 space-y-2\">\n          <div className=\"h-2 w-full bg-black rounded-full overflow-hidden\">\n            <div\n              className=\"h-full bg-pink-500 rounded-full animate-pulse\"\n              style={{ width: \"75%\" }}\n            ></div>\n          </div>\n          <div className=\"h-2 w-full bg-gray-800 rounded-full overflow-hidden\">\n            <div\n              className=\"h-full bg-purple-500 rounded-full animate-pulse\"\n              style={{ width: \"55%\", animationDelay: \"0.2s\" }}\n            ></div>\n          </div>\n          <div className=\"h-2 w-full bg-gray-800 rounded-full overflow-hidden\">\n            <div\n              className=\"h-full bg-blue-500 rounded-full animate-pulse\"\n              style={{ width: \"90%\", animationDelay: \"0.4s\" }}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;;AAIe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;sDAAc;;8BACb,8OAAC;8DAAc;;sCACb,8OAAC,iNAAA,CAAA,UAAO;4BACN,WAAU;4BACV,eAAY;;;;;;sCAEd,8OAAC;sEAAc;sCACb,cAAA,8OAAC;0EAAc;;;;;;;;;;;;;;;;;8BAKnB,8OAAC;8DAAa;8BAAwC;;;;;;8BACtD,8OAAC;8DAAY;8BAAqB;;;;;;;;;;8BASlC,8OAAC;8DAAc;;sCACb,8OAAC;sEAAc;sCACb,cAAA,8OAAC;gCAEC,OAAO;oCAAE,OAAO;gCAAM;0EADZ;;;;;;;;;;;sCAId,8OAAC;sEAAc;sCACb,cAAA,8OAAC;gCAEC,OAAO;oCAAE,OAAO;oCAAO,gBAAgB;gCAAO;0EADpC;;;;;;;;;;;sCAId,8OAAC;sEAAc;sCACb,cAAA,8OAAC;gCAEC,OAAO;oCAAE,OAAO;oCAAO,gBAAgB;gCAAO;0EADpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQxB"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/components/ui/saveButton.tsx"],"sourcesContent":["\"use client\";\n\nimport { Save } from \"lucide-react\";\nimport { useState } from \"react\";\n\ninterface SaveButtonProps {\n  onClick: () => void;\n}\n\nexport default function SaveButton({ onClick }: SaveButtonProps) {\n  const [clicked, setClicked] = useState(false);\n  return (\n    <div className=\"fixed top-24 right-5\">\n      <button\n        className={`text-white transition-all duration-300 hover:scale-110 active:scale-90 p-4 ${\n          clicked ? \"bg-green-500  rounded-full\" : \" bg-red-600 rounded-full\"\n        }`}\n        aria-label=\"Share\"\n        onClick={() => {\n          setClicked(true);\n          onClick;\n        }}\n      >\n        <Save className=\"text-white w-6 h-6\" />\n      </button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AADA;AAFA;;;;AASe,SAAS,WAAW,EAAE,OAAO,EAAmB;IAC7D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,WAAW,CAAC,2EAA2E,EACrF,UAAU,+BAA+B,4BACzC;YACF,cAAW;YACX,SAAS;gBACP,WAAW;gBACX;YACF;sBAEA,cAAA,8OAAC,kMAAA,CAAA,OAAI;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIxB"}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/components/editableTest.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport SaveButton from \"./ui/saveButton\";\n\ninterface EditableTextProps {\n  initialText: string;\n  onSave: (text: string) => void;\n  className?: string;\n}\n\nexport function EditableText({\n  initialText,\n  onSave,\n  className = \"\",\n}: EditableTextProps) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [text, setText] = useState(initialText);\n  const [hasChanged, setHasChanged] = useState(false);\n  const textRef = useRef<HTMLDivElement>(null);\n  const cursorPositionRef = useRef<number | null>(null);\n\n  useEffect(() => {\n    if (isEditing && textRef.current) {\n      textRef.current.focus();\n      if (cursorPositionRef.current !== null) {\n        const range = document.createRange();\n        const sel = window.getSelection();\n        range.setStart(\n          textRef.current.childNodes[0] || textRef.current,\n          cursorPositionRef.current\n        );\n        range.collapse(true);\n        sel?.removeAllRanges();\n        sel?.addRange(range);\n      }\n    }\n  }, [isEditing, text]);\n\n  const handleBlur = () => {\n    setIsEditing(false);\n    if (hasChanged) {\n      onSave(text);\n      setHasChanged(false);\n    }\n  };\n\n  const handleInput = (e: React.FormEvent<HTMLDivElement>) => {\n    const newText = e.currentTarget.textContent || \"\";\n    if (newText !== initialText) {\n      setHasChanged(true);\n    } else {\n      setHasChanged(false);\n    }\n    setText(newText);\n    const selection = window.getSelection();\n    if (selection && selection.rangeCount > 0) {\n      const range = selection.getRangeAt(0);\n      cursorPositionRef.current = range.startOffset;\n    }\n  };\n\n  const handleSave = () => {\n    onSave(text);\n    setHasChanged(false);\n  };\n\n  return (\n    <div className=\"relative\">\n      {hasChanged && (\n        <div className=\"absolute right-0 top-0 -mt-8\">\n          <SaveButton onClick={() => handleSave()} />\n        </div>\n      )}\n      <div\n        ref={textRef}\n        className={`${className} ${\n          isEditing ? \"border border-blue-500 rounded p-1\" : \"\"\n        }`}\n        contentEditable={isEditing}\n        onBlur={handleBlur}\n        onClick={() => setIsEditing(true)}\n        onInput={handleInput}\n        suppressContentEditableWarning={true}\n      >\n        {text}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAQO,SAAS,aAAa,EAC3B,WAAW,EACX,MAAM,EACN,YAAY,EAAE,EACI;IAClB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IACvC,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAiB;IAEhD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,aAAa,QAAQ,OAAO,EAAE;YAChC,QAAQ,OAAO,CAAC,KAAK;YACrB,IAAI,kBAAkB,OAAO,KAAK,MAAM;gBACtC,MAAM,QAAQ,SAAS,WAAW;gBAClC,MAAM,MAAM,OAAO,YAAY;gBAC/B,MAAM,QAAQ,CACZ,QAAQ,OAAO,CAAC,UAAU,CAAC,EAAE,IAAI,QAAQ,OAAO,EAChD,kBAAkB,OAAO;gBAE3B,MAAM,QAAQ,CAAC;gBACf,KAAK;gBACL,KAAK,SAAS;YAChB;QACF;IACF,GAAG;QAAC;QAAW;KAAK;IAEpB,MAAM,aAAa;QACjB,aAAa;QACb,IAAI,YAAY;YACd,OAAO;YACP,cAAc;QAChB;IACF;IAEA,MAAM,cAAc,CAAC;QACnB,MAAM,UAAU,EAAE,aAAa,CAAC,WAAW,IAAI;QAC/C,IAAI,YAAY,aAAa;YAC3B,cAAc;QAChB,OAAO;YACL,cAAc;QAChB;QACA,QAAQ;QACR,MAAM,YAAY,OAAO,YAAY;QACrC,IAAI,aAAa,UAAU,UAAU,GAAG,GAAG;YACzC,MAAM,QAAQ,UAAU,UAAU,CAAC;YACnC,kBAAkB,OAAO,GAAG,MAAM,WAAW;QAC/C;IACF;IAEA,MAAM,aAAa;QACjB,OAAO;QACP,cAAc;IAChB;IAEA,qBACE,8OAAC;QAAI,WAAU;;YACZ,4BACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,sIAAA,CAAA,UAAU;oBAAC,SAAS,IAAM;;;;;;;;;;;0BAG/B,8OAAC;gBACC,KAAK;gBACL,WAAW,GAAG,UAAU,CAAC,EACvB,YAAY,uCAAuC,IACnD;gBACF,iBAAiB;gBACjB,QAAQ;gBACR,SAAS,IAAM,aAAa;gBAC5B,SAAS;gBACT,gCAAgC;0BAE/B;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/components/EditableStockData.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport {\n  Card,\n  CardDescription,\n  CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport type { StockData } from \"../../types/StockData\";\nimport { Check, Code, Copy, Link, Save, Share } from \"lucide-react\";\nimport { EditableText } from \"./editableTest\";\n\ninterface StockDataDisplayProps {\n  data: StockData;\n  id: string;\n}\n\ninterface Strength {\n  title: string;\n  description: string;\n}\n\nexport function StockDataDisplay({ data, id }: StockDataDisplayProps) {\n  const [cachedData, setCachedData] = useState<StockData | null>(null);\n  const [companyDescription, setCompanyDescription] = useState<string>(\"\");\n  const [imageSrc, setImageSrc] = useState<string>(\n    \"https://images.unsplash.com/photo-1456930266018-fda42f7404a7?q=80&w=1595&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n  );\n  const [imageSrc2, setImageSrc2] = useState<string>(\n    \"https://images.unsplash.com/photo-1456930266018-fda42f7404a7?q=80&w=1595&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n  );\n  const [keyMetrics, setKeyMetrics] = useState<\n    Array<{ label: string; value: string | number; description: string }>\n  >([]);\n  const [financialHealth, setFinancialHealth] = useState<\n    Array<{ label: string; value: string | number; description: string }>\n  >([]);\n  const [strengthsAndCatalysts, setStrengthsAndCatalysts] = useState<\n    Strength[]\n  >([]);\n  const [analystHealth, setAnalystHealth] = useState<\n    Array<{ label: string; value: string | number; description: string }>\n  >([]);\n  const [risksAndMitigations, setRisksAndMitigations] = useState<Strength[]>(\n    []\n  );\n  const [conclusion, setConclusion] = useState<string>(\"\");\n  const [loadingStates, setLoadingStates] = useState({\n    companyOverview: true,\n    keyMetrics: true,\n    financialHealth: true,\n    strengthsAndCatalysts: true,\n    analystHealth: true,\n    risksAndMitigations: true,\n    conclusion: true,\n  });\n\n  useEffect(() => {\n    if (!cachedData) {\n      setCachedData(data);\n    }\n  }, [data, cachedData]);\n\n  const fetchCompanyOverview = useCallback(async () => {\n    if (cachedData) {\n      try {\n        // const src = await getImage(cachedData.name);\n        // setImageSrc(src);\n      } catch {\n        setImageSrc(\n          \"https://images.unsplash.com/photo-1456930266018-fda42f7404a7?q=80&w=1595&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n        );\n      }\n      const desc = await dsc(\n        `Give ${cachedData.name} company's description in 50-70 words`\n      );\n      setCompanyDescription(desc);\n      setLoadingStates((prev) => ({ ...prev, companyOverview: false }));\n    }\n  }, [cachedData]);\n\n  const fetchKeyMetrics = useCallback(async () => {\n    if (cachedData) {\n      try {\n        const promptMap = new Map([\n          [\n            \"Market Cap\",\n            `Summarize _ market cap of ${cachedData.name} and how it benefits or disadvantaging the perception of the stock and don't specify the numbers (in less than 20 words).`,\n          ],\n          [\n            \"Shares Outstanding\",\n            `Summarize ${cachedData.name}'s shares outstanding value and why it's good or bad and don't specify the numbers(in less than 20 words).`,\n          ],\n          [\n            \"Shares Float\",\n            `Summarize ${cachedData.name} stock's shares float value and why it's good or bad compared to _ peer group and don't specify the numbers (in less than 20 words).`,\n          ],\n          [\n            \"EV/EBITDA\",\n            `Summarize if ${cachedData.name} EV/EBITDA ratio is high or low. Discuss the implications of this and don't specify the numbers (in less than 20 words) `,\n          ],\n          [\n            \"P/E\",\n            `Summarize ${cachedData.name} P/E value and how it compares to ${cachedData.name} peer group and don't specify the numbers. (in less than 20 words) `,\n          ],\n          [\n            \"Dividend Rate\",\n            `Summarize ${cachedData.name} Dividend Yield and how it compares to ${cachedData.name} peer group and don't specify the numbers. (in less than 20 words)`,\n          ],\n        ]);\n\n        const metricsData = [\n          { label: \"Market Cap\", value: \"$\" + cachedData.marketCap },\n          {\n            label: \"Shares Outstanding\",\n            value: \"$\" + cachedData.sharesOutstanding,\n          },\n          { label: \"Shares Float\", value: \"$\" + cachedData.float },\n          { label: \"EV/EBITDA\", value: cachedData.evEbitda + \"x\" },\n          { label: \"P/E\", value: cachedData.peTtm + \"x\" },\n          { label: \"Dividend Rate\", value: cachedData.dividendRate + \"x\" },\n        ];\n\n        const metricsWithDescriptions = await Promise.all(\n          metricsData.map(async (metric) => ({\n            ...metric,\n            description: await dsc(promptMap.get(metric.label) || \"\"),\n          }))\n        );\n\n        setKeyMetrics(metricsWithDescriptions);\n      } catch (error) {\n        console.error(\"Error fetching key metrics:\", error);\n        setKeyMetrics([]);\n      } finally {\n        setLoadingStates((prev) => ({ ...prev, keyMetrics: false }));\n      }\n    }\n  }, [cachedData]);\n\n  const fetchFinancialHealth = useCallback(async () => {\n    if (cachedData) {\n      const financialsData = [\n        { label: \"Cash Position\", value: \"$\" + cachedData.cashPosition },\n        { label: \"Total Debt\", value: \"$\" + cachedData.totalDebt },\n        { label: \"Debt to Equity\", value: cachedData.debtToEquity + \"x\" },\n        { label: \"Current Ratio\", value: cachedData.currentRatio + \"x\" },\n      ];\n\n      const financialsWithDescriptions = await Promise.all(\n        financialsData.map(async (item) => ({\n          ...item,\n          description: await dsc(\n            `summary of ${item.label} of ${cachedData.name} in 20-30 words without the numbers`\n          ),\n        }))\n      );\n\n      setFinancialHealth(financialsWithDescriptions);\n      setLoadingStates((prev) => ({ ...prev, financialHealth: false }));\n    }\n  }, [cachedData]);\n\n  const fetchStrengthsAndCatalysts = useCallback(async () => {\n    if (cachedData) {\n      const strengthsData = await dsc(\n        `Give me growth catalysts of ${cachedData.name} stock, give me 6 points,with headings, and description not more than 40 words`\n      );\n      console.log(strengthsData);\n      setStrengthsAndCatalysts(parsePoints(strengthsData));\n      setLoadingStates((prev) => ({ ...prev, strengthsAndCatalysts: false }));\n    }\n  }, [cachedData]);\n\n  const fetchAnalystHealth = useCallback(async () => {\n    if (cachedData) {\n      const analystInfo = [\n        { label: \"Analyst Rating (1-5)\", value: cachedData.analystRating },\n        { label: \"Number of Analysts\", value: cachedData.numberOfAnalysts },\n        { label: \"Mean Target Price\", value: \"$\" + cachedData.meanTargetPrice },\n        { label: \"Implied +/-\", value: cachedData.impliedChange },\n      ];\n\n      const analystDataWithDescriptions = await Promise.all(\n        analystInfo.map(async (item) => ({\n          ...item,\n          description: await dsc(\n            `summary of ${item.label} of ${cachedData.name} in 20-30 words without the numbers`\n          ),\n        }))\n      );\n\n      setAnalystHealth(analystDataWithDescriptions);\n      setLoadingStates((prev) => ({ ...prev, analystHealth: false }));\n    }\n  }, [cachedData]);\n\n  const fetchRisksAndMitigations = useCallback(async () => {\n    if (cachedData) {\n      const risksData = await dsc(\n        `Give me 6 Risks with explanation and also their mitigations respectively of ${cachedData.name} stock with headings and description of not more than 20 words for each`\n      );\n      console.log(risksData);\n      setRisksAndMitigations(parseRisksAndMitigations(risksData));\n      setLoadingStates((prev) => ({ ...prev, risksAndMitigations: false }));\n    }\n  }, [cachedData]);\n\n  const fetchConclusion = useCallback(async () => {\n    if (cachedData) {\n      const conclusionData = await dsc(\n        `With this info ${JSON.stringify(\n          cachedData\n        )} give a 70-100 words conclusion which include should we buy it or not?.`\n      );\n\n      // const image = await getImage(data.name + \"Conclusion\");\n      // setImageSrc2(image);\n      setConclusion(conclusionData);\n      setLoadingStates((prev) => ({ ...prev, conclusion: false }));\n    }\n  }, [cachedData]);\n\n  useEffect(() => {\n    if (cachedData) {\n      fetchCompanyOverview();\n      fetchKeyMetrics();\n      fetchFinancialHealth();\n      fetchStrengthsAndCatalysts();\n      fetchAnalystHealth();\n      fetchRisksAndMitigations();\n      fetchConclusion();\n    }\n  }, [\n    cachedData,\n    fetchCompanyOverview,\n    fetchKeyMetrics,\n    fetchFinancialHealth,\n    fetchStrengthsAndCatalysts,\n    fetchAnalystHealth,\n    fetchRisksAndMitigations,\n    fetchConclusion,\n  ]);\n\n  if (!cachedData) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"m-0 p-0\">\n      <ShareButton id={id} />\n      <div className=\"h-full flex flex-col gap-10 p-10 items-center justify-center bg-slate-900\">\n        {loadingStates.companyOverview ? (\n          <LoadingCard />\n        ) : (\n          <CompanyOverview\n            name={cachedData.name}\n            description={companyDescription}\n            imageSrc={imageSrc}\n          />\n        )}\n        {loadingStates.keyMetrics ? (\n          <LoadingCard />\n        ) : (\n          <KeyMetrics metrics={keyMetrics} />\n        )}\n        {loadingStates.financialHealth ? (\n          <LoadingCard />\n        ) : (\n          <FinancialHealth financials={financialHealth} />\n        )}\n        {loadingStates.strengthsAndCatalysts ? (\n          <LoadingCard />\n        ) : (\n          <StrengthsAndCatalysts strengths={strengthsAndCatalysts} />\n        )}\n        {loadingStates.analystHealth ? (\n          <LoadingCard />\n        ) : (\n          <AnalystHealth analystData={analystHealth} />\n        )}\n        {loadingStates.risksAndMitigations ? (\n          <LoadingCard />\n        ) : (\n          <RisksAnalysis points={risksAndMitigations} />\n        )}\n        {loadingStates.conclusion ? (\n          <LoadingCard />\n        ) : (\n          <Conclusion description={conclusion} imageSrc={imageSrc2} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction CompanyOverview({\n  name,\n  description,\n  imageSrc,\n}: {\n  name: string;\n  description: string;\n  imageSrc: string;\n}) {\n  return (\n    <Card className=\"flex w-[80vw] h-[75vh] bg-zinc-900 shadow-2xl shadow-cyan-400 text-white border-0\">\n      <CardHeader className=\"flex-1 p-16 justify-center\">\n        <CardTitle className=\"barlow-bolds text-5xl pb-3 font-bold text-white bg-gradient-to-r from-purple-400 via-blue-500 to-indigo-400 inline-block text-transparent bg-clip-text\">\n          {name}\n        </CardTitle>\n        <EditableText\n          initialText={description}\n          onSave={(newText) => saveEditedContent(\"companyDescription\", newText)}\n          className=\"montserrat text-xl text-white\"\n        />\n      </CardHeader>\n      <CardHeader className=\"w-5/12 p-0 relative overflow-hidden items-center justify-center\">\n        <CardDescription className=\"text-center overflow-hidden h-full w-full text-gray-400\">\n          <img\n            className=\"object-cover w-full h-full rounded-r-lg\"\n            src={imageSrc || \"/placeholder.svg\"}\n            alt={`${name} visual representation`}\n          />\n        </CardDescription>\n      </CardHeader>\n    </Card>\n  );\n}\n\nfunction KeyMetrics({\n  metrics,\n}: {\n  metrics: Array<{\n    label: string;\n    value: string | number;\n    description: string;\n  }>;\n}) {\n  return (\n    <Card className=\"flex w-[80vw] h-[75vh] pt-8 pb-8 bg-zinc-900 shadow-2xl shadow-cyan-400 text-gray-100 border-0 overflow-hidden\">\n      <CardHeader className=\"flex-1 p-16 items-center justify-center\">\n        <CardTitle className=\"barlow-bold text-3xl font-bold text-white bg-gradient-to-r from-purple-400 via-blue-500 to-indigo-400 inline-block text-transparent bg-clip-text\">\n          Key Market Metrics: Reflecting Value and Potential\n        </CardTitle>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {metrics.map((metric) => (\n            <div\n              key={metric.label}\n              className=\"montserrat p-6 bg-gray-800 rounded-md text-center\"\n            >\n              <h3 className=\"text-xl font-bold\">{metric.value}</h3>\n              <p className=\"text-base font-semibold mt-2\">{metric.label}</p>\n              <EditableText\n                initialText={metric.description}\n                onSave={(newText) =>\n                  saveEditedContent(`keyMetrics-${metric.label}`, newText)\n                }\n                className=\"text-xs mt-2 text-gray-400\"\n              />\n            </div>\n          ))}\n        </div>\n      </CardHeader>\n    </Card>\n  );\n}\n\nfunction FinancialHealth({\n  financials,\n}: {\n  financials: Array<{\n    label: string;\n    value: string | number;\n    description: string;\n  }>;\n}) {\n  return (\n    <Card className=\"flex w-[80vw] h-[75vh] bg-zinc-900 shadow-2xl shadow-cyan-400 text-gray-100 border-0\">\n      <CardHeader className=\"flex-1 p-16 items-center justify-center\">\n        <CardTitle className=\"barlow-bold text-3xl font-bold pb-6 text-white bg-gradient-to-r from-purple-400 via-blue-500 to-indigo-400 inline-block text-transparent bg-clip-text\">\n          Financial Health\n        </CardTitle>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {financials.map((item) => (\n            <div\n              key={item.label}\n              className=\"montserrat p-6 bg-gray-800 rounded-md text-center\"\n            >\n              <h3 className=\"text-xl font-bold\">{item.value}</h3>\n              <p className=\"text-base font-semibold mt-2\">{item.label}</p>\n              <EditableText\n                initialText={item.description}\n                onSave={(newText) =>\n                  saveEditedContent(`financialHealth-${item.label}`, newText)\n                }\n                className=\"text-xs mt-2 text-gray-400\"\n              />\n            </div>\n          ))}\n        </div>\n      </CardHeader>\n    </Card>\n  );\n}\n\nfunction StrengthsAndCatalysts({ strengths }: { strengths: Strength[] }) {\n  return (\n    <Card className=\"flex flex-col w-[80vw] overflow-hidden h-[75vh] bg-zinc-900 shadow-2xl shadow-cyan-400 text-gray-100 border-0\">\n      <CardHeader className=\"flex-1 items-center justify-center\">\n        <CardTitle className=\"barlow-bold text-3xl font-bold text-white bg-gradient-to-r from-purple-400 via-blue-500 to-indigo-400 inline-block text-transparent bg-clip-text\">\n          Strengths and Catalysts for Continued Success\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {strengths.map((strength, index) => (\n            <Card\n              key={index}\n              className=\"montserrat bg-gray-800 border-0 rounded-lg pt-6 shadow-md\"\n            >\n              <CardContent className=\"flex gap-9 items-start space-x-3\">\n                <div>\n                  <div className=\"w-[4px] h-[15px] mt-1.5 absolute bg-purple-400 rounded-full \"></div>\n                  <CardTitle className=\"text-lg pl-3 font-semibold text-white\">\n                    <EditableText\n                      initialText={strength.title}\n                      onSave={(newText) =>\n                        saveEditedContent(\n                          `strengthsAndCatalysts-title-${index}`,\n                          newText\n                        )\n                      }\n                      className=\"text-lg font-semibold text-white\"\n                    />\n                  </CardTitle>\n                  <EditableText\n                    initialText={strength.description}\n                    onSave={(newText) =>\n                      saveEditedContent(\n                        `strengthsAndCatalysts-description-${index}`,\n                        newText\n                      )\n                    }\n                    className=\"text-sm text-gray-300 mt-2\"\n                  />\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction AnalystHealth({\n  analystData,\n}: {\n  analystData: Array<{\n    label: string;\n    value: string | number;\n    description: string;\n  }>;\n}) {\n  return (\n    <Card className=\"flex w-[80vw] h-[75vh] bg-zinc-900 shadow-2xl shadow-cyan-400 text-gray-100 border-0\">\n      <CardHeader className=\"flex-1 p-16 items-center justify-center\">\n        <CardTitle className=\"barlow-bold text-3xl pb-6 font-bold text-white bg-gradient-to-r from-purple-400 via-blue-500 to-indigo-400 inline-block text-transparent bg-clip-text\">\n          Analyst Health\n        </CardTitle>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {analystData.map((item) => (\n            <div\n              key={item.label}\n              className=\"montserrat p-6 bg-gray-800 rounded-md text-center\"\n            >\n              <h3 className=\"text-xl font-bold\">{item.value}</h3>\n              <p className=\"text-base font-semibold mt-2\">{item.label}</p>\n              <EditableText\n                initialText={item.description}\n                onSave={(newText) =>\n                  saveEditedContent(`analystHealth-${item.label}`, newText)\n                }\n                className=\"text-xs mt-2 text-gray-400\"\n              />\n            </div>\n          ))}\n        </div>\n      </CardHeader>\n    </Card>\n  );\n}\n\nfunction RisksAnalysis({ points }: { points: Strength[] }) {\n  return (\n    <Card className=\"flex flex-col w-[80vw] h-[75vh] bg-zinc-900 shadow-2xl shadow-cyan-400 text-gray-100 border-0 overflow-hidden\">\n      <CardHeader className=\"flex-1 p-3 items-center justify-center\">\n        <CardTitle className=\"barlow-bold text-3xl font-bold text-white bg-gradient-to-r from-purple-400 via-blue-500 to-indigo-400 inline-block text-transparent bg-clip-text\">\n          Risks and Mitigations\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 pb-6\">\n          {points.map((point, index) => (\n            <Card\n              key={index}\n              className=\"montserrat bg-gray-800 border-0 rounded-lg pt-6 shadow-md\"\n            >\n              <CardContent className=\"flex items-start space-x-3\">\n                <div>\n                  <div className=\"w-[4px] h-[15px] mt-1.5 absolute bg-purple-400 rounded-full \"></div>\n                  <CardTitle className=\"flex pl-3 gap-2 text-lg font-semibold text-white\">\n                    <EditableText\n                      initialText={point.title}\n                      onSave={(newText) =>\n                        saveEditedContent(\n                          `risksAndMitigations-title-${index}`,\n                          newText\n                        )\n                      }\n                      className=\"text-lg font-semibold text-white\"\n                    />\n                  </CardTitle>\n                  <EditableText\n                    initialText={point.description}\n                    onSave={(newText) =>\n                      saveEditedContent(\n                        `risksAndMitigations-description-${index}`,\n                        newText\n                      )\n                    }\n                    className=\"text-sm text-gray-300 mt-2\"\n                  />\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction Conclusion({\n  description,\n  imageSrc,\n}: {\n  description: string;\n  imageSrc: string;\n}) {\n  return (\n    <Card className=\"flex w-[80vw] h-[75vh] bg-zinc-900 shadow-2xl shadow-cyan-400 text-gray-100 border-0\">\n      <CardHeader className=\"w-1/3 p-0 relative overflow-hidden items-center justify-center\">\n        <CardDescription className=\"text-center overflow-hidden h-full w-full text-gray-400\">\n          <img\n            className=\"object-cover h-full rounded-l-lg\"\n            src={imageSrc || \"/placeholder.svg\"}\n            alt={`${name} visual representation`}\n          />\n        </CardDescription>\n      </CardHeader>\n      <CardHeader className=\"flex-1 p-16 items-center justify-center\">\n        <CardTitle className=\"barlow-bold text-right text-4xl pb-3 font-bold text-white bg-gradient-to-r from-purple-400 via-blue-500 to-indigo-400 inline-block text-transparent bg-clip-text\">\n          Conclusion\n        </CardTitle>\n        <EditableText\n          initialText={description}\n          onSave={(newText) => saveEditedContent(\"conclusion\", newText)}\n          className=\"montserrat text-xl text-center text-gray-400\"\n        />\n      </CardHeader>\n    </Card>\n  );\n}\n\n// async function getImage(_name: string) {\n//   const data = { stockName: _name };\n//   const res = await fetch(\"/api/image\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(data),\n//   });\n//   const response = await res.json();\n//   return response.imageUrl;\n// }\n\nasync function dsc(_prompt: string) {\n  const data = { prompt: _prompt };\n  const res = await fetch(\"/api/prompt\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n  const response = await res.text();\n  const obj = JSON.parse(response);\n  return obj.response;\n}\n\nfunction parsePoints(text: string): Strength[] {\n  const strengths: Strength[] = [];\n  const parts = text.split(/\\d+\\./).slice(1);\n\n  for (const part of parts) {\n    const [title, ...descriptionParts] = part.split(\":\");\n    const description = descriptionParts.join(\":\").trim();\n    if (title && description) {\n      strengths.push({\n        title: title.trim(),\n        description: description.replace(/\\.$/, \"\"),\n      });\n    }\n  }\n\n  return strengths;\n}\n\nfunction parseRisksAndMitigations(text: string): Strength[] {\n  const risks: Strength[] = [];\n  const parts = text.split(/\\d+\\./).slice(1);\n\n  for (const part of parts) {\n    const [title, ...descriptionParts] = part.split(\":\");\n    const fullDescription = descriptionParts.join(\":\").trim();\n    const [risk, mitigation] = fullDescription.split(\"Mitigation:\");\n\n    if (title && risk) {\n      risks.push({\n        title: title.trim(),\n        description: `${risk.trim()}\\nMitigation:${\n          mitigation ? mitigation.trim() : \"Not provided\"\n        }`,\n      });\n    }\n  }\n\n  return risks;\n}\n\nfunction LoadingCard() {\n  return (\n    <Card className=\"flex w-[80vw] h-[75vh] bg-zinc-900 shadow-2xl shadow-cyan-400 text-gray-100 border-0 items-center justify-center\">\n      <CardContent>\n        <div className=\"w-16 h-16 border-t-4 border-blue-500 border-solid rounded-full animate-spin\"></div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function ShareButton({ id }: { id: string }) {\n  const [isToastVisible, setIsToastVisible] = useState(false);\n\n  const toggleToast = () => {\n    setIsToastVisible(!isToastVisible);\n  };\n\n  return (\n    <div className=\"fixed top-5 right-5 z-50\">\n      <button\n        className=\"text-white transition-all duration-300 hover:scale-110 active:scale-90 bg-black p-4 rounded-full shadow-md shadow-cyan-400\"\n        onClick={toggleToast}\n        aria-label=\"Share\"\n      >\n        <Share className=\"text-white w-6 h-6\" />\n      </button>\n      {isToastVisible && (\n        <Toast\n          viewLink={`https://stock-gen.vercel.app/viewOnlyPpt/${id}`}\n          editableLink={`https://stock-gen.vercel.app/pptDisplay/${id}`}\n        />\n      )}\n    </div>\n  );\n}\n\nexport function Toast({\n  viewLink,\n  editableLink,\n}: {\n  viewLink: string;\n  editableLink: string;\n}) {\n  const [viewCopied, setViewCopied] = useState(false);\n  const [editableCopied, setEditableCopied] = useState(false);\n  const viewLinkRef = useRef<HTMLParagraphElement>(null);\n  const editableLinkRef = useRef<HTMLParagraphElement>(null);\n\n  const copyToClipboard = async (\n    text: string,\n    setCopied: React.Dispatch<React.SetStateAction<boolean>>\n  ) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (err) {\n      console.error(\"Failed to copy text: \", err);\n    }\n  };\n\n  return (\n    <div className=\"z-[100] absolute top-16 right-0 bg-slate-800 text-white p-4 rounded-lg shadow-lg w-72\">\n      <h3 className=\"text-2xl font-semibold mb-3\">Share Links</h3>\n      <div className=\"space-y-3\">\n        <div>Viewable Only:</div>\n        <div className=\"flex items-center justify-between bg-slate-700 rounded p-2\">\n          <div className=\"flex items-center space-x-2 flex-1 min-w-0\">\n            <Link className=\"w-4 h-4 flex-shrink-0\" />\n            <p ref={viewLinkRef} className=\"truncate text-sm\">\n              {viewLink}\n            </p>\n          </div>\n          <button\n            onClick={() => copyToClipboard(viewLink, setViewCopied)}\n            className=\"ml-2 p-1 hover:bg-slate-600 rounded transition-colors duration-200\"\n            aria-label=\"Copy view link\"\n          >\n            {viewCopied ? (\n              <Check className=\"w-4 h-4 text-green-400\" />\n            ) : (\n              <Copy className=\"w-4 h-4\" />\n            )}\n          </button>\n        </div>\n        <div>Editable:</div>\n        <div className=\"flex items-center justify-between bg-slate-700 rounded p-2\">\n          <div className=\"flex items-center space-x-2 flex-1 min-w-0\">\n            <Code className=\"w-4 h-4 flex-shrink-0\" />\n            <p ref={editableLinkRef} className=\"truncate text-sm\">\n              {editableLink}\n            </p>\n          </div>\n          <button\n            onClick={() => copyToClipboard(editableLink, setEditableCopied)}\n            className=\"ml-2 p-1 hover:bg-slate-600 rounded transition-colors duration-200\"\n            aria-label=\"Copy editable link\"\n          >\n            {editableCopied ? (\n              <Check className=\"w-4 h-4 text-green-400\" />\n            ) : (\n              <Copy className=\"w-4 h-4\" />\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nasync function saveEditedContent(section: string, content: string) {\n  try {\n    const response = await fetch(\"/api/update-stock-data\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ section, content }),\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to save content\");\n    }\n    console.log(`${section} updated successfully`);\n  } catch (error) {\n    console.error(\"Error saving content:\", error);\n  }\n}\n"],"names":[],"mappings":";;;;;;AACA;AACA;AASA;AADA;AAAA;AAAA;AAAA;AAAA;AAVA;;;;;;AAuBO,SAAS,iBAAiB,EAAE,IAAI,EAAE,EAAE,EAAyB;IAClE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IAC/D,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACrE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EACrC;IAEF,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EACvC;IAEF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAEzC,EAAE;IACJ,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAEnD,EAAE;IACJ,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAE/D,EAAE;IACJ,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAE/C,EAAE;IACJ,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAC3D,EAAE;IAEJ,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACrD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACjD,iBAAiB;QACjB,YAAY;QACZ,iBAAiB;QACjB,uBAAuB;QACvB,eAAe;QACf,qBAAqB;QACrB,YAAY;IACd;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,YAAY;YACf,cAAc;QAChB;IACF,GAAG;QAAC;QAAM;KAAW;IAErB,MAAM,uBAAuB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACvC,IAAI,YAAY;YACd,IAAI;YACF,+CAA+C;YAC/C,oBAAoB;YACtB,EAAE,OAAM;gBACN,YACE;YAEJ;YACA,MAAM,OAAO,MAAM,IACjB,CAAC,KAAK,EAAE,WAAW,IAAI,CAAC,qCAAqC,CAAC;YAEhE,sBAAsB;YACtB,iBAAiB,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,iBAAiB;gBAAM,CAAC;QACjE;IACF,GAAG;QAAC;KAAW;IAEf,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAClC,IAAI,YAAY;YACd,IAAI;gBACF,MAAM,YAAY,IAAI,IAAI;oBACxB;wBACE;wBACA,CAAC,0BAA0B,EAAE,WAAW,IAAI,CAAC,yHAAyH,CAAC;qBACxK;oBACD;wBACE;wBACA,CAAC,UAAU,EAAE,WAAW,IAAI,CAAC,0GAA0G,CAAC;qBACzI;oBACD;wBACE;wBACA,CAAC,UAAU,EAAE,WAAW,IAAI,CAAC,oIAAoI,CAAC;qBACnK;oBACD;wBACE;wBACA,CAAC,aAAa,EAAE,WAAW,IAAI,CAAC,wHAAwH,CAAC;qBAC1J;oBACD;wBACE;wBACA,CAAC,UAAU,EAAE,WAAW,IAAI,CAAC,kCAAkC,EAAE,WAAW,IAAI,CAAC,mEAAmE,CAAC;qBACtJ;oBACD;wBACE;wBACA,CAAC,UAAU,EAAE,WAAW,IAAI,CAAC,uCAAuC,EAAE,WAAW,IAAI,CAAC,kEAAkE,CAAC;qBAC1J;iBACF;gBAED,MAAM,cAAc;oBAClB;wBAAE,OAAO;wBAAc,OAAO,MAAM,WAAW,SAAS;oBAAC;oBACzD;wBACE,OAAO;wBACP,OAAO,MAAM,WAAW,iBAAiB;oBAC3C;oBACA;wBAAE,OAAO;wBAAgB,OAAO,MAAM,WAAW,KAAK;oBAAC;oBACvD;wBAAE,OAAO;wBAAa,OAAO,WAAW,QAAQ,GAAG;oBAAI;oBACvD;wBAAE,OAAO;wBAAO,OAAO,WAAW,KAAK,GAAG;oBAAI;oBAC9C;wBAAE,OAAO;wBAAiB,OAAO,WAAW,YAAY,GAAG;oBAAI;iBAChE;gBAED,MAAM,0BAA0B,MAAM,QAAQ,GAAG,CAC/C,YAAY,GAAG,CAAC,OAAO,SAAW,CAAC;wBACjC,GAAG,MAAM;wBACT,aAAa,MAAM,IAAI,UAAU,GAAG,CAAC,OAAO,KAAK,KAAK;oBACxD,CAAC;gBAGH,cAAc;YAChB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,+BAA+B;gBAC7C,cAAc,EAAE;YAClB,SAAU;gBACR,iBAAiB,CAAC,OAAS,CAAC;wBAAE,GAAG,IAAI;wBAAE,YAAY;oBAAM,CAAC;YAC5D;QACF;IACF,GAAG;QAAC;KAAW;IAEf,MAAM,uBAAuB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACvC,IAAI,YAAY;YACd,MAAM,iBAAiB;gBACrB;oBAAE,OAAO;oBAAiB,OAAO,MAAM,WAAW,YAAY;gBAAC;gBAC/D;oBAAE,OAAO;oBAAc,OAAO,MAAM,WAAW,SAAS;gBAAC;gBACzD;oBAAE,OAAO;oBAAkB,OAAO,WAAW,YAAY,GAAG;gBAAI;gBAChE;oBAAE,OAAO;oBAAiB,OAAO,WAAW,YAAY,GAAG;gBAAI;aAChE;YAED,MAAM,6BAA6B,MAAM,QAAQ,GAAG,CAClD,eAAe,GAAG,CAAC,OAAO,OAAS,CAAC;oBAClC,GAAG,IAAI;oBACP,aAAa,MAAM,IACjB,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,IAAI,EAAE,WAAW,IAAI,CAAC,mCAAmC,CAAC;gBAEvF,CAAC;YAGH,mBAAmB;YACnB,iBAAiB,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,iBAAiB;gBAAM,CAAC;QACjE;IACF,GAAG;QAAC;KAAW;IAEf,MAAM,6BAA6B,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC7C,IAAI,YAAY;YACd,MAAM,gBAAgB,MAAM,IAC1B,CAAC,4BAA4B,EAAE,WAAW,IAAI,CAAC,8EAA8E,CAAC;YAEhI,QAAQ,GAAG,CAAC;YACZ,yBAAyB,YAAY;YACrC,iBAAiB,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,uBAAuB;gBAAM,CAAC;QACvE;IACF,GAAG;QAAC;KAAW;IAEf,MAAM,qBAAqB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACrC,IAAI,YAAY;YACd,MAAM,cAAc;gBAClB;oBAAE,OAAO;oBAAwB,OAAO,WAAW,aAAa;gBAAC;gBACjE;oBAAE,OAAO;oBAAsB,OAAO,WAAW,gBAAgB;gBAAC;gBAClE;oBAAE,OAAO;oBAAqB,OAAO,MAAM,WAAW,eAAe;gBAAC;gBACtE;oBAAE,OAAO;oBAAe,OAAO,WAAW,aAAa;gBAAC;aACzD;YAED,MAAM,8BAA8B,MAAM,QAAQ,GAAG,CACnD,YAAY,GAAG,CAAC,OAAO,OAAS,CAAC;oBAC/B,GAAG,IAAI;oBACP,aAAa,MAAM,IACjB,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,IAAI,EAAE,WAAW,IAAI,CAAC,mCAAmC,CAAC;gBAEvF,CAAC;YAGH,iBAAiB;YACjB,iBAAiB,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,eAAe;gBAAM,CAAC;QAC/D;IACF,GAAG;QAAC;KAAW;IAEf,MAAM,2BAA2B,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC3C,IAAI,YAAY;YACd,MAAM,YAAY,MAAM,IACtB,CAAC,4EAA4E,EAAE,WAAW,IAAI,CAAC,uEAAuE,CAAC;YAEzK,QAAQ,GAAG,CAAC;YACZ,uBAAuB,yBAAyB;YAChD,iBAAiB,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,qBAAqB;gBAAM,CAAC;QACrE;IACF,GAAG;QAAC;KAAW;IAEf,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAClC,IAAI,YAAY;YACd,MAAM,iBAAiB,MAAM,IAC3B,CAAC,eAAe,EAAE,KAAK,SAAS,CAC9B,YACA,uEAAuE,CAAC;YAG5E,0DAA0D;YAC1D,uBAAuB;YACvB,cAAc;YACd,iBAAiB,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,YAAY;gBAAM,CAAC;QAC5D;IACF,GAAG;QAAC;KAAW;IAEf,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,YAAY;YACd;YACA;YACA;YACA;YACA;YACA;YACA;QACF;IACF,GAAG;QACD;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,IAAI,CAAC,YAAY;QACf,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAY,IAAI;;;;;;0BACjB,8OAAC;gBAAI,WAAU;;oBACZ,cAAc,eAAe,iBAC5B,8OAAC;;;;6CAED,8OAAC;wBACC,MAAM,WAAW,IAAI;wBACrB,aAAa;wBACb,UAAU;;;;;;oBAGb,cAAc,UAAU,iBACvB,8OAAC;;;;6CAED,8OAAC;wBAAW,SAAS;;;;;;oBAEtB,cAAc,eAAe,iBAC5B,8OAAC;;;;6CAED,8OAAC;wBAAgB,YAAY;;;;;;oBAE9B,cAAc,qBAAqB,iBAClC,8OAAC;;;;6CAED,8OAAC;wBAAsB,WAAW;;;;;;oBAEnC,cAAc,aAAa,iBAC1B,8OAAC;;;;6CAED,8OAAC;wBAAc,aAAa;;;;;;oBAE7B,cAAc,mBAAmB,iBAChC,8OAAC;;;;6CAED,8OAAC;wBAAc,QAAQ;;;;;;oBAExB,cAAc,UAAU,iBACvB,8OAAC;;;;6CAED,8OAAC;wBAAW,aAAa;wBAAY,UAAU;;;;;;;;;;;;;;;;;;AAKzD;AAEA,SAAS,gBAAgB,EACvB,MAAA,KAAI,EACJ,WAAW,EACX,QAAQ,EAKT;IACC,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAClB;;;;;;kCAEH,8OAAC,kIAAA,CAAA,eAAY;wBACX,aAAa;wBACb,QAAQ,CAAC,UAAY,kBAAkB,sBAAsB;wBAC7D,WAAU;;;;;;;;;;;;0BAGd,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,8OAAC,gIAAA,CAAA,kBAAe;oBAAC,WAAU;8BACzB,cAAA,8OAAC;wBACC,WAAU;wBACV,KAAK,YAAY;wBACjB,KAAK,GAAG,MAAK,sBAAsB,CAAC;;;;;;;;;;;;;;;;;;;;;;AAMhD;AAEA,SAAS,WAAW,EAClB,OAAO,EAOR;IACC,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;kBACd,cAAA,8OAAC,gIAAA,CAAA,aAAU;YAAC,WAAU;;8BACpB,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;8BAAmJ;;;;;;8BAGxK,8OAAC;oBAAI,WAAU;8BACZ,QAAQ,GAAG,CAAC,CAAC,uBACZ,8OAAC;4BAEC,WAAU;;8CAEV,8OAAC;oCAAG,WAAU;8CAAqB,OAAO,KAAK;;;;;;8CAC/C,8OAAC;oCAAE,WAAU;8CAAgC,OAAO,KAAK;;;;;;8CACzD,8OAAC,kIAAA,CAAA,eAAY;oCACX,aAAa,OAAO,WAAW;oCAC/B,QAAQ,CAAC,UACP,kBAAkB,CAAC,WAAW,EAAE,OAAO,KAAK,EAAE,EAAE;oCAElD,WAAU;;;;;;;2BAVP,OAAO,KAAK;;;;;;;;;;;;;;;;;;;;;AAkB/B;AAEA,SAAS,gBAAgB,EACvB,UAAU,EAOX;IACC,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;kBACd,cAAA,8OAAC,gIAAA,CAAA,aAAU;YAAC,WAAU;;8BACpB,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;8BAAwJ;;;;;;8BAG7K,8OAAC;oBAAI,WAAU;8BACZ,WAAW,GAAG,CAAC,CAAC,qBACf,8OAAC;4BAEC,WAAU;;8CAEV,8OAAC;oCAAG,WAAU;8CAAqB,KAAK,KAAK;;;;;;8CAC7C,8OAAC;oCAAE,WAAU;8CAAgC,KAAK,KAAK;;;;;;8CACvD,8OAAC,kIAAA,CAAA,eAAY;oCACX,aAAa,KAAK,WAAW;oCAC7B,QAAQ,CAAC,UACP,kBAAkB,CAAC,gBAAgB,EAAE,KAAK,KAAK,EAAE,EAAE;oCAErD,WAAU;;;;;;;2BAVP,KAAK,KAAK;;;;;;;;;;;;;;;;;;;;;AAkB7B;AAEA,SAAS,sBAAsB,EAAE,SAAS,EAA6B;IACrE,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;8BAAmJ;;;;;;;;;;;0BAI1K,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC;oBAAI,WAAU;8BACZ,UAAU,GAAG,CAAC,CAAC,UAAU,sBACxB,8OAAC,gIAAA,CAAA,OAAI;4BAEH,WAAU;sCAEV,cAAA,8OAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;0CACrB,cAAA,8OAAC;;sDACC,8OAAC;4CAAI,WAAU;;;;;;sDACf,8OAAC,gIAAA,CAAA,YAAS;4CAAC,WAAU;sDACnB,cAAA,8OAAC,kIAAA,CAAA,eAAY;gDACX,aAAa,SAAS,KAAK;gDAC3B,QAAQ,CAAC,UACP,kBACE,CAAC,4BAA4B,EAAE,OAAO,EACtC;gDAGJ,WAAU;;;;;;;;;;;sDAGd,8OAAC,kIAAA,CAAA,eAAY;4CACX,aAAa,SAAS,WAAW;4CACjC,QAAQ,CAAC,UACP,kBACE,CAAC,kCAAkC,EAAE,OAAO,EAC5C;4CAGJ,WAAU;;;;;;;;;;;;;;;;;2BA1BX;;;;;;;;;;;;;;;;;;;;;AAoCnB;AAEA,SAAS,cAAc,EACrB,WAAW,EAOZ;IACC,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;kBACd,cAAA,8OAAC,gIAAA,CAAA,aAAU;YAAC,WAAU;;8BACpB,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;8BAAwJ;;;;;;8BAG7K,8OAAC;oBAAI,WAAU;8BACZ,YAAY,GAAG,CAAC,CAAC,qBAChB,8OAAC;4BAEC,WAAU;;8CAEV,8OAAC;oCAAG,WAAU;8CAAqB,KAAK,KAAK;;;;;;8CAC7C,8OAAC;oCAAE,WAAU;8CAAgC,KAAK,KAAK;;;;;;8CACvD,8OAAC,kIAAA,CAAA,eAAY;oCACX,aAAa,KAAK,WAAW;oCAC7B,QAAQ,CAAC,UACP,kBAAkB,CAAC,cAAc,EAAE,KAAK,KAAK,EAAE,EAAE;oCAEnD,WAAU;;;;;;;2BAVP,KAAK,KAAK;;;;;;;;;;;;;;;;;;;;;AAkB7B;AAEA,SAAS,cAAc,EAAE,MAAM,EAA0B;IACvD,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;8BAAmJ;;;;;;;;;;;0BAI1K,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC;oBAAI,WAAU;8BACZ,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,8OAAC,gIAAA,CAAA,OAAI;4BAEH,WAAU;sCAEV,cAAA,8OAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;0CACrB,cAAA,8OAAC;;sDACC,8OAAC;4CAAI,WAAU;;;;;;sDACf,8OAAC,gIAAA,CAAA,YAAS;4CAAC,WAAU;sDACnB,cAAA,8OAAC,kIAAA,CAAA,eAAY;gDACX,aAAa,MAAM,KAAK;gDACxB,QAAQ,CAAC,UACP,kBACE,CAAC,0BAA0B,EAAE,OAAO,EACpC;gDAGJ,WAAU;;;;;;;;;;;sDAGd,8OAAC,kIAAA,CAAA,eAAY;4CACX,aAAa,MAAM,WAAW;4CAC9B,QAAQ,CAAC,UACP,kBACE,CAAC,gCAAgC,EAAE,OAAO,EAC1C;4CAGJ,WAAU;;;;;;;;;;;;;;;;;2BA1BX;;;;;;;;;;;;;;;;;;;;;AAoCnB;AAEA,SAAS,WAAW,EAClB,WAAW,EACX,QAAQ,EAIT;IACC,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,8OAAC,gIAAA,CAAA,kBAAe;oBAAC,WAAU;8BACzB,cAAA,8OAAC;wBACC,WAAU;wBACV,KAAK,YAAY;wBACjB,KAAK,GAAG,KAAK,sBAAsB,CAAC;;;;;;;;;;;;;;;;0BAI1C,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAmK;;;;;;kCAGxL,8OAAC,kIAAA,CAAA,eAAY;wBACX,aAAa;wBACb,QAAQ,CAAC,UAAY,kBAAkB,cAAc;wBACrD,WAAU;;;;;;;;;;;;;;;;;;AAKpB;AAEA,2CAA2C;AAC3C,uCAAuC;AACvC,4CAA4C;AAC5C,sBAAsB;AACtB,iBAAiB;AACjB,4CAA4C;AAC5C,SAAS;AACT,kCAAkC;AAClC,QAAQ;AACR,uCAAuC;AACvC,8BAA8B;AAC9B,IAAI;AAEJ,eAAe,IAAI,OAAe;IAChC,MAAM,OAAO;QAAE,QAAQ;IAAQ;IAC/B,MAAM,MAAM,MAAM,MAAM,eAAe;QACrC,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IACA,MAAM,WAAW,MAAM,IAAI,IAAI;IAC/B,MAAM,MAAM,KAAK,KAAK,CAAC;IACvB,OAAO,IAAI,QAAQ;AACrB;AAEA,SAAS,YAAY,IAAY;IAC/B,MAAM,YAAwB,EAAE;IAChC,MAAM,QAAQ,KAAK,KAAK,CAAC,SAAS,KAAK,CAAC;IAExC,KAAK,MAAM,QAAQ,MAAO;QACxB,MAAM,CAAC,OAAO,GAAG,iBAAiB,GAAG,KAAK,KAAK,CAAC;QAChD,MAAM,cAAc,iBAAiB,IAAI,CAAC,KAAK,IAAI;QACnD,IAAI,SAAS,aAAa;YACxB,UAAU,IAAI,CAAC;gBACb,OAAO,MAAM,IAAI;gBACjB,aAAa,YAAY,OAAO,CAAC,OAAO;YAC1C;QACF;IACF;IAEA,OAAO;AACT;AAEA,SAAS,yBAAyB,IAAY;IAC5C,MAAM,QAAoB,EAAE;IAC5B,MAAM,QAAQ,KAAK,KAAK,CAAC,SAAS,KAAK,CAAC;IAExC,KAAK,MAAM,QAAQ,MAAO;QACxB,MAAM,CAAC,OAAO,GAAG,iBAAiB,GAAG,KAAK,KAAK,CAAC;QAChD,MAAM,kBAAkB,iBAAiB,IAAI,CAAC,KAAK,IAAI;QACvD,MAAM,CAAC,MAAM,WAAW,GAAG,gBAAgB,KAAK,CAAC;QAEjD,IAAI,SAAS,MAAM;YACjB,MAAM,IAAI,CAAC;gBACT,OAAO,MAAM,IAAI;gBACjB,aAAa,GAAG,KAAK,IAAI,GAAG,aAAa,EACvC,aAAa,WAAW,IAAI,KAAK,gBACjC;YACJ;QACF;IACF;IAEA,OAAO;AACT;AAEA,SAAS;IACP,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;kBACd,cAAA,8OAAC,gIAAA,CAAA,cAAW;sBACV,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;;;;;;AAIvB;AAEO,SAAS,YAAY,EAAE,EAAE,EAAkB;IAChD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,MAAM,cAAc;QAClB,kBAAkB,CAAC;IACrB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,WAAU;gBACV,SAAS;gBACT,cAAW;0BAEX,cAAA,8OAAC,oMAAA,CAAA,QAAK;oBAAC,WAAU;;;;;;;;;;;YAElB,gCACC,8OAAC;gBACC,UAAU,CAAC,yCAAyC,EAAE,IAAI;gBAC1D,cAAc,CAAC,wCAAwC,EAAE,IAAI;;;;;;;;;;;;AAKvE;AAEO,SAAS,MAAM,EACpB,QAAQ,EACR,YAAY,EAIb;IACC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAwB;IACjD,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAwB;IAErD,MAAM,kBAAkB,OACtB,MACA;QAEA,IAAI;YACF,MAAM,UAAU,SAAS,CAAC,SAAS,CAAC;YACpC,UAAU;YACV,WAAW,IAAM,UAAU,QAAQ;QACrC,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,yBAAyB;QACzC;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA8B;;;;;;0BAC5C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;kCAAI;;;;;;kCACL,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,8OAAC;wCAAE,KAAK;wCAAa,WAAU;kDAC5B;;;;;;;;;;;;0CAGL,8OAAC;gCACC,SAAS,IAAM,gBAAgB,UAAU;gCACzC,WAAU;gCACV,cAAW;0CAEV,2BACC,8OAAC,oMAAA,CAAA,QAAK;oCAAC,WAAU;;;;;yDAEjB,8OAAC,kMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;;;;;;;;;;;;kCAItB,8OAAC;kCAAI;;;;;;kCACL,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,8OAAC;wCAAE,KAAK;wCAAiB,WAAU;kDAChC;;;;;;;;;;;;0CAGL,8OAAC;gCACC,SAAS,IAAM,gBAAgB,cAAc;gCAC7C,WAAU;gCACV,cAAW;0CAEV,+BACC,8OAAC,oMAAA,CAAA,QAAK;oCAAC,WAAU;;;;;yDAEjB,8OAAC,kMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO9B;AAEA,eAAe,kBAAkB,OAAe,EAAE,OAAe;IAC/D,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,0BAA0B;YACrD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAS;YAAQ;QAC1C;QACA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QACA,QAAQ,GAAG,CAAC,GAAG,QAAQ,qBAAqB,CAAC;IAC/C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;IACzC;AACF"}},
    {"offset": {"line": 1621, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1627, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/app/viewOnlyPpt/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"next/navigation\";\nimport Loading from \"@/components/fancy-dark-loading\";\nimport { StockDataDisplay } from \"@/components/EditableStockData\";\nimport type { StockData } from \"../../../../types/StockData\";\n\nexport default function Page() {\n  const [stockData, setStockData] = useState<StockData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const loadStockData = async () => {\n      if (typeof id !== \"string\") {\n        setError(\"Invalid stock ticker\");\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        setIsLoading(true);\n        const fetchStockData = async (id: string) => {\n          const response = await fetch(\"/api/stock\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ ticker: id }),\n          });\n          if (!response.ok) {\n            throw new Error(\"Failed to fetch stock data\");\n          }\n          return await response.json();\n        };\n\n        const data = await fetchStockData(id);\n        console.log(data);\n        setStockData(data);\n      } catch (err) {\n        setError(\n          err instanceof Error ? err.message : \"Failed to load stock data\"\n        );\n        console.error(\"Error loading stock data:\", err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadStockData();\n  }, [id]);\n\n  if (isLoading) return <Loading />;\n  if (error) return <div className=\"text-red-500\">{error}</div>;\n  if (!stockData) return <div>No data available</div>;\n\n  return <StockDataDisplay id={id} data={stockData} />;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAQe,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IAC7D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,EAAE,EAAE,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB;YACpB,IAAI,OAAO,OAAO,UAAU;gBAC1B,SAAS;gBACT,aAAa;gBACb;YACF;YAEA,IAAI;gBACF,aAAa;gBACb,MAAM,iBAAiB,OAAO;oBAC5B,MAAM,WAAW,MAAM,MAAM,cAAc;wBACzC,QAAQ;wBACR,SAAS;4BACP,gBAAgB;wBAClB;wBACA,MAAM,KAAK,SAAS,CAAC;4BAAE,QAAQ;wBAAG;oBACpC;oBACA,IAAI,CAAC,SAAS,EAAE,EAAE;wBAChB,MAAM,IAAI,MAAM;oBAClB;oBACA,OAAO,MAAM,SAAS,IAAI;gBAC5B;gBAEA,MAAM,OAAO,MAAM,eAAe;gBAClC,QAAQ,GAAG,CAAC;gBACZ,aAAa;YACf,EAAE,OAAO,KAAK;gBACZ,SACE,eAAe,QAAQ,IAAI,OAAO,GAAG;gBAEvC,QAAQ,KAAK,CAAC,6BAA6B;YAC7C,SAAU;gBACR,aAAa;YACf;QACF;QAEA;IACF,GAAG;QAAC;KAAG;IAEP,IAAI,WAAW,qBAAO,8OAAC,8IAAA,CAAA,UAAO;;;;;IAC9B,IAAI,OAAO,qBAAO,8OAAC;QAAI,WAAU;kBAAgB;;;;;;IACjD,IAAI,CAAC,WAAW,qBAAO,8OAAC;kBAAI;;;;;;IAE5B,qBAAO,8OAAC,uIAAA,CAAA,mBAAgB;QAAC,IAAI;QAAI,MAAM;;;;;;AACzC"}},
    {"offset": {"line": 1713, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}