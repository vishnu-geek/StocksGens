{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/app/api/stock/route.js"],"sourcesContent":["import yahooFinance from \"yahoo-finance2\";\nimport dotenv from \"dotenv\";\nimport { NextResponse } from \"next/server\";\n\ndotenv.config();\n\nconst formatLargeNumber = (num) => {\n  if (!num) return \"N/A\";\n  if (num >= 1e12) return (num / 1e12).toFixed(2) + \"T\";\n  if (num >= 1e9) return (num / 1e9).toFixed(2) + \"B\";\n  if (num >= 1e6) return (num / 1e6).toFixed(2) + \"M\";\n  return num.toString();\n};\n\nexport async function POST(req) {\n  if (req.method !== \"POST\") {\n    return NextResponse.json({ error: \"Method not allowed\" }, { status: 405 });\n  }\n\n  try {\n    const body = await req.json();\n    const { ticker } = body;\n\n    if (!ticker) {\n      return NextResponse.json(\n        { error: \"Ticker symbol is required\" },\n        { status: 400 }\n      );\n    }\n\n    const quoteSummary = await yahooFinance.quoteSummary(ticker, {\n      modules: [\n        \"price\",\n        \"summaryProfile\",\n        \"financialData\",\n        \"defaultKeyStatistics\",\n        \"recommendationTrend\",\n        \"summaryDetail\",\n      ],\n    });\n\n    const stockData = {\n      name: quoteSummary.price?.longName || \"N/A\",\n      description: quoteSummary.summaryProfile?.longBusinessSummary || \"N/A\",\n      marketCap: formatLargeNumber(quoteSummary.price?.marketCap),\n      sharesOutstanding: formatLargeNumber(\n        quoteSummary.defaultKeyStatistics?.sharesOutstanding\n      ),\n      float: formatLargeNumber(quoteSummary.defaultKeyStatistics?.floatShares),\n      evEbitda:\n        quoteSummary.defaultKeyStatistics?.enterpriseToEbitda?.toFixed(2) ||\n        \"N/A\",\n      peTtm: quoteSummary.summaryDetail?.trailingPE?.toFixed(2) || \"N/A\",\n      dividendRate:\n        quoteSummary.summaryDetail?.dividendRate?.toFixed(2) || \"N/A\",\n      cashPosition: formatLargeNumber(quoteSummary.financialData?.totalCash),\n      totalDebt: formatLargeNumber(quoteSummary.financialData?.totalDebt),\n      debtToEquity:\n        quoteSummary.financialData?.debtToEquity?.toFixed(2) || \"N/A\",\n      currentRatio:\n        quoteSummary.financialData?.currentRatio?.toFixed(2) || \"N/A\",\n      strengthsAndCatalysts: \"Requires manual input or additional API\",\n      analystRating:\n        quoteSummary.financialData?.recommendationMean?.toFixed(2) || \"N/A\",\n      numberOfAnalysts:\n        quoteSummary.financialData?.numberOfAnalystOpinions?.toString() ||\n        \"N/A\",\n      meanTargetPrice:\n        quoteSummary.financialData?.targetMeanPrice?.toFixed(2) || \"N/A\",\n      impliedChange:\n        quoteSummary.financialData?.targetMeanPrice &&\n        quoteSummary.price?.regularMarketPrice\n          ? (\n              (quoteSummary.financialData.targetMeanPrice /\n                quoteSummary.price.regularMarketPrice -\n                1) *\n              100\n            ).toFixed(2) + \"%\"\n          : \"N/A\",\n      risksAndMitigation: \"Requires manual input or additional API\",\n      recommendation:\n        quoteSummary.recommendationTrend?.trend &&\n        quoteSummary.recommendationTrend.trend[0]?.strongBuy &&\n        quoteSummary.recommendationTrend.trend[0]?.sell\n          ? quoteSummary.recommendationTrend.trend[0].strongBuy >\n            quoteSummary.recommendationTrend.trend[0].sell\n            ? \"Buy\"\n            : \"Sell\"\n          : \"N/A\",\n    };\n\n    return NextResponse.json(stockData, { status: 200 });\n  } catch (error) {\n    console.error(\"Error fetching stock data:\", error);\n    return NextResponse.json(\n      { error: \"Failed to fetch stock data\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAFA;;;;AAIA,uIAAA,CAAA,UAAM,CAAC,MAAM;AAEb,MAAM,oBAAoB,CAAC;IACzB,IAAI,CAAC,KAAK,OAAO;IACjB,IAAI,OAAO,MAAM,OAAO,CAAC,MAAM,IAAI,EAAE,OAAO,CAAC,KAAK;IAClD,IAAI,OAAO,KAAK,OAAO,CAAC,MAAM,GAAG,EAAE,OAAO,CAAC,KAAK;IAChD,IAAI,OAAO,KAAK,OAAO,CAAC,MAAM,GAAG,EAAE,OAAO,CAAC,KAAK;IAChD,OAAO,IAAI,QAAQ;AACrB;AAEO,eAAe,KAAK,GAAG;IAC5B,IAAI,IAAI,MAAM,KAAK,QAAQ;QACzB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAqB,GAAG;YAAE,QAAQ;QAAI;IAC1E;IAEA,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,MAAM,EAAE,GAAG;QAEnB,IAAI,CAAC,QAAQ;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA4B,GACrC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,eAAe,MAAM,0LAAA,CAAA,UAAY,CAAC,YAAY,CAAC,QAAQ;YAC3D,SAAS;gBACP;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH;QAEA,MAAM,YAAY;YAChB,MAAM,aAAa,KAAK,EAAE,YAAY;YACtC,aAAa,aAAa,cAAc,EAAE,uBAAuB;YACjE,WAAW,kBAAkB,aAAa,KAAK,EAAE;YACjD,mBAAmB,kBACjB,aAAa,oBAAoB,EAAE;YAErC,OAAO,kBAAkB,aAAa,oBAAoB,EAAE;YAC5D,UACE,aAAa,oBAAoB,EAAE,oBAAoB,QAAQ,MAC/D;YACF,OAAO,aAAa,aAAa,EAAE,YAAY,QAAQ,MAAM;YAC7D,cACE,aAAa,aAAa,EAAE,cAAc,QAAQ,MAAM;YAC1D,cAAc,kBAAkB,aAAa,aAAa,EAAE;YAC5D,WAAW,kBAAkB,aAAa,aAAa,EAAE;YACzD,cACE,aAAa,aAAa,EAAE,cAAc,QAAQ,MAAM;YAC1D,cACE,aAAa,aAAa,EAAE,cAAc,QAAQ,MAAM;YAC1D,uBAAuB;YACvB,eACE,aAAa,aAAa,EAAE,oBAAoB,QAAQ,MAAM;YAChE,kBACE,aAAa,aAAa,EAAE,yBAAyB,cACrD;YACF,iBACE,aAAa,aAAa,EAAE,iBAAiB,QAAQ,MAAM;YAC7D,eACE,aAAa,aAAa,EAAE,mBAC5B,aAAa,KAAK,EAAE,qBAChB,CACE,CAAC,aAAa,aAAa,CAAC,eAAe,GACzC,aAAa,KAAK,CAAC,kBAAkB,GACrC,CAAC,IACH,GACF,EAAE,OAAO,CAAC,KAAK,MACf;YACN,oBAAoB;YACpB,gBACE,aAAa,mBAAmB,EAAE,SAClC,aAAa,mBAAmB,CAAC,KAAK,CAAC,EAAE,EAAE,aAC3C,aAAa,mBAAmB,CAAC,KAAK,CAAC,EAAE,EAAE,OACvC,aAAa,mBAAmB,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,GACnD,aAAa,mBAAmB,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,GAC5C,QACA,SACF;QACR;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,WAAW;YAAE,QAAQ;QAAI;IACpD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA6B,GACtC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}